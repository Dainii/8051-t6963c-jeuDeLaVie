                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (Oct 31 2010) (MINGW32)
                              4 ; This file was generated Mon Jan 23 19:50:56 2017
                              5 ;--------------------------------------------------------
                              6 	.module snake
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _bddSnakeGrows
                             13 	.globl _bddSnakeMovesTurnsAndCatchesAFruit
                             14 	.globl _bddSnakeHitsAnObstacle
                             15 	.globl _bddSnakeHitsThisObstacle
                             16 	.globl _bddSnakeHitsItsTail
                             17 	.globl _testSnakeHitsABorder
                             18 	.globl _testSnakeMoves
                             19 	.globl _testSnakeEatsAFruit
                             20 	.globl _testSnakeTurns
                             21 	.globl _testSnakeTurnsTo
                             22 	.globl _SNAKE_showBody
                             23 	.globl _SNAKE_showHead
                             24 	.globl _bddSnakeHitsThisObstacle_PARM_2
                             25 	.globl _testSnakeTurnsTo_PARM_4
                             26 	.globl _testSnakeTurnsTo_PARM_3
                             27 	.globl _testSnakeTurnsTo_PARM_2
                             28 	.globl _SNAKE_iterate_PARM_2
                             29 	.globl _SNAKE_turn_PARM_2
                             30 	.globl _SNAKE_move
                             31 	.globl _SNAKE_liveOrDie
                             32 	.globl _SNAKE_turn
                             33 	.globl _SNAKE_iterate
                             34 	.globl _testSnake
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                             38 	.area RSEG    (ABS,DATA)
   0000                      39 	.org 0x0000
                             40 ;--------------------------------------------------------
                             41 ; special function bits
                             42 ;--------------------------------------------------------
                             43 	.area RSEG    (ABS,DATA)
   0000                      44 	.org 0x0000
                             45 ;--------------------------------------------------------
                             46 ; overlayable register banks
                             47 ;--------------------------------------------------------
                             48 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      49 	.ds 8
                             50 ;--------------------------------------------------------
                             51 ; internal ram data
                             52 ;--------------------------------------------------------
                             53 	.area DSEG    (DATA)
                    0000     54 LSNAKE_move$sloc0$1$0==.
   0000                      55 _SNAKE_move_sloc0_1_0:
   0000                      56 	.ds 3
                             57 ;--------------------------------------------------------
                             58 ; overlayable items in internal ram 
                             59 ;--------------------------------------------------------
                             60 	.area OSEG    (OVR,DATA)
                             61 ;--------------------------------------------------------
                             62 ; indirectly addressable internal ram data
                             63 ;--------------------------------------------------------
                             64 	.area ISEG    (DATA)
                             65 ;--------------------------------------------------------
                             66 ; absolute internal ram data
                             67 ;--------------------------------------------------------
                             68 	.area IABS    (ABS,DATA)
                             69 	.area IABS    (ABS,DATA)
                             70 ;--------------------------------------------------------
                             71 ; bit data
                             72 ;--------------------------------------------------------
                             73 	.area BSEG    (BIT)
                             74 ;--------------------------------------------------------
                             75 ; paged external ram data
                             76 ;--------------------------------------------------------
                             77 	.area PSEG    (PAG,XDATA)
                             78 ;--------------------------------------------------------
                             79 ; external ram data
                             80 ;--------------------------------------------------------
                             81 	.area XSEG    (XDATA)
                    0000     82 LSNAKE_move$snake$1$1==.
   0000                      83 _SNAKE_move_snake_1_1:
   0000                      84 	.ds 3
                    0003     85 LSNAKE_liveOrDie$snake$1$1==.
   0003                      86 _SNAKE_liveOrDie_snake_1_1:
   0003                      87 	.ds 3
                    0006     88 LSNAKE_showHead$snake$1$1==.
   0006                      89 _SNAKE_showHead_snake_1_1:
   0006                      90 	.ds 3
                    0009     91 LSNAKE_showBody$snake$1$1==.
   0009                      92 _SNAKE_showBody_snake_1_1:
   0009                      93 	.ds 3
                    000C     94 LSNAKE_turn$arrow$1$1==.
   000C                      95 _SNAKE_turn_PARM_2:
   000C                      96 	.ds 1
                    000D     97 LSNAKE_turn$snake$1$1==.
   000D                      98 _SNAKE_turn_snake_1_1:
   000D                      99 	.ds 3
                    0010    100 LSNAKE_iterate$arrow$1$1==.
   0010                     101 _SNAKE_iterate_PARM_2:
   0010                     102 	.ds 1
                    0011    103 LSNAKE_iterate$snake$1$1==.
   0011                     104 _SNAKE_iterate_snake_1_1:
   0011                     105 	.ds 3
                    0014    106 LtestSnakeTurnsTo$turn$1$1==.
   0014                     107 _testSnakeTurnsTo_PARM_2:
   0014                     108 	.ds 1
                    0015    109 LtestSnakeTurnsTo$expectedResult$1$1==.
   0015                     110 _testSnakeTurnsTo_PARM_3:
   0015                     111 	.ds 1
                    0016    112 LtestSnakeTurnsTo$testCode$1$1==.
   0016                     113 _testSnakeTurnsTo_PARM_4:
   0016                     114 	.ds 3
                    0019    115 LtestSnakeTurnsTo$currentDirection$1$1==.
   0019                     116 _testSnakeTurnsTo_currentDirection_1_1:
   0019                     117 	.ds 1
                    001A    118 LtestSnakeTurnsTo$snake$1$1==.
   001A                     119 _testSnakeTurnsTo_snake_1_1:
   001A                     120 	.ds 5
                    001F    121 LtestSnakeEatsAFruit$snake$1$1==.
   001F                     122 _testSnakeEatsAFruit_snake_1_1:
   001F                     123 	.ds 5
                    0024    124 LtestSnakeMoves$snake$1$1==.
   0024                     125 _testSnakeMoves_snake_1_1:
   0024                     126 	.ds 5
                    0029    127 LtestSnakeHitsABorder$snake$1$1==.
   0029                     128 _testSnakeHitsABorder_snake_1_1:
   0029                     129 	.ds 5
                    002E    130 LbddSnakeHitsItsTail$c$1$1==.
   002E                     131 _bddSnakeHitsItsTail_c_1_1:
   002E                     132 	.ds 55
                    0065    133 LbddSnakeHitsItsTail$snake$1$1==.
   0065                     134 _bddSnakeHitsItsTail_snake_1_1:
   0065                     135 	.ds 5
                    006A    136 LbddSnakeHitsItsTail$n$1$1==.
   006A                     137 _bddSnakeHitsItsTail_n_1_1:
   006A                     138 	.ds 1
                    006B    139 LbddSnakeHitsThisObstacle$testId$1$1==.
   006B                     140 _bddSnakeHitsThisObstacle_PARM_2:
   006B                     141 	.ds 3
                    006E    142 LbddSnakeHitsThisObstacle$obstacle$1$1==.
   006E                     143 _bddSnakeHitsThisObstacle_obstacle_1_1:
   006E                     144 	.ds 1
                    006F    145 LbddSnakeHitsThisObstacle$c$1$1==.
   006F                     146 _bddSnakeHitsThisObstacle_c_1_1:
   006F                     147 	.ds 55
                    00A6    148 LbddSnakeHitsThisObstacle$snake$1$1==.
   00A6                     149 _bddSnakeHitsThisObstacle_snake_1_1:
   00A6                     150 	.ds 5
                    00AB    151 LbddSnakeHitsThisObstacle$n$1$1==.
   00AB                     152 _bddSnakeHitsThisObstacle_n_1_1:
   00AB                     153 	.ds 1
                    00AC    154 LbddSnakeMovesTurnsAndCatchesAFruit$c$1$1==.
   00AC                     155 _bddSnakeMovesTurnsAndCatchesAFruit_c_1_1:
   00AC                     156 	.ds 55
                    00E3    157 LbddSnakeMovesTurnsAndCatchesAFruit$snake$1$1==.
   00E3                     158 _bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1:
   00E3                     159 	.ds 5
                    00E8    160 LbddSnakeMovesTurnsAndCatchesAFruit$n$1$1==.
   00E8                     161 _bddSnakeMovesTurnsAndCatchesAFruit_n_1_1:
   00E8                     162 	.ds 1
                    00E9    163 LbddSnakeGrows$c$1$1==.
   00E9                     164 _bddSnakeGrows_c_1_1:
   00E9                     165 	.ds 55
                    0120    166 LbddSnakeGrows$snake$1$1==.
   0120                     167 _bddSnakeGrows_snake_1_1:
   0120                     168 	.ds 5
                    0125    169 LbddSnakeGrows$n$1$1==.
   0125                     170 _bddSnakeGrows_n_1_1:
   0125                     171 	.ds 1
                            172 ;--------------------------------------------------------
                            173 ; absolute external ram data
                            174 ;--------------------------------------------------------
                            175 	.area XABS    (ABS,XDATA)
                            176 ;--------------------------------------------------------
                            177 ; external initialized ram data
                            178 ;--------------------------------------------------------
                            179 	.area XISEG   (XDATA)
                            180 	.area HOME    (CODE)
                            181 	.area GSINIT0 (CODE)
                            182 	.area GSINIT1 (CODE)
                            183 	.area GSINIT2 (CODE)
                            184 	.area GSINIT3 (CODE)
                            185 	.area GSINIT4 (CODE)
                            186 	.area GSINIT5 (CODE)
                            187 	.area GSINIT  (CODE)
                            188 	.area GSFINAL (CODE)
                            189 	.area CSEG    (CODE)
                            190 ;--------------------------------------------------------
                            191 ; global & static initialisations
                            192 ;--------------------------------------------------------
                            193 	.area HOME    (CODE)
                            194 	.area GSINIT  (CODE)
                            195 	.area GSFINAL (CODE)
                            196 	.area GSINIT  (CODE)
                            197 ;--------------------------------------------------------
                            198 ; Home
                            199 ;--------------------------------------------------------
                            200 	.area HOME    (CODE)
                            201 	.area HOME    (CODE)
                            202 ;--------------------------------------------------------
                            203 ; code
                            204 ;--------------------------------------------------------
                            205 	.area CSEG    (CODE)
                            206 ;------------------------------------------------------------
                            207 ;Allocation info for local variables in function 'SNAKE_move'
                            208 ;------------------------------------------------------------
                            209 ;sloc0                     Allocated with name '_SNAKE_move_sloc0_1_0'
                            210 ;snake                     Allocated with name '_SNAKE_move_snake_1_1'
                            211 ;------------------------------------------------------------
                    0000    212 	G$SNAKE_move$0$0 ==.
                    0000    213 	C$snake.c$14$0$0 ==.
                            214 ;	../snake.c:14: void SNAKE_move(Snake *snake) {
                            215 ;	-----------------------------------------
                            216 ;	 function SNAKE_move
                            217 ;	-----------------------------------------
   0000                     218 _SNAKE_move:
                    0002    219 	ar2 = 0x02
                    0003    220 	ar3 = 0x03
                    0004    221 	ar4 = 0x04
                    0005    222 	ar5 = 0x05
                    0006    223 	ar6 = 0x06
                    0007    224 	ar7 = 0x07
                    0000    225 	ar0 = 0x00
                    0001    226 	ar1 = 0x01
   0000 AA F0               227 	mov	r2,b
   0002 AB 83               228 	mov	r3,dph
   0004 E5 82               229 	mov	a,dpl
   0006 90s00r00            230 	mov	dptr,#_SNAKE_move_snake_1_1
   0009 F0                  231 	movx	@dptr,a
   000A A3                  232 	inc	dptr
   000B EB                  233 	mov	a,r3
   000C F0                  234 	movx	@dptr,a
   000D A3                  235 	inc	dptr
   000E EA                  236 	mov	a,r2
   000F F0                  237 	movx	@dptr,a
                    0010    238 	C$snake.c$16$1$1 ==.
                            239 ;	../snake.c:16: BUFFER_in(snake->position.x);
   0010 90s00r00            240 	mov	dptr,#_SNAKE_move_snake_1_1
   0013 E0                  241 	movx	a,@dptr
   0014 FA                  242 	mov	r2,a
   0015 A3                  243 	inc	dptr
   0016 E0                  244 	movx	a,@dptr
   0017 FB                  245 	mov	r3,a
   0018 A3                  246 	inc	dptr
   0019 E0                  247 	movx	a,@dptr
   001A FC                  248 	mov	r4,a
   001B 74 01               249 	mov	a,#0x01
   001D 2A                  250 	add	a,r2
   001E FD                  251 	mov	r5,a
   001F E4                  252 	clr	a
   0020 3B                  253 	addc	a,r3
   0021 FE                  254 	mov	r6,a
   0022 8C 07               255 	mov	ar7,r4
   0024 8D 82               256 	mov	dpl,r5
   0026 8E 83               257 	mov	dph,r6
   0028 8F F0               258 	mov	b,r7
   002A 12s00r00            259 	lcall	__gptrget
   002D F5 82               260 	mov	dpl,a
   002F C0 02               261 	push	ar2
   0031 C0 03               262 	push	ar3
   0033 C0 04               263 	push	ar4
   0035 12s00r00            264 	lcall	_BUFFER_in
   0038 D0 04               265 	pop	ar4
   003A D0 03               266 	pop	ar3
   003C D0 02               267 	pop	ar2
                    003E    268 	C$snake.c$17$1$1 ==.
                            269 ;	../snake.c:17: BUFFER_in(snake->position.y);
   003E 74 01               270 	mov	a,#0x01
   0040 2A                  271 	add	a,r2
   0041 FD                  272 	mov	r5,a
   0042 E4                  273 	clr	a
   0043 3B                  274 	addc	a,r3
   0044 FE                  275 	mov	r6,a
   0045 8C 07               276 	mov	ar7,r4
   0047 74 02               277 	mov	a,#0x02
   0049 2A                  278 	add	a,r2
   004A F5*00               279 	mov	_SNAKE_move_sloc0_1_0,a
   004C E4                  280 	clr	a
   004D 3B                  281 	addc	a,r3
   004E F5*01               282 	mov	(_SNAKE_move_sloc0_1_0 + 1),a
   0050 8C*02               283 	mov	(_SNAKE_move_sloc0_1_0 + 2),r4
   0052 85*00 82            284 	mov	dpl,_SNAKE_move_sloc0_1_0
   0055 85*01 83            285 	mov	dph,(_SNAKE_move_sloc0_1_0 + 1)
   0058 85*02 F0            286 	mov	b,(_SNAKE_move_sloc0_1_0 + 2)
   005B 12s00r00            287 	lcall	__gptrget
   005E F5 82               288 	mov	dpl,a
   0060 C0 02               289 	push	ar2
   0062 C0 03               290 	push	ar3
   0064 C0 04               291 	push	ar4
   0066 C0 05               292 	push	ar5
   0068 C0 06               293 	push	ar6
   006A C0 07               294 	push	ar7
   006C 12s00r00            295 	lcall	_BUFFER_in
   006F D0 07               296 	pop	ar7
   0071 D0 06               297 	pop	ar6
   0073 D0 05               298 	pop	ar5
   0075 D0 04               299 	pop	ar4
   0077 D0 03               300 	pop	ar3
   0079 D0 02               301 	pop	ar2
                    007B    302 	C$snake.c$20$1$1 ==.
                            303 ;	../snake.c:20: switch (snake->direction) {
   007B 8A 82               304 	mov	dpl,r2
   007D 8B 83               305 	mov	dph,r3
   007F 8C F0               306 	mov	b,r4
   0081 12s00r00            307 	lcall	__gptrget
   0084 FA                  308 	mov	r2,a
   0085 74 03               309 	mov	a,#0x03
   0087 B5 02 00            310 	cjne	a,ar2,00110$
   008A                     311 00110$:
   008A 50 01               312 	jnc	00111$
   008C 22                  313 	ret
   008D                     314 00111$:
   008D EA                  315 	mov	a,r2
   008E 2A                  316 	add	a,r2
   008F 2A                  317 	add	a,r2
   0090 90s00r94            318 	mov	dptr,#00112$
   0093 73                  319 	jmp	@a+dptr
   0094                     320 00112$:
   0094 02s00rA0            321 	ljmp	00101$
   0097 02s00rBB            322 	ljmp	00102$
   009A 02s00rD6            323 	ljmp	00103$
   009D 02s00rEB            324 	ljmp	00104$
                    00A0    325 	C$snake.c$21$2$2 ==.
                            326 ;	../snake.c:21: case MOVES_UP :
   00A0                     327 00101$:
                    00A0    328 	C$snake.c$22$2$2 ==.
                            329 ;	../snake.c:22: snake->position.y--;
   00A0 85*00 82            330 	mov	dpl,_SNAKE_move_sloc0_1_0
   00A3 85*01 83            331 	mov	dph,(_SNAKE_move_sloc0_1_0 + 1)
   00A6 85*02 F0            332 	mov	b,(_SNAKE_move_sloc0_1_0 + 2)
   00A9 12s00r00            333 	lcall	__gptrget
   00AC FA                  334 	mov	r2,a
   00AD 1A                  335 	dec	r2
   00AE 85*00 82            336 	mov	dpl,_SNAKE_move_sloc0_1_0
   00B1 85*01 83            337 	mov	dph,(_SNAKE_move_sloc0_1_0 + 1)
   00B4 85*02 F0            338 	mov	b,(_SNAKE_move_sloc0_1_0 + 2)
   00B7 EA                  339 	mov	a,r2
                    00B8    340 	C$snake.c$23$2$2 ==.
                            341 ;	../snake.c:23: break;
                    00B8    342 	C$snake.c$25$2$2 ==.
                            343 ;	../snake.c:25: case MOVES_DOWN :
   00B8 02s00r00            344 	ljmp	__gptrput
   00BB                     345 00102$:
                    00BB    346 	C$snake.c$26$2$2 ==.
                            347 ;	../snake.c:26: snake->position.y++;
   00BB 85*00 82            348 	mov	dpl,_SNAKE_move_sloc0_1_0
   00BE 85*01 83            349 	mov	dph,(_SNAKE_move_sloc0_1_0 + 1)
   00C1 85*02 F0            350 	mov	b,(_SNAKE_move_sloc0_1_0 + 2)
   00C4 12s00r00            351 	lcall	__gptrget
   00C7 FA                  352 	mov	r2,a
   00C8 0A                  353 	inc	r2
   00C9 85*00 82            354 	mov	dpl,_SNAKE_move_sloc0_1_0
   00CC 85*01 83            355 	mov	dph,(_SNAKE_move_sloc0_1_0 + 1)
   00CF 85*02 F0            356 	mov	b,(_SNAKE_move_sloc0_1_0 + 2)
   00D2 EA                  357 	mov	a,r2
                    00D3    358 	C$snake.c$27$2$2 ==.
                            359 ;	../snake.c:27: break;
                    00D3    360 	C$snake.c$29$2$2 ==.
                            361 ;	../snake.c:29: case MOVES_LEFT :
   00D3 02s00r00            362 	ljmp	__gptrput
   00D6                     363 00103$:
                    00D6    364 	C$snake.c$30$2$2 ==.
                            365 ;	../snake.c:30: snake->position.x--;
   00D6 8D 82               366 	mov	dpl,r5
   00D8 8E 83               367 	mov	dph,r6
   00DA 8F F0               368 	mov	b,r7
   00DC 12s00r00            369 	lcall	__gptrget
   00DF FA                  370 	mov	r2,a
   00E0 1A                  371 	dec	r2
   00E1 8D 82               372 	mov	dpl,r5
   00E3 8E 83               373 	mov	dph,r6
   00E5 8F F0               374 	mov	b,r7
   00E7 EA                  375 	mov	a,r2
                    00E8    376 	C$snake.c$31$2$2 ==.
                            377 ;	../snake.c:31: break;
                    00E8    378 	C$snake.c$33$2$2 ==.
                            379 ;	../snake.c:33: case MOVES_RIGHT :
   00E8 02s00r00            380 	ljmp	__gptrput
   00EB                     381 00104$:
                    00EB    382 	C$snake.c$34$2$2 ==.
                            383 ;	../snake.c:34: snake->position.x++;
   00EB 8D 82               384 	mov	dpl,r5
   00ED 8E 83               385 	mov	dph,r6
   00EF 8F F0               386 	mov	b,r7
   00F1 12s00r00            387 	lcall	__gptrget
   00F4 FA                  388 	mov	r2,a
   00F5 0A                  389 	inc	r2
   00F6 8D 82               390 	mov	dpl,r5
   00F8 8E 83               391 	mov	dph,r6
   00FA 8F F0               392 	mov	b,r7
   00FC EA                  393 	mov	a,r2
                    00FD    394 	C$snake.c$39$1$1 ==.
                            395 ;	../snake.c:39: }
                    00FD    396 	C$snake.c$40$1$1 ==.
                    00FD    397 	XG$SNAKE_move$0$0 ==.
   00FD 02s00r00            398 	ljmp	__gptrput
                            399 ;------------------------------------------------------------
                            400 ;Allocation info for local variables in function 'SNAKE_liveOrDie'
                            401 ;------------------------------------------------------------
                            402 ;snake                     Allocated with name '_SNAKE_liveOrDie_snake_1_1'
                            403 ;c                         Allocated with name '_SNAKE_liveOrDie_c_1_1'
                            404 ;------------------------------------------------------------
                    0100    405 	G$SNAKE_liveOrDie$0$0 ==.
                    0100    406 	C$snake.c$47$1$1 ==.
                            407 ;	../snake.c:47: void SNAKE_liveOrDie(Snake *snake) {
                            408 ;	-----------------------------------------
                            409 ;	 function SNAKE_liveOrDie
                            410 ;	-----------------------------------------
   0100                     411 _SNAKE_liveOrDie:
   0100 AA F0               412 	mov	r2,b
   0102 AB 83               413 	mov	r3,dph
   0104 E5 82               414 	mov	a,dpl
   0106 90s00r03            415 	mov	dptr,#_SNAKE_liveOrDie_snake_1_1
   0109 F0                  416 	movx	@dptr,a
   010A A3                  417 	inc	dptr
   010B EB                  418 	mov	a,r3
   010C F0                  419 	movx	@dptr,a
   010D A3                  420 	inc	dptr
   010E EA                  421 	mov	a,r2
   010F F0                  422 	movx	@dptr,a
                    0110    423 	C$snake.c$48$1$1 ==.
                            424 ;	../snake.c:48: unsigned char c = T6963C_readFrom(snake->position.x, snake->position.y);
   0110 90s00r03            425 	mov	dptr,#_SNAKE_liveOrDie_snake_1_1
   0113 E0                  426 	movx	a,@dptr
   0114 FA                  427 	mov	r2,a
   0115 A3                  428 	inc	dptr
   0116 E0                  429 	movx	a,@dptr
   0117 FB                  430 	mov	r3,a
   0118 A3                  431 	inc	dptr
   0119 E0                  432 	movx	a,@dptr
   011A FC                  433 	mov	r4,a
   011B 74 01               434 	mov	a,#0x01
   011D 2A                  435 	add	a,r2
   011E FD                  436 	mov	r5,a
   011F E4                  437 	clr	a
   0120 3B                  438 	addc	a,r3
   0121 FE                  439 	mov	r6,a
   0122 8C 07               440 	mov	ar7,r4
   0124 8D 82               441 	mov	dpl,r5
   0126 8E 83               442 	mov	dph,r6
   0128 8F F0               443 	mov	b,r7
   012A 12s00r00            444 	lcall	__gptrget
   012D FD                  445 	mov	r5,a
   012E 74 02               446 	mov	a,#0x02
   0130 2A                  447 	add	a,r2
   0131 FE                  448 	mov	r6,a
   0132 E4                  449 	clr	a
   0133 3B                  450 	addc	a,r3
   0134 FF                  451 	mov	r7,a
   0135 8C 00               452 	mov	ar0,r4
   0137 8E 82               453 	mov	dpl,r6
   0139 8F 83               454 	mov	dph,r7
   013B 88 F0               455 	mov	b,r0
   013D 12s00r00            456 	lcall	__gptrget
   0140 90s00r00            457 	mov	dptr,#_T6963C_readFrom_PARM_2
   0143 F0                  458 	movx	@dptr,a
   0144 8D 82               459 	mov	dpl,r5
   0146 C0 02               460 	push	ar2
   0148 C0 03               461 	push	ar3
   014A C0 04               462 	push	ar4
   014C 12s00r00            463 	lcall	_T6963C_readFrom
   014F AD 82               464 	mov	r5,dpl
   0151 D0 04               465 	pop	ar4
   0153 D0 03               466 	pop	ar3
   0155 D0 02               467 	pop	ar2
                    0157    468 	C$snake.c$50$1$1 ==.
                            469 ;	../snake.c:50: switch (c) {
   0157 BD 11 02            470 	cjne	r5,#0x11,00124$
   015A 80 2B               471 	sjmp	00109$
   015C                     472 00124$:
   015C BD 15 02            473 	cjne	r5,#0x15,00125$
   015F 80 3A               474 	sjmp	00110$
   0161                     475 00125$:
   0161 BD 21 02            476 	cjne	r5,#0x21,00126$
   0164 80 21               477 	sjmp	00109$
   0166                     478 00126$:
   0166 BD 22 02            479 	cjne	r5,#0x22,00127$
   0169 80 1C               480 	sjmp	00109$
   016B                     481 00127$:
   016B BD 23 02            482 	cjne	r5,#0x23,00128$
   016E 80 17               483 	sjmp	00109$
   0170                     484 00128$:
   0170 BD 24 02            485 	cjne	r5,#0x24,00129$
   0173 80 12               486 	sjmp	00109$
   0175                     487 00129$:
   0175 BD 25 02            488 	cjne	r5,#0x25,00130$
   0178 80 0D               489 	sjmp	00109$
   017A                     490 00130$:
   017A BD 26 02            491 	cjne	r5,#0x26,00131$
   017D 80 08               492 	sjmp	00109$
   017F                     493 00131$:
   017F BD 27 02            494 	cjne	r5,#0x27,00132$
   0182 80 03               495 	sjmp	00109$
   0184                     496 00132$:
   0184 BD 28 48            497 	cjne	r5,#0x28,00111$
                    0187    498 	C$snake.c$59$2$2 ==.
                            499 ;	../snake.c:59: case SNAKE_BODY:  
   0187                     500 00109$:
                    0187    501 	C$snake.c$60$2$2 ==.
                            502 ;	../snake.c:60: snake->status = DEAD;
   0187 74 03               503 	mov	a,#0x03
   0189 2A                  504 	add	a,r2
   018A FD                  505 	mov	r5,a
   018B E4                  506 	clr	a
   018C 3B                  507 	addc	a,r3
   018D FE                  508 	mov	r6,a
   018E 8C 07               509 	mov	ar7,r4
   0190 8D 82               510 	mov	dpl,r5
   0192 8E 83               511 	mov	dph,r6
   0194 8F F0               512 	mov	b,r7
   0196 74 01               513 	mov	a,#0x01
                    0198    514 	C$snake.c$61$2$2 ==.
                            515 ;	../snake.c:61: break;
                    0198    516 	C$snake.c$63$2$2 ==.
                            517 ;	../snake.c:63: case FRUIT :
   0198 02s00r00            518 	ljmp	__gptrput
   019B                     519 00110$:
                    019B    520 	C$snake.c$64$2$2 ==.
                            521 ;	../snake.c:64: snake->status = EATING;
   019B 74 03               522 	mov	a,#0x03
   019D 2A                  523 	add	a,r2
   019E FD                  524 	mov	r5,a
   019F E4                  525 	clr	a
   01A0 3B                  526 	addc	a,r3
   01A1 FE                  527 	mov	r6,a
   01A2 8C 07               528 	mov	ar7,r4
   01A4 8D 82               529 	mov	dpl,r5
   01A6 8E 83               530 	mov	dph,r6
   01A8 8F F0               531 	mov	b,r7
   01AA 74 02               532 	mov	a,#0x02
   01AC 12s00r00            533 	lcall	__gptrput
                    01AF    534 	C$snake.c$65$2$2 ==.
                            535 ;	../snake.c:65: snake->caloriesLeft += FRUIT_CALORIES;
   01AF 74 04               536 	mov	a,#0x04
   01B1 2A                  537 	add	a,r2
   01B2 FD                  538 	mov	r5,a
   01B3 E4                  539 	clr	a
   01B4 3B                  540 	addc	a,r3
   01B5 FE                  541 	mov	r6,a
   01B6 8C 07               542 	mov	ar7,r4
   01B8 8D 82               543 	mov	dpl,r5
   01BA 8E 83               544 	mov	dph,r6
   01BC 8F F0               545 	mov	b,r7
   01BE 12s00r00            546 	lcall	__gptrget
   01C1 F8                  547 	mov	r0,a
   01C2 08                  548 	inc	r0
   01C3 08                  549 	inc	r0
   01C4 08                  550 	inc	r0
   01C5 8D 82               551 	mov	dpl,r5
   01C7 8E 83               552 	mov	dph,r6
   01C9 8F F0               553 	mov	b,r7
   01CB E8                  554 	mov	a,r0
                    01CC    555 	C$snake.c$66$2$2 ==.
                            556 ;	../snake.c:66: break;
                    01CC    557 	C$snake.c$68$2$2 ==.
                            558 ;	../snake.c:68: default: 
   01CC 02s00r00            559 	ljmp	__gptrput
   01CF                     560 00111$:
                    01CF    561 	C$snake.c$69$2$2 ==.
                            562 ;	../snake.c:69: snake->status = ALIVE;
   01CF 74 03               563 	mov	a,#0x03
   01D1 2A                  564 	add	a,r2
   01D2 FA                  565 	mov	r2,a
   01D3 E4                  566 	clr	a
   01D4 3B                  567 	addc	a,r3
   01D5 FB                  568 	mov	r3,a
   01D6 8A 82               569 	mov	dpl,r2
   01D8 8B 83               570 	mov	dph,r3
   01DA 8C F0               571 	mov	b,r4
   01DC E4                  572 	clr	a
                    01DD    573 	C$snake.c$70$1$1 ==.
                            574 ;	../snake.c:70: }
                    01DD    575 	C$snake.c$71$1$1 ==.
                    01DD    576 	XG$SNAKE_liveOrDie$0$0 ==.
   01DD 02s00r00            577 	ljmp	__gptrput
                            578 ;------------------------------------------------------------
                            579 ;Allocation info for local variables in function 'SNAKE_showHead'
                            580 ;------------------------------------------------------------
                            581 ;snake                     Allocated with name '_SNAKE_showHead_snake_1_1'
                            582 ;------------------------------------------------------------
                    01E0    583 	G$SNAKE_showHead$0$0 ==.
                    01E0    584 	C$snake.c$77$1$1 ==.
                            585 ;	../snake.c:77: void SNAKE_showHead(Snake *snake) {
                            586 ;	-----------------------------------------
                            587 ;	 function SNAKE_showHead
                            588 ;	-----------------------------------------
   01E0                     589 _SNAKE_showHead:
   01E0 AA F0               590 	mov	r2,b
   01E2 AB 83               591 	mov	r3,dph
   01E4 E5 82               592 	mov	a,dpl
   01E6 90s00r06            593 	mov	dptr,#_SNAKE_showHead_snake_1_1
   01E9 F0                  594 	movx	@dptr,a
   01EA A3                  595 	inc	dptr
   01EB EB                  596 	mov	a,r3
   01EC F0                  597 	movx	@dptr,a
   01ED A3                  598 	inc	dptr
   01EE EA                  599 	mov	a,r2
   01EF F0                  600 	movx	@dptr,a
                    01F0    601 	C$snake.c$78$1$1 ==.
                            602 ;	../snake.c:78: if (snake->status == DEAD){
   01F0 90s00r06            603 	mov	dptr,#_SNAKE_showHead_snake_1_1
   01F3 E0                  604 	movx	a,@dptr
   01F4 FA                  605 	mov	r2,a
   01F5 A3                  606 	inc	dptr
   01F6 E0                  607 	movx	a,@dptr
   01F7 FB                  608 	mov	r3,a
   01F8 A3                  609 	inc	dptr
   01F9 E0                  610 	movx	a,@dptr
   01FA FC                  611 	mov	r4,a
   01FB 74 03               612 	mov	a,#0x03
   01FD 2A                  613 	add	a,r2
   01FE FD                  614 	mov	r5,a
   01FF E4                  615 	clr	a
   0200 3B                  616 	addc	a,r3
   0201 FE                  617 	mov	r6,a
   0202 8C 07               618 	mov	ar7,r4
   0204 8D 82               619 	mov	dpl,r5
   0206 8E 83               620 	mov	dph,r6
   0208 8F F0               621 	mov	b,r7
   020A 12s00r00            622 	lcall	__gptrget
   020D F8                  623 	mov	r0,a
   020E B8 01 59            624 	cjne	r0,#0x01,00102$
                    0211    625 	C$snake.c$79$2$1 ==.
                            626 ;	../snake.c:79: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_DEAD);
   0211 C0 05               627 	push	ar5
   0213 C0 06               628 	push	ar6
   0215 C0 07               629 	push	ar7
   0217 74 01               630 	mov	a,#0x01
   0219 2A                  631 	add	a,r2
   021A F8                  632 	mov	r0,a
   021B E4                  633 	clr	a
   021C 3B                  634 	addc	a,r3
   021D F9                  635 	mov	r1,a
   021E 8C 05               636 	mov	ar5,r4
   0220 88 82               637 	mov	dpl,r0
   0222 89 83               638 	mov	dph,r1
   0224 8D F0               639 	mov	b,r5
   0226 12s00r00            640 	lcall	__gptrget
   0229 F8                  641 	mov	r0,a
   022A 74 02               642 	mov	a,#0x02
   022C 2A                  643 	add	a,r2
   022D FD                  644 	mov	r5,a
   022E E4                  645 	clr	a
   022F 3B                  646 	addc	a,r3
   0230 FE                  647 	mov	r6,a
   0231 8C 07               648 	mov	ar7,r4
   0233 8D 82               649 	mov	dpl,r5
   0235 8E 83               650 	mov	dph,r6
   0237 8F F0               651 	mov	b,r7
   0239 12s00r00            652 	lcall	__gptrget
   023C FD                  653 	mov	r5,a
   023D 90s00r00            654 	mov	dptr,#_T6963C_writeAt_PARM_2
   0240 F0                  655 	movx	@dptr,a
   0241 90s00r00            656 	mov	dptr,#_T6963C_writeAt_PARM_3
   0244 74 14               657 	mov	a,#0x14
   0246 F0                  658 	movx	@dptr,a
   0247 88 82               659 	mov	dpl,r0
   0249 C0 02               660 	push	ar2
   024B C0 03               661 	push	ar3
   024D C0 04               662 	push	ar4
   024F C0 05               663 	push	ar5
   0251 C0 06               664 	push	ar6
   0253 C0 07               665 	push	ar7
   0255 12s00r00            666 	lcall	_T6963C_writeAt
   0258 D0 07               667 	pop	ar7
   025A D0 06               668 	pop	ar6
   025C D0 05               669 	pop	ar5
   025E D0 04               670 	pop	ar4
   0260 D0 03               671 	pop	ar3
   0262 D0 02               672 	pop	ar2
                    0264    673 	C$snake.c$82$2$1 ==.
                            674 ;	../snake.c:82: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_HEAD);
   0264 D0 07               675 	pop	ar7
   0266 D0 06               676 	pop	ar6
   0268 D0 05               677 	pop	ar5
                    026A    678 	C$snake.c$79$1$1 ==.
                            679 ;	../snake.c:79: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_DEAD);
   026A                     680 00102$:
                    026A    681 	C$snake.c$81$1$1 ==.
                            682 ;	../snake.c:81: if (snake->status == ALIVE){
   026A 8D 82               683 	mov	dpl,r5
   026C 8E 83               684 	mov	dph,r6
   026E 8F F0               685 	mov	b,r7
   0270 12s00r00            686 	lcall	__gptrget
   0273 70 32               687 	jnz	00105$
                    0275    688 	C$snake.c$82$2$3 ==.
                            689 ;	../snake.c:82: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_HEAD);
   0275 74 01               690 	mov	a,#0x01
   0277 2A                  691 	add	a,r2
   0278 FD                  692 	mov	r5,a
   0279 E4                  693 	clr	a
   027A 3B                  694 	addc	a,r3
   027B FE                  695 	mov	r6,a
   027C 8C 07               696 	mov	ar7,r4
   027E 8D 82               697 	mov	dpl,r5
   0280 8E 83               698 	mov	dph,r6
   0282 8F F0               699 	mov	b,r7
   0284 12s00r00            700 	lcall	__gptrget
   0287 FD                  701 	mov	r5,a
   0288 74 02               702 	mov	a,#0x02
   028A 2A                  703 	add	a,r2
   028B FA                  704 	mov	r2,a
   028C E4                  705 	clr	a
   028D 3B                  706 	addc	a,r3
   028E FB                  707 	mov	r3,a
   028F 8A 82               708 	mov	dpl,r2
   0291 8B 83               709 	mov	dph,r3
   0293 8C F0               710 	mov	b,r4
   0295 12s00r00            711 	lcall	__gptrget
   0298 90s00r00            712 	mov	dptr,#_T6963C_writeAt_PARM_2
   029B F0                  713 	movx	@dptr,a
   029C 90s00r00            714 	mov	dptr,#_T6963C_writeAt_PARM_3
   029F 74 13               715 	mov	a,#0x13
   02A1 F0                  716 	movx	@dptr,a
   02A2 8D 82               717 	mov	dpl,r5
                    02A4    718 	C$snake.c$84$2$1 ==.
                    02A4    719 	XG$SNAKE_showHead$0$0 ==.
   02A4 02s00r00            720 	ljmp	_T6963C_writeAt
   02A7                     721 00105$:
   02A7 22                  722 	ret
                            723 ;------------------------------------------------------------
                            724 ;Allocation info for local variables in function 'SNAKE_showBody'
                            725 ;------------------------------------------------------------
                            726 ;snake                     Allocated with name '_SNAKE_showBody_snake_1_1'
                            727 ;------------------------------------------------------------
                    02A8    728 	G$SNAKE_showBody$0$0 ==.
                    02A8    729 	C$snake.c$91$2$1 ==.
                            730 ;	../snake.c:91: void SNAKE_showBody(Snake *snake) {
                            731 ;	-----------------------------------------
                            732 ;	 function SNAKE_showBody
                            733 ;	-----------------------------------------
   02A8                     734 _SNAKE_showBody:
   02A8 AA F0               735 	mov	r2,b
   02AA AB 83               736 	mov	r3,dph
   02AC E5 82               737 	mov	a,dpl
   02AE 90s00r09            738 	mov	dptr,#_SNAKE_showBody_snake_1_1
   02B1 F0                  739 	movx	@dptr,a
   02B2 A3                  740 	inc	dptr
   02B3 EB                  741 	mov	a,r3
   02B4 F0                  742 	movx	@dptr,a
   02B5 A3                  743 	inc	dptr
   02B6 EA                  744 	mov	a,r2
   02B7 F0                  745 	movx	@dptr,a
                    02B8    746 	C$snake.c$93$1$1 ==.
                            747 ;	../snake.c:93: if (snake->status == EATING){
   02B8 90s00r09            748 	mov	dptr,#_SNAKE_showBody_snake_1_1
   02BB E0                  749 	movx	a,@dptr
   02BC FA                  750 	mov	r2,a
   02BD A3                  751 	inc	dptr
   02BE E0                  752 	movx	a,@dptr
   02BF FB                  753 	mov	r3,a
   02C0 A3                  754 	inc	dptr
   02C1 E0                  755 	movx	a,@dptr
   02C2 FC                  756 	mov	r4,a
   02C3 74 03               757 	mov	a,#0x03
   02C5 2A                  758 	add	a,r2
   02C6 FD                  759 	mov	r5,a
   02C7 E4                  760 	clr	a
   02C8 3B                  761 	addc	a,r3
   02C9 FE                  762 	mov	r6,a
   02CA 8C 07               763 	mov	ar7,r4
   02CC 8D 82               764 	mov	dpl,r5
   02CE 8E 83               765 	mov	dph,r6
   02D0 8F F0               766 	mov	b,r7
   02D2 12s00r00            767 	lcall	__gptrget
   02D5 FD                  768 	mov	r5,a
   02D6 BD 02 42            769 	cjne	r5,#0x02,00102$
                    02D9    770 	C$snake.c$94$2$2 ==.
                            771 ;	../snake.c:94: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_SWALLOW);
   02D9 74 01               772 	mov	a,#0x01
   02DB 2A                  773 	add	a,r2
   02DC FD                  774 	mov	r5,a
   02DD E4                  775 	clr	a
   02DE 3B                  776 	addc	a,r3
   02DF FE                  777 	mov	r6,a
   02E0 8C 07               778 	mov	ar7,r4
   02E2 8D 82               779 	mov	dpl,r5
   02E4 8E 83               780 	mov	dph,r6
   02E6 8F F0               781 	mov	b,r7
   02E8 12s00r00            782 	lcall	__gptrget
   02EB FD                  783 	mov	r5,a
   02EC 74 02               784 	mov	a,#0x02
   02EE 2A                  785 	add	a,r2
   02EF FE                  786 	mov	r6,a
   02F0 E4                  787 	clr	a
   02F1 3B                  788 	addc	a,r3
   02F2 FF                  789 	mov	r7,a
   02F3 8C 00               790 	mov	ar0,r4
   02F5 8E 82               791 	mov	dpl,r6
   02F7 8F 83               792 	mov	dph,r7
   02F9 88 F0               793 	mov	b,r0
   02FB 12s00r00            794 	lcall	__gptrget
   02FE 90s00r00            795 	mov	dptr,#_T6963C_writeAt_PARM_2
   0301 F0                  796 	movx	@dptr,a
   0302 90s00r00            797 	mov	dptr,#_T6963C_writeAt_PARM_3
   0305 74 12               798 	mov	a,#0x12
   0307 F0                  799 	movx	@dptr,a
   0308 8D 82               800 	mov	dpl,r5
   030A C0 02               801 	push	ar2
   030C C0 03               802 	push	ar3
   030E C0 04               803 	push	ar4
   0310 12s00r00            804 	lcall	_T6963C_writeAt
   0313 D0 04               805 	pop	ar4
   0315 D0 03               806 	pop	ar3
   0317 D0 02               807 	pop	ar2
   0319 80 40               808 	sjmp	00103$
   031B                     809 00102$:
                    031B    810 	C$snake.c$96$2$3 ==.
                            811 ;	../snake.c:96: T6963C_writeAt(snake->position.x, snake->position.y, SNAKE_BODY);
   031B 74 01               812 	mov	a,#0x01
   031D 2A                  813 	add	a,r2
   031E FD                  814 	mov	r5,a
   031F E4                  815 	clr	a
   0320 3B                  816 	addc	a,r3
   0321 FE                  817 	mov	r6,a
   0322 8C 07               818 	mov	ar7,r4
   0324 8D 82               819 	mov	dpl,r5
   0326 8E 83               820 	mov	dph,r6
   0328 8F F0               821 	mov	b,r7
   032A 12s00r00            822 	lcall	__gptrget
   032D FD                  823 	mov	r5,a
   032E 74 02               824 	mov	a,#0x02
   0330 2A                  825 	add	a,r2
   0331 FE                  826 	mov	r6,a
   0332 E4                  827 	clr	a
   0333 3B                  828 	addc	a,r3
   0334 FF                  829 	mov	r7,a
   0335 8C 00               830 	mov	ar0,r4
   0337 8E 82               831 	mov	dpl,r6
   0339 8F 83               832 	mov	dph,r7
   033B 88 F0               833 	mov	b,r0
   033D 12s00r00            834 	lcall	__gptrget
   0340 90s00r00            835 	mov	dptr,#_T6963C_writeAt_PARM_2
   0343 F0                  836 	movx	@dptr,a
   0344 90s00r00            837 	mov	dptr,#_T6963C_writeAt_PARM_3
   0347 74 11               838 	mov	a,#0x11
   0349 F0                  839 	movx	@dptr,a
   034A 8D 82               840 	mov	dpl,r5
   034C C0 02               841 	push	ar2
   034E C0 03               842 	push	ar3
   0350 C0 04               843 	push	ar4
   0352 12s00r00            844 	lcall	_T6963C_writeAt
   0355 D0 04               845 	pop	ar4
   0357 D0 03               846 	pop	ar3
   0359 D0 02               847 	pop	ar2
   035B                     848 00103$:
                    035B    849 	C$snake.c$100$1$1 ==.
                            850 ;	../snake.c:100: if (snake->caloriesLeft == 0){
   035B 74 04               851 	mov	a,#0x04
   035D 2A                  852 	add	a,r2
   035E FA                  853 	mov	r2,a
   035F E4                  854 	clr	a
   0360 3B                  855 	addc	a,r3
   0361 FB                  856 	mov	r3,a
   0362 8A 82               857 	mov	dpl,r2
   0364 8B 83               858 	mov	dph,r3
   0366 8C F0               859 	mov	b,r4
   0368 12s00r00            860 	lcall	__gptrget
   036B 70 29               861 	jnz	00105$
                    036D    862 	C$snake.c$101$2$4 ==.
                            863 ;	../snake.c:101: T6963C_writeAt(BUFFER_out(), BUFFER_out(), EMPTY);
   036D C0 02               864 	push	ar2
   036F C0 03               865 	push	ar3
   0371 C0 04               866 	push	ar4
   0373 12s00r00            867 	lcall	_BUFFER_out
   0376 AD 82               868 	mov	r5,dpl
   0378 C0 05               869 	push	ar5
   037A 12s00r00            870 	lcall	_BUFFER_out
   037D AE 82               871 	mov	r6,dpl
   037F D0 05               872 	pop	ar5
   0381 90s00r00            873 	mov	dptr,#_T6963C_writeAt_PARM_2
   0384 EE                  874 	mov	a,r6
   0385 F0                  875 	movx	@dptr,a
   0386 90s00r00            876 	mov	dptr,#_T6963C_writeAt_PARM_3
   0389 E4                  877 	clr	a
   038A F0                  878 	movx	@dptr,a
   038B 8D 82               879 	mov	dpl,r5
   038D 12s00r00            880 	lcall	_T6963C_writeAt
   0390 D0 04               881 	pop	ar4
   0392 D0 03               882 	pop	ar3
   0394 D0 02               883 	pop	ar2
   0396                     884 00105$:
                    0396    885 	C$snake.c$104$1$1 ==.
                            886 ;	../snake.c:104: if (snake->caloriesLeft != 0){
   0396 8A 82               887 	mov	dpl,r2
   0398 8B 83               888 	mov	dph,r3
   039A 8C F0               889 	mov	b,r4
   039C 12s00r00            890 	lcall	__gptrget
   039F FD                  891 	mov	r5,a
   03A0 60 0B               892 	jz	00108$
                    03A2    893 	C$snake.c$105$2$5 ==.
                            894 ;	../snake.c:105: snake->caloriesLeft --;
   03A2 1D                  895 	dec	r5
   03A3 8A 82               896 	mov	dpl,r2
   03A5 8B 83               897 	mov	dph,r3
   03A7 8C F0               898 	mov	b,r4
   03A9 ED                  899 	mov	a,r5
                    03AA    900 	C$snake.c$107$2$1 ==.
                    03AA    901 	XG$SNAKE_showBody$0$0 ==.
   03AA 02s00r00            902 	ljmp	__gptrput
   03AD                     903 00108$:
   03AD 22                  904 	ret
                            905 ;------------------------------------------------------------
                            906 ;Allocation info for local variables in function 'SNAKE_turn'
                            907 ;------------------------------------------------------------
                            908 ;arrow                     Allocated with name '_SNAKE_turn_PARM_2'
                            909 ;snake                     Allocated with name '_SNAKE_turn_snake_1_1'
                            910 ;------------------------------------------------------------
                    03AE    911 	G$SNAKE_turn$0$0 ==.
                    03AE    912 	C$snake.c$115$2$1 ==.
                            913 ;	../snake.c:115: void SNAKE_turn(Snake *snake, Arrow arrow) {
                            914 ;	-----------------------------------------
                            915 ;	 function SNAKE_turn
                            916 ;	-----------------------------------------
   03AE                     917 _SNAKE_turn:
   03AE AA F0               918 	mov	r2,b
   03B0 AB 83               919 	mov	r3,dph
   03B2 E5 82               920 	mov	a,dpl
   03B4 90s00r0D            921 	mov	dptr,#_SNAKE_turn_snake_1_1
   03B7 F0                  922 	movx	@dptr,a
   03B8 A3                  923 	inc	dptr
   03B9 EB                  924 	mov	a,r3
   03BA F0                  925 	movx	@dptr,a
   03BB A3                  926 	inc	dptr
   03BC EA                  927 	mov	a,r2
   03BD F0                  928 	movx	@dptr,a
                    03BE    929 	C$snake.c$116$1$1 ==.
                            930 ;	../snake.c:116: switch (arrow) {
   03BE 90s00r0C            931 	mov	dptr,#_SNAKE_turn_PARM_2
   03C1 E0                  932 	movx	a,@dptr
   03C2 FA                  933 	mov	r2,a
   03C3 BA 01 02            934 	cjne	r2,#0x01,00125$
   03C6 80 58               935 	sjmp	00107$
   03C8                     936 00125$:
   03C8 BA 02 02            937 	cjne	r2,#0x02,00126$
   03CB 80 76               938 	sjmp	00110$
   03CD                     939 00126$:
   03CD BA 03 02            940 	cjne	r2,#0x03,00127$
   03D0 80 2A               941 	sjmp	00104$
   03D2                     942 00127$:
   03D2 BA 04 02            943 	cjne	r2,#0x04,00128$
   03D5 80 01               944 	sjmp	00129$
   03D7                     945 00128$:
   03D7 22                  946 	ret
   03D8                     947 00129$:
                    03D8    948 	C$snake.c$118$2$2 ==.
                            949 ;	../snake.c:118: if (snake->direction != MOVES_LEFT){
   03D8 90s00r0D            950 	mov	dptr,#_SNAKE_turn_snake_1_1
   03DB E0                  951 	movx	a,@dptr
   03DC FA                  952 	mov	r2,a
   03DD A3                  953 	inc	dptr
   03DE E0                  954 	movx	a,@dptr
   03DF FB                  955 	mov	r3,a
   03E0 A3                  956 	inc	dptr
   03E1 E0                  957 	movx	a,@dptr
   03E2 FC                  958 	mov	r4,a
   03E3 8A 82               959 	mov	dpl,r2
   03E5 8B 83               960 	mov	dph,r3
   03E7 8C F0               961 	mov	b,r4
   03E9 12s00r00            962 	lcall	__gptrget
   03EC FD                  963 	mov	r5,a
   03ED BD 02 01            964 	cjne	r5,#0x02,00130$
   03F0 22                  965 	ret
   03F1                     966 00130$:
                    03F1    967 	C$snake.c$119$3$3 ==.
                            968 ;	../snake.c:119: snake->direction = MOVES_RIGHT;
   03F1 8A 82               969 	mov	dpl,r2
   03F3 8B 83               970 	mov	dph,r3
   03F5 8C F0               971 	mov	b,r4
   03F7 74 03               972 	mov	a,#0x03
                    03F9    973 	C$snake.c$121$2$2 ==.
                            974 ;	../snake.c:121: break;
                    03F9    975 	C$snake.c$123$2$2 ==.
                            976 ;	../snake.c:123: case ARROW_LEFT :
   03F9 02s00r00            977 	ljmp	__gptrput
   03FC                     978 00104$:
                    03FC    979 	C$snake.c$124$2$2 ==.
                            980 ;	../snake.c:124: if (snake->direction != MOVES_RIGHT){
   03FC 90s00r0D            981 	mov	dptr,#_SNAKE_turn_snake_1_1
   03FF E0                  982 	movx	a,@dptr
   0400 FA                  983 	mov	r2,a
   0401 A3                  984 	inc	dptr
   0402 E0                  985 	movx	a,@dptr
   0403 FB                  986 	mov	r3,a
   0404 A3                  987 	inc	dptr
   0405 E0                  988 	movx	a,@dptr
   0406 FC                  989 	mov	r4,a
   0407 8A 82               990 	mov	dpl,r2
   0409 8B 83               991 	mov	dph,r3
   040B 8C F0               992 	mov	b,r4
   040D 12s00r00            993 	lcall	__gptrget
   0410 FD                  994 	mov	r5,a
   0411 BD 03 01            995 	cjne	r5,#0x03,00131$
   0414 22                  996 	ret
   0415                     997 00131$:
                    0415    998 	C$snake.c$125$3$4 ==.
                            999 ;	../snake.c:125: snake->direction = MOVES_LEFT;
   0415 8A 82              1000 	mov	dpl,r2
   0417 8B 83              1001 	mov	dph,r3
   0419 8C F0              1002 	mov	b,r4
   041B 74 02              1003 	mov	a,#0x02
                    041D   1004 	C$snake.c$127$2$2 ==.
                           1005 ;	../snake.c:127: break;
                    041D   1006 	C$snake.c$129$2$2 ==.
                           1007 ;	../snake.c:129: case ARROW_UP :
   041D 02s00r00           1008 	ljmp	__gptrput
   0420                    1009 00107$:
                    0420   1010 	C$snake.c$130$2$2 ==.
                           1011 ;	../snake.c:130: if (snake->direction != MOVES_DOWN){
   0420 90s00r0D           1012 	mov	dptr,#_SNAKE_turn_snake_1_1
   0423 E0                 1013 	movx	a,@dptr
   0424 FA                 1014 	mov	r2,a
   0425 A3                 1015 	inc	dptr
   0426 E0                 1016 	movx	a,@dptr
   0427 FB                 1017 	mov	r3,a
   0428 A3                 1018 	inc	dptr
   0429 E0                 1019 	movx	a,@dptr
   042A FC                 1020 	mov	r4,a
   042B 8A 82              1021 	mov	dpl,r2
   042D 8B 83              1022 	mov	dph,r3
   042F 8C F0              1023 	mov	b,r4
   0431 12s00r00           1024 	lcall	__gptrget
   0434 FD                 1025 	mov	r5,a
   0435 BD 01 01           1026 	cjne	r5,#0x01,00132$
   0438 22                 1027 	ret
   0439                    1028 00132$:
                    0439   1029 	C$snake.c$131$3$5 ==.
                           1030 ;	../snake.c:131: snake->direction = MOVES_UP;
   0439 8A 82              1031 	mov	dpl,r2
   043B 8B 83              1032 	mov	dph,r3
   043D 8C F0              1033 	mov	b,r4
   043F E4                 1034 	clr	a
                    0440   1035 	C$snake.c$133$2$2 ==.
                           1036 ;	../snake.c:133: break;
                    0440   1037 	C$snake.c$135$2$2 ==.
                           1038 ;	../snake.c:135: case ARROW_DOWN :
   0440 02s00r00           1039 	ljmp	__gptrput
   0443                    1040 00110$:
                    0443   1041 	C$snake.c$136$2$2 ==.
                           1042 ;	../snake.c:136: if (snake->direction != MOVES_UP){
   0443 90s00r0D           1043 	mov	dptr,#_SNAKE_turn_snake_1_1
   0446 E0                 1044 	movx	a,@dptr
   0447 FA                 1045 	mov	r2,a
   0448 A3                 1046 	inc	dptr
   0449 E0                 1047 	movx	a,@dptr
   044A FB                 1048 	mov	r3,a
   044B A3                 1049 	inc	dptr
   044C E0                 1050 	movx	a,@dptr
   044D FC                 1051 	mov	r4,a
   044E 8A 82              1052 	mov	dpl,r2
   0450 8B 83              1053 	mov	dph,r3
   0452 8C F0              1054 	mov	b,r4
   0454 12s00r00           1055 	lcall	__gptrget
   0457 FD                 1056 	mov	r5,a
   0458 7E 00              1057 	mov	r6,#0x00
   045A 4E                 1058 	orl	a,r6
   045B 60 0B              1059 	jz	00115$
                    045D   1060 	C$snake.c$137$3$6 ==.
                           1061 ;	../snake.c:137: snake->direction = MOVES_DOWN;
   045D 8A 82              1062 	mov	dpl,r2
   045F 8B 83              1063 	mov	dph,r3
   0461 8C F0              1064 	mov	b,r4
   0463 74 01              1065 	mov	a,#0x01
                    0465   1066 	C$snake.c$143$1$1 ==.
                           1067 ;	../snake.c:143: }
                    0465   1068 	C$snake.c$144$1$1 ==.
                    0465   1069 	XG$SNAKE_turn$0$0 ==.
   0465 02s00r00           1070 	ljmp	__gptrput
   0468                    1071 00115$:
   0468 22                 1072 	ret
                           1073 ;------------------------------------------------------------
                           1074 ;Allocation info for local variables in function 'SNAKE_iterate'
                           1075 ;------------------------------------------------------------
                           1076 ;arrow                     Allocated with name '_SNAKE_iterate_PARM_2'
                           1077 ;snake                     Allocated with name '_SNAKE_iterate_snake_1_1'
                           1078 ;------------------------------------------------------------
                    0469   1079 	G$SNAKE_iterate$0$0 ==.
                    0469   1080 	C$snake.c$151$1$1 ==.
                           1081 ;	../snake.c:151: Status SNAKE_iterate(Snake *snake, Arrow arrow) {
                           1082 ;	-----------------------------------------
                           1083 ;	 function SNAKE_iterate
                           1084 ;	-----------------------------------------
   0469                    1085 _SNAKE_iterate:
   0469 AA F0              1086 	mov	r2,b
   046B AB 83              1087 	mov	r3,dph
   046D E5 82              1088 	mov	a,dpl
   046F 90s00r11           1089 	mov	dptr,#_SNAKE_iterate_snake_1_1
   0472 F0                 1090 	movx	@dptr,a
   0473 A3                 1091 	inc	dptr
   0474 EB                 1092 	mov	a,r3
   0475 F0                 1093 	movx	@dptr,a
   0476 A3                 1094 	inc	dptr
   0477 EA                 1095 	mov	a,r2
   0478 F0                 1096 	movx	@dptr,a
                    0479   1097 	C$snake.c$152$1$1 ==.
                           1098 ;	../snake.c:152: SNAKE_showBody(snake);
   0479 90s00r11           1099 	mov	dptr,#_SNAKE_iterate_snake_1_1
   047C E0                 1100 	movx	a,@dptr
   047D FA                 1101 	mov	r2,a
   047E A3                 1102 	inc	dptr
   047F E0                 1103 	movx	a,@dptr
   0480 FB                 1104 	mov	r3,a
   0481 A3                 1105 	inc	dptr
   0482 E0                 1106 	movx	a,@dptr
   0483 FC                 1107 	mov	r4,a
   0484 8A 82              1108 	mov	dpl,r2
   0486 8B 83              1109 	mov	dph,r3
   0488 8C F0              1110 	mov	b,r4
   048A 12s02rA8           1111 	lcall	_SNAKE_showBody
                    048D   1112 	C$snake.c$153$1$1 ==.
                           1113 ;	../snake.c:153: SNAKE_turn(snake, arrow);
   048D 90s00r11           1114 	mov	dptr,#_SNAKE_iterate_snake_1_1
   0490 E0                 1115 	movx	a,@dptr
   0491 FA                 1116 	mov	r2,a
   0492 A3                 1117 	inc	dptr
   0493 E0                 1118 	movx	a,@dptr
   0494 FB                 1119 	mov	r3,a
   0495 A3                 1120 	inc	dptr
   0496 E0                 1121 	movx	a,@dptr
   0497 FC                 1122 	mov	r4,a
   0498 90s00r10           1123 	mov	dptr,#_SNAKE_iterate_PARM_2
   049B E0                 1124 	movx	a,@dptr
   049C 90s00r0C           1125 	mov	dptr,#_SNAKE_turn_PARM_2
   049F F0                 1126 	movx	@dptr,a
   04A0 8A 82              1127 	mov	dpl,r2
   04A2 8B 83              1128 	mov	dph,r3
   04A4 8C F0              1129 	mov	b,r4
   04A6 12s03rAE           1130 	lcall	_SNAKE_turn
                    04A9   1131 	C$snake.c$154$1$1 ==.
                           1132 ;	../snake.c:154: SNAKE_move(snake);
   04A9 90s00r11           1133 	mov	dptr,#_SNAKE_iterate_snake_1_1
   04AC E0                 1134 	movx	a,@dptr
   04AD FA                 1135 	mov	r2,a
   04AE A3                 1136 	inc	dptr
   04AF E0                 1137 	movx	a,@dptr
   04B0 FB                 1138 	mov	r3,a
   04B1 A3                 1139 	inc	dptr
   04B2 E0                 1140 	movx	a,@dptr
   04B3 FC                 1141 	mov	r4,a
   04B4 8A 82              1142 	mov	dpl,r2
   04B6 8B 83              1143 	mov	dph,r3
   04B8 8C F0              1144 	mov	b,r4
   04BA 12s00r00           1145 	lcall	_SNAKE_move
                    04BD   1146 	C$snake.c$155$1$1 ==.
                           1147 ;	../snake.c:155: SNAKE_liveOrDie(snake);
   04BD 90s00r11           1148 	mov	dptr,#_SNAKE_iterate_snake_1_1
   04C0 E0                 1149 	movx	a,@dptr
   04C1 FA                 1150 	mov	r2,a
   04C2 A3                 1151 	inc	dptr
   04C3 E0                 1152 	movx	a,@dptr
   04C4 FB                 1153 	mov	r3,a
   04C5 A3                 1154 	inc	dptr
   04C6 E0                 1155 	movx	a,@dptr
   04C7 FC                 1156 	mov	r4,a
   04C8 8A 82              1157 	mov	dpl,r2
   04CA 8B 83              1158 	mov	dph,r3
   04CC 8C F0              1159 	mov	b,r4
   04CE 12s01r00           1160 	lcall	_SNAKE_liveOrDie
                    04D1   1161 	C$snake.c$156$1$1 ==.
                           1162 ;	../snake.c:156: SNAKE_showHead(snake);
   04D1 90s00r11           1163 	mov	dptr,#_SNAKE_iterate_snake_1_1
   04D4 E0                 1164 	movx	a,@dptr
   04D5 FA                 1165 	mov	r2,a
   04D6 A3                 1166 	inc	dptr
   04D7 E0                 1167 	movx	a,@dptr
   04D8 FB                 1168 	mov	r3,a
   04D9 A3                 1169 	inc	dptr
   04DA E0                 1170 	movx	a,@dptr
   04DB FC                 1171 	mov	r4,a
   04DC 8A 82              1172 	mov	dpl,r2
   04DE 8B 83              1173 	mov	dph,r3
   04E0 8C F0              1174 	mov	b,r4
   04E2 12s01rE0           1175 	lcall	_SNAKE_showHead
                    04E5   1176 	C$snake.c$158$1$1 ==.
                           1177 ;	../snake.c:158: return snake->status;
   04E5 90s00r11           1178 	mov	dptr,#_SNAKE_iterate_snake_1_1
   04E8 E0                 1179 	movx	a,@dptr
   04E9 FA                 1180 	mov	r2,a
   04EA A3                 1181 	inc	dptr
   04EB E0                 1182 	movx	a,@dptr
   04EC FB                 1183 	mov	r3,a
   04ED A3                 1184 	inc	dptr
   04EE E0                 1185 	movx	a,@dptr
   04EF FC                 1186 	mov	r4,a
   04F0 74 03              1187 	mov	a,#0x03
   04F2 2A                 1188 	add	a,r2
   04F3 FA                 1189 	mov	r2,a
   04F4 E4                 1190 	clr	a
   04F5 3B                 1191 	addc	a,r3
   04F6 FB                 1192 	mov	r3,a
   04F7 8A 82              1193 	mov	dpl,r2
   04F9 8B 83              1194 	mov	dph,r3
   04FB 8C F0              1195 	mov	b,r4
   04FD 12s00r00           1196 	lcall	__gptrget
                    0500   1197 	C$snake.c$159$1$1 ==.
                    0500   1198 	XG$SNAKE_iterate$0$0 ==.
   0500 F5 82              1199 	mov	dpl,a
   0502 22                 1200 	ret
                           1201 ;------------------------------------------------------------
                           1202 ;Allocation info for local variables in function 'testSnakeTurnsTo'
                           1203 ;------------------------------------------------------------
                           1204 ;turn                      Allocated with name '_testSnakeTurnsTo_PARM_2'
                           1205 ;expectedResult            Allocated with name '_testSnakeTurnsTo_PARM_3'
                           1206 ;testCode                  Allocated with name '_testSnakeTurnsTo_PARM_4'
                           1207 ;currentDirection          Allocated with name '_testSnakeTurnsTo_currentDirection_1_1'
                           1208 ;snake                     Allocated with name '_testSnakeTurnsTo_snake_1_1'
                           1209 ;------------------------------------------------------------
                    0503   1210 	G$testSnakeTurnsTo$0$0 ==.
                    0503   1211 	C$snake.c$166$1$1 ==.
                           1212 ;	../snake.c:166: int testSnakeTurnsTo(Direction currentDirection, Arrow turn, Direction expectedResult, char *testCode) {
                           1213 ;	-----------------------------------------
                           1214 ;	 function testSnakeTurnsTo
                           1215 ;	-----------------------------------------
   0503                    1216 _testSnakeTurnsTo:
   0503 E5 82              1217 	mov	a,dpl
   0505 90s00r19           1218 	mov	dptr,#_testSnakeTurnsTo_currentDirection_1_1
   0508 F0                 1219 	movx	@dptr,a
                    0509   1220 	C$snake.c$167$1$1 ==.
                           1221 ;	../snake.c:167: Snake snake = {MOVES_RIGHT, {10, 10}, ALIVE, 0};
   0509 90s00r1A           1222 	mov	dptr,#_testSnakeTurnsTo_snake_1_1
   050C 74 03              1223 	mov	a,#0x03
   050E F0                 1224 	movx	@dptr,a
   050F 90s00r1B           1225 	mov	dptr,#(_testSnakeTurnsTo_snake_1_1 + 0x0001)
   0512 74 0A              1226 	mov	a,#0x0A
   0514 F0                 1227 	movx	@dptr,a
   0515 90s00r1C           1228 	mov	dptr,#(_testSnakeTurnsTo_snake_1_1 + 0x0002)
   0518 74 0A              1229 	mov	a,#0x0A
   051A F0                 1230 	movx	@dptr,a
   051B 90s00r1D           1231 	mov	dptr,#(_testSnakeTurnsTo_snake_1_1 + 0x0003)
   051E E4                 1232 	clr	a
   051F F0                 1233 	movx	@dptr,a
   0520 90s00r1E           1234 	mov	dptr,#(_testSnakeTurnsTo_snake_1_1 + 0x0004)
   0523 F0                 1235 	movx	@dptr,a
                    0524   1236 	C$snake.c$168$1$1 ==.
                           1237 ;	../snake.c:168: snake.direction = currentDirection;
   0524 90s00r19           1238 	mov	dptr,#_testSnakeTurnsTo_currentDirection_1_1
   0527 E0                 1239 	movx	a,@dptr
   0528 90s00r1A           1240 	mov	dptr,#_testSnakeTurnsTo_snake_1_1
   052B F0                 1241 	movx	@dptr,a
                    052C   1242 	C$snake.c$169$1$1 ==.
                           1243 ;	../snake.c:169: SNAKE_turn(&snake, turn);
   052C 90s00r14           1244 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   052F E0                 1245 	movx	a,@dptr
   0530 90s00r0C           1246 	mov	dptr,#_SNAKE_turn_PARM_2
   0533 F0                 1247 	movx	@dptr,a
   0534 90s00r1A           1248 	mov	dptr,#_testSnakeTurnsTo_snake_1_1
   0537 75 F0 00           1249 	mov	b,#0x00
   053A 12s03rAE           1250 	lcall	_SNAKE_turn
                    053D   1251 	C$snake.c$170$1$1 ==.
                           1252 ;	../snake.c:170: return assertEquals(expectedResult, snake.direction, testCode);	
   053D 90s00r15           1253 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0540 E0                 1254 	movx	a,@dptr
   0541 FA                 1255 	mov	r2,a
   0542 7B 00              1256 	mov	r3,#0x00
   0544 90s00r1A           1257 	mov	dptr,#_testSnakeTurnsTo_snake_1_1
   0547 E0                 1258 	movx	a,@dptr
   0548 FC                 1259 	mov	r4,a
   0549 7D 00              1260 	mov	r5,#0x00
   054B 90s00r16           1261 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   054E E0                 1262 	movx	a,@dptr
   054F FE                 1263 	mov	r6,a
   0550 A3                 1264 	inc	dptr
   0551 E0                 1265 	movx	a,@dptr
   0552 FF                 1266 	mov	r7,a
   0553 A3                 1267 	inc	dptr
   0554 E0                 1268 	movx	a,@dptr
   0555 F8                 1269 	mov	r0,a
   0556 90s00r00           1270 	mov	dptr,#_assertEquals_PARM_2
   0559 EC                 1271 	mov	a,r4
   055A F0                 1272 	movx	@dptr,a
   055B A3                 1273 	inc	dptr
   055C ED                 1274 	mov	a,r5
   055D F0                 1275 	movx	@dptr,a
   055E 90s00r00           1276 	mov	dptr,#_assertEquals_PARM_3
   0561 EE                 1277 	mov	a,r6
   0562 F0                 1278 	movx	@dptr,a
   0563 A3                 1279 	inc	dptr
   0564 EF                 1280 	mov	a,r7
   0565 F0                 1281 	movx	@dptr,a
   0566 A3                 1282 	inc	dptr
   0567 E8                 1283 	mov	a,r0
   0568 F0                 1284 	movx	@dptr,a
   0569 8A 82              1285 	mov	dpl,r2
   056B 8B 83              1286 	mov	dph,r3
                    056D   1287 	C$snake.c$171$1$1 ==.
                    056D   1288 	XG$testSnakeTurnsTo$0$0 ==.
   056D 02s00r00           1289 	ljmp	_assertEquals
                           1290 ;------------------------------------------------------------
                           1291 ;Allocation info for local variables in function 'testSnakeTurns'
                           1292 ;------------------------------------------------------------
                           1293 ;testsInError              Allocated with name '_testSnakeTurns_testsInError_1_1'
                           1294 ;------------------------------------------------------------
                    0570   1295 	G$testSnakeTurns$0$0 ==.
                    0570   1296 	C$snake.c$173$1$1 ==.
                           1297 ;	../snake.c:173: int testSnakeTurns() {
                           1298 ;	-----------------------------------------
                           1299 ;	 function testSnakeTurns
                           1300 ;	-----------------------------------------
   0570                    1301 _testSnakeTurns:
                    0570   1302 	C$snake.c$176$1$1 ==.
                           1303 ;	../snake.c:176: testsInError += testSnakeTurnsTo(MOVES_RIGHT, ARROW_RIGHT,	MOVES_RIGHT,"ST01");
   0570 90s00r14           1304 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0573 74 04              1305 	mov	a,#0x04
   0575 F0                 1306 	movx	@dptr,a
   0576 90s00r15           1307 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0579 74 03              1308 	mov	a,#0x03
   057B F0                 1309 	movx	@dptr,a
   057C 90s00r16           1310 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   057F 74r00              1311 	mov	a,#__str_0
   0581 F0                 1312 	movx	@dptr,a
   0582 A3                 1313 	inc	dptr
   0583 74s00              1314 	mov	a,#(__str_0 >> 8)
   0585 F0                 1315 	movx	@dptr,a
   0586 A3                 1316 	inc	dptr
   0587 74 80              1317 	mov	a,#0x80
   0589 F0                 1318 	movx	@dptr,a
   058A 75 82 03           1319 	mov	dpl,#0x03
   058D 12s05r03           1320 	lcall	_testSnakeTurnsTo
   0590 AA 82              1321 	mov	r2,dpl
   0592 AB 83              1322 	mov	r3,dph
                    0594   1323 	C$snake.c$177$1$1 ==.
                           1324 ;	../snake.c:177: testsInError += testSnakeTurnsTo(MOVES_RIGHT, ARROW_LEFT,	MOVES_RIGHT,"ST02");
   0594 90s00r14           1325 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0597 74 03              1326 	mov	a,#0x03
   0599 F0                 1327 	movx	@dptr,a
   059A 90s00r15           1328 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   059D 74 03              1329 	mov	a,#0x03
   059F F0                 1330 	movx	@dptr,a
   05A0 90s00r16           1331 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   05A3 74r05              1332 	mov	a,#__str_1
   05A5 F0                 1333 	movx	@dptr,a
   05A6 A3                 1334 	inc	dptr
   05A7 74s00              1335 	mov	a,#(__str_1 >> 8)
   05A9 F0                 1336 	movx	@dptr,a
   05AA A3                 1337 	inc	dptr
   05AB 74 80              1338 	mov	a,#0x80
   05AD F0                 1339 	movx	@dptr,a
   05AE 75 82 03           1340 	mov	dpl,#0x03
   05B1 C0 02              1341 	push	ar2
   05B3 C0 03              1342 	push	ar3
   05B5 12s05r03           1343 	lcall	_testSnakeTurnsTo
   05B8 AC 82              1344 	mov	r4,dpl
   05BA AD 83              1345 	mov	r5,dph
   05BC D0 03              1346 	pop	ar3
   05BE D0 02              1347 	pop	ar2
   05C0 EC                 1348 	mov	a,r4
   05C1 2A                 1349 	add	a,r2
   05C2 FA                 1350 	mov	r2,a
   05C3 ED                 1351 	mov	a,r5
   05C4 3B                 1352 	addc	a,r3
   05C5 FB                 1353 	mov	r3,a
                    05C6   1354 	C$snake.c$178$1$1 ==.
                           1355 ;	../snake.c:178: testsInError += testSnakeTurnsTo(MOVES_RIGHT, ARROW_UP,		MOVES_UP, 	"ST03");
   05C6 90s00r14           1356 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   05C9 74 01              1357 	mov	a,#0x01
   05CB F0                 1358 	movx	@dptr,a
   05CC 90s00r15           1359 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   05CF E4                 1360 	clr	a
   05D0 F0                 1361 	movx	@dptr,a
   05D1 90s00r16           1362 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   05D4 74r0A              1363 	mov	a,#__str_2
   05D6 F0                 1364 	movx	@dptr,a
   05D7 A3                 1365 	inc	dptr
   05D8 74s00              1366 	mov	a,#(__str_2 >> 8)
   05DA F0                 1367 	movx	@dptr,a
   05DB A3                 1368 	inc	dptr
   05DC 74 80              1369 	mov	a,#0x80
   05DE F0                 1370 	movx	@dptr,a
   05DF 75 82 03           1371 	mov	dpl,#0x03
   05E2 C0 02              1372 	push	ar2
   05E4 C0 03              1373 	push	ar3
   05E6 12s05r03           1374 	lcall	_testSnakeTurnsTo
   05E9 AC 82              1375 	mov	r4,dpl
   05EB AD 83              1376 	mov	r5,dph
   05ED D0 03              1377 	pop	ar3
   05EF D0 02              1378 	pop	ar2
   05F1 EC                 1379 	mov	a,r4
   05F2 2A                 1380 	add	a,r2
   05F3 FA                 1381 	mov	r2,a
   05F4 ED                 1382 	mov	a,r5
   05F5 3B                 1383 	addc	a,r3
   05F6 FB                 1384 	mov	r3,a
                    05F7   1385 	C$snake.c$179$1$1 ==.
                           1386 ;	../snake.c:179: testsInError += testSnakeTurnsTo(MOVES_RIGHT, ARROW_DOWN, 	MOVES_DOWN, "ST04");
   05F7 90s00r14           1387 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   05FA 74 02              1388 	mov	a,#0x02
   05FC F0                 1389 	movx	@dptr,a
   05FD 90s00r15           1390 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0600 74 01              1391 	mov	a,#0x01
   0602 F0                 1392 	movx	@dptr,a
   0603 90s00r16           1393 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0606 74r0F              1394 	mov	a,#__str_3
   0608 F0                 1395 	movx	@dptr,a
   0609 A3                 1396 	inc	dptr
   060A 74s00              1397 	mov	a,#(__str_3 >> 8)
   060C F0                 1398 	movx	@dptr,a
   060D A3                 1399 	inc	dptr
   060E 74 80              1400 	mov	a,#0x80
   0610 F0                 1401 	movx	@dptr,a
   0611 75 82 03           1402 	mov	dpl,#0x03
   0614 C0 02              1403 	push	ar2
   0616 C0 03              1404 	push	ar3
   0618 12s05r03           1405 	lcall	_testSnakeTurnsTo
   061B AC 82              1406 	mov	r4,dpl
   061D AD 83              1407 	mov	r5,dph
   061F D0 03              1408 	pop	ar3
   0621 D0 02              1409 	pop	ar2
   0623 EC                 1410 	mov	a,r4
   0624 2A                 1411 	add	a,r2
   0625 FA                 1412 	mov	r2,a
   0626 ED                 1413 	mov	a,r5
   0627 3B                 1414 	addc	a,r3
   0628 FB                 1415 	mov	r3,a
                    0629   1416 	C$snake.c$181$1$1 ==.
                           1417 ;	../snake.c:181: testsInError += testSnakeTurnsTo(MOVES_LEFT, ARROW_RIGHT, 	MOVES_LEFT, "ST11");
   0629 90s00r14           1418 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   062C 74 04              1419 	mov	a,#0x04
   062E F0                 1420 	movx	@dptr,a
   062F 90s00r15           1421 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0632 74 02              1422 	mov	a,#0x02
   0634 F0                 1423 	movx	@dptr,a
   0635 90s00r16           1424 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0638 74r14              1425 	mov	a,#__str_4
   063A F0                 1426 	movx	@dptr,a
   063B A3                 1427 	inc	dptr
   063C 74s00              1428 	mov	a,#(__str_4 >> 8)
   063E F0                 1429 	movx	@dptr,a
   063F A3                 1430 	inc	dptr
   0640 74 80              1431 	mov	a,#0x80
   0642 F0                 1432 	movx	@dptr,a
   0643 75 82 02           1433 	mov	dpl,#0x02
   0646 C0 02              1434 	push	ar2
   0648 C0 03              1435 	push	ar3
   064A 12s05r03           1436 	lcall	_testSnakeTurnsTo
   064D AC 82              1437 	mov	r4,dpl
   064F AD 83              1438 	mov	r5,dph
   0651 D0 03              1439 	pop	ar3
   0653 D0 02              1440 	pop	ar2
   0655 EC                 1441 	mov	a,r4
   0656 2A                 1442 	add	a,r2
   0657 FA                 1443 	mov	r2,a
   0658 ED                 1444 	mov	a,r5
   0659 3B                 1445 	addc	a,r3
   065A FB                 1446 	mov	r3,a
                    065B   1447 	C$snake.c$182$1$1 ==.
                           1448 ;	../snake.c:182: testsInError += testSnakeTurnsTo(MOVES_LEFT, ARROW_LEFT, 	MOVES_LEFT, "ST12");
   065B 90s00r14           1449 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   065E 74 03              1450 	mov	a,#0x03
   0660 F0                 1451 	movx	@dptr,a
   0661 90s00r15           1452 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0664 74 02              1453 	mov	a,#0x02
   0666 F0                 1454 	movx	@dptr,a
   0667 90s00r16           1455 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   066A 74r19              1456 	mov	a,#__str_5
   066C F0                 1457 	movx	@dptr,a
   066D A3                 1458 	inc	dptr
   066E 74s00              1459 	mov	a,#(__str_5 >> 8)
   0670 F0                 1460 	movx	@dptr,a
   0671 A3                 1461 	inc	dptr
   0672 74 80              1462 	mov	a,#0x80
   0674 F0                 1463 	movx	@dptr,a
   0675 75 82 02           1464 	mov	dpl,#0x02
   0678 C0 02              1465 	push	ar2
   067A C0 03              1466 	push	ar3
   067C 12s05r03           1467 	lcall	_testSnakeTurnsTo
   067F AC 82              1468 	mov	r4,dpl
   0681 AD 83              1469 	mov	r5,dph
   0683 D0 03              1470 	pop	ar3
   0685 D0 02              1471 	pop	ar2
   0687 EC                 1472 	mov	a,r4
   0688 2A                 1473 	add	a,r2
   0689 FA                 1474 	mov	r2,a
   068A ED                 1475 	mov	a,r5
   068B 3B                 1476 	addc	a,r3
   068C FB                 1477 	mov	r3,a
                    068D   1478 	C$snake.c$183$1$1 ==.
                           1479 ;	../snake.c:183: testsInError += testSnakeTurnsTo(MOVES_LEFT, ARROW_UP, 		MOVES_UP, 	"ST13");
   068D 90s00r14           1480 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0690 74 01              1481 	mov	a,#0x01
   0692 F0                 1482 	movx	@dptr,a
   0693 90s00r15           1483 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0696 E4                 1484 	clr	a
   0697 F0                 1485 	movx	@dptr,a
   0698 90s00r16           1486 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   069B 74r1E              1487 	mov	a,#__str_6
   069D F0                 1488 	movx	@dptr,a
   069E A3                 1489 	inc	dptr
   069F 74s00              1490 	mov	a,#(__str_6 >> 8)
   06A1 F0                 1491 	movx	@dptr,a
   06A2 A3                 1492 	inc	dptr
   06A3 74 80              1493 	mov	a,#0x80
   06A5 F0                 1494 	movx	@dptr,a
   06A6 75 82 02           1495 	mov	dpl,#0x02
   06A9 C0 02              1496 	push	ar2
   06AB C0 03              1497 	push	ar3
   06AD 12s05r03           1498 	lcall	_testSnakeTurnsTo
   06B0 AC 82              1499 	mov	r4,dpl
   06B2 AD 83              1500 	mov	r5,dph
   06B4 D0 03              1501 	pop	ar3
   06B6 D0 02              1502 	pop	ar2
   06B8 EC                 1503 	mov	a,r4
   06B9 2A                 1504 	add	a,r2
   06BA FA                 1505 	mov	r2,a
   06BB ED                 1506 	mov	a,r5
   06BC 3B                 1507 	addc	a,r3
   06BD FB                 1508 	mov	r3,a
                    06BE   1509 	C$snake.c$184$1$1 ==.
                           1510 ;	../snake.c:184: testsInError += testSnakeTurnsTo(MOVES_LEFT, ARROW_DOWN, 	MOVES_DOWN, "ST14");
   06BE 90s00r14           1511 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   06C1 74 02              1512 	mov	a,#0x02
   06C3 F0                 1513 	movx	@dptr,a
   06C4 90s00r15           1514 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   06C7 74 01              1515 	mov	a,#0x01
   06C9 F0                 1516 	movx	@dptr,a
   06CA 90s00r16           1517 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   06CD 74r23              1518 	mov	a,#__str_7
   06CF F0                 1519 	movx	@dptr,a
   06D0 A3                 1520 	inc	dptr
   06D1 74s00              1521 	mov	a,#(__str_7 >> 8)
   06D3 F0                 1522 	movx	@dptr,a
   06D4 A3                 1523 	inc	dptr
   06D5 74 80              1524 	mov	a,#0x80
   06D7 F0                 1525 	movx	@dptr,a
   06D8 75 82 02           1526 	mov	dpl,#0x02
   06DB C0 02              1527 	push	ar2
   06DD C0 03              1528 	push	ar3
   06DF 12s05r03           1529 	lcall	_testSnakeTurnsTo
   06E2 AC 82              1530 	mov	r4,dpl
   06E4 AD 83              1531 	mov	r5,dph
   06E6 D0 03              1532 	pop	ar3
   06E8 D0 02              1533 	pop	ar2
   06EA EC                 1534 	mov	a,r4
   06EB 2A                 1535 	add	a,r2
   06EC FA                 1536 	mov	r2,a
   06ED ED                 1537 	mov	a,r5
   06EE 3B                 1538 	addc	a,r3
   06EF FB                 1539 	mov	r3,a
                    06F0   1540 	C$snake.c$186$1$1 ==.
                           1541 ;	../snake.c:186: testsInError += testSnakeTurnsTo(MOVES_UP, ARROW_RIGHT, 	MOVES_RIGHT,"ST21");
   06F0 90s00r14           1542 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   06F3 74 04              1543 	mov	a,#0x04
   06F5 F0                 1544 	movx	@dptr,a
   06F6 90s00r15           1545 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   06F9 74 03              1546 	mov	a,#0x03
   06FB F0                 1547 	movx	@dptr,a
   06FC 90s00r16           1548 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   06FF 74r28              1549 	mov	a,#__str_8
   0701 F0                 1550 	movx	@dptr,a
   0702 A3                 1551 	inc	dptr
   0703 74s00              1552 	mov	a,#(__str_8 >> 8)
   0705 F0                 1553 	movx	@dptr,a
   0706 A3                 1554 	inc	dptr
   0707 74 80              1555 	mov	a,#0x80
   0709 F0                 1556 	movx	@dptr,a
   070A 75 82 00           1557 	mov	dpl,#0x00
   070D C0 02              1558 	push	ar2
   070F C0 03              1559 	push	ar3
   0711 12s05r03           1560 	lcall	_testSnakeTurnsTo
   0714 AC 82              1561 	mov	r4,dpl
   0716 AD 83              1562 	mov	r5,dph
   0718 D0 03              1563 	pop	ar3
   071A D0 02              1564 	pop	ar2
   071C EC                 1565 	mov	a,r4
   071D 2A                 1566 	add	a,r2
   071E FA                 1567 	mov	r2,a
   071F ED                 1568 	mov	a,r5
   0720 3B                 1569 	addc	a,r3
   0721 FB                 1570 	mov	r3,a
                    0722   1571 	C$snake.c$187$1$1 ==.
                           1572 ;	../snake.c:187: testsInError += testSnakeTurnsTo(MOVES_UP, ARROW_LEFT, 		MOVES_LEFT, "ST22");
   0722 90s00r14           1573 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0725 74 03              1574 	mov	a,#0x03
   0727 F0                 1575 	movx	@dptr,a
   0728 90s00r15           1576 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   072B 74 02              1577 	mov	a,#0x02
   072D F0                 1578 	movx	@dptr,a
   072E 90s00r16           1579 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0731 74r2D              1580 	mov	a,#__str_9
   0733 F0                 1581 	movx	@dptr,a
   0734 A3                 1582 	inc	dptr
   0735 74s00              1583 	mov	a,#(__str_9 >> 8)
   0737 F0                 1584 	movx	@dptr,a
   0738 A3                 1585 	inc	dptr
   0739 74 80              1586 	mov	a,#0x80
   073B F0                 1587 	movx	@dptr,a
   073C 75 82 00           1588 	mov	dpl,#0x00
   073F C0 02              1589 	push	ar2
   0741 C0 03              1590 	push	ar3
   0743 12s05r03           1591 	lcall	_testSnakeTurnsTo
   0746 AC 82              1592 	mov	r4,dpl
   0748 AD 83              1593 	mov	r5,dph
   074A D0 03              1594 	pop	ar3
   074C D0 02              1595 	pop	ar2
   074E EC                 1596 	mov	a,r4
   074F 2A                 1597 	add	a,r2
   0750 FA                 1598 	mov	r2,a
   0751 ED                 1599 	mov	a,r5
   0752 3B                 1600 	addc	a,r3
   0753 FB                 1601 	mov	r3,a
                    0754   1602 	C$snake.c$188$1$1 ==.
                           1603 ;	../snake.c:188: testsInError += testSnakeTurnsTo(MOVES_UP, ARROW_UP, 		MOVES_UP, 	"ST23");
   0754 90s00r14           1604 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0757 74 01              1605 	mov	a,#0x01
   0759 F0                 1606 	movx	@dptr,a
   075A 90s00r15           1607 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   075D E4                 1608 	clr	a
   075E F0                 1609 	movx	@dptr,a
   075F 90s00r16           1610 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0762 74r32              1611 	mov	a,#__str_10
   0764 F0                 1612 	movx	@dptr,a
   0765 A3                 1613 	inc	dptr
   0766 74s00              1614 	mov	a,#(__str_10 >> 8)
   0768 F0                 1615 	movx	@dptr,a
   0769 A3                 1616 	inc	dptr
   076A 74 80              1617 	mov	a,#0x80
   076C F0                 1618 	movx	@dptr,a
   076D 75 82 00           1619 	mov	dpl,#0x00
   0770 C0 02              1620 	push	ar2
   0772 C0 03              1621 	push	ar3
   0774 12s05r03           1622 	lcall	_testSnakeTurnsTo
   0777 AC 82              1623 	mov	r4,dpl
   0779 AD 83              1624 	mov	r5,dph
   077B D0 03              1625 	pop	ar3
   077D D0 02              1626 	pop	ar2
   077F EC                 1627 	mov	a,r4
   0780 2A                 1628 	add	a,r2
   0781 FA                 1629 	mov	r2,a
   0782 ED                 1630 	mov	a,r5
   0783 3B                 1631 	addc	a,r3
   0784 FB                 1632 	mov	r3,a
                    0785   1633 	C$snake.c$189$1$1 ==.
                           1634 ;	../snake.c:189: testsInError += testSnakeTurnsTo(MOVES_UP, ARROW_DOWN, 		MOVES_UP, 	"ST24");
   0785 90s00r14           1635 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   0788 74 02              1636 	mov	a,#0x02
   078A F0                 1637 	movx	@dptr,a
   078B 90s00r15           1638 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   078E E4                 1639 	clr	a
   078F F0                 1640 	movx	@dptr,a
   0790 90s00r16           1641 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0793 74r37              1642 	mov	a,#__str_11
   0795 F0                 1643 	movx	@dptr,a
   0796 A3                 1644 	inc	dptr
   0797 74s00              1645 	mov	a,#(__str_11 >> 8)
   0799 F0                 1646 	movx	@dptr,a
   079A A3                 1647 	inc	dptr
   079B 74 80              1648 	mov	a,#0x80
   079D F0                 1649 	movx	@dptr,a
   079E 75 82 00           1650 	mov	dpl,#0x00
   07A1 C0 02              1651 	push	ar2
   07A3 C0 03              1652 	push	ar3
   07A5 12s05r03           1653 	lcall	_testSnakeTurnsTo
   07A8 AC 82              1654 	mov	r4,dpl
   07AA AD 83              1655 	mov	r5,dph
   07AC D0 03              1656 	pop	ar3
   07AE D0 02              1657 	pop	ar2
   07B0 EC                 1658 	mov	a,r4
   07B1 2A                 1659 	add	a,r2
   07B2 FA                 1660 	mov	r2,a
   07B3 ED                 1661 	mov	a,r5
   07B4 3B                 1662 	addc	a,r3
   07B5 FB                 1663 	mov	r3,a
                    07B6   1664 	C$snake.c$191$1$1 ==.
                           1665 ;	../snake.c:191: testsInError += testSnakeTurnsTo(MOVES_DOWN, ARROW_RIGHT, 	MOVES_RIGHT,"ST31");
   07B6 90s00r14           1666 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   07B9 74 04              1667 	mov	a,#0x04
   07BB F0                 1668 	movx	@dptr,a
   07BC 90s00r15           1669 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   07BF 74 03              1670 	mov	a,#0x03
   07C1 F0                 1671 	movx	@dptr,a
   07C2 90s00r16           1672 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   07C5 74r3C              1673 	mov	a,#__str_12
   07C7 F0                 1674 	movx	@dptr,a
   07C8 A3                 1675 	inc	dptr
   07C9 74s00              1676 	mov	a,#(__str_12 >> 8)
   07CB F0                 1677 	movx	@dptr,a
   07CC A3                 1678 	inc	dptr
   07CD 74 80              1679 	mov	a,#0x80
   07CF F0                 1680 	movx	@dptr,a
   07D0 75 82 01           1681 	mov	dpl,#0x01
   07D3 C0 02              1682 	push	ar2
   07D5 C0 03              1683 	push	ar3
   07D7 12s05r03           1684 	lcall	_testSnakeTurnsTo
   07DA AC 82              1685 	mov	r4,dpl
   07DC AD 83              1686 	mov	r5,dph
   07DE D0 03              1687 	pop	ar3
   07E0 D0 02              1688 	pop	ar2
   07E2 EC                 1689 	mov	a,r4
   07E3 2A                 1690 	add	a,r2
   07E4 FA                 1691 	mov	r2,a
   07E5 ED                 1692 	mov	a,r5
   07E6 3B                 1693 	addc	a,r3
   07E7 FB                 1694 	mov	r3,a
                    07E8   1695 	C$snake.c$192$1$1 ==.
                           1696 ;	../snake.c:192: testsInError += testSnakeTurnsTo(MOVES_DOWN, ARROW_LEFT, 	MOVES_LEFT, "ST32");
   07E8 90s00r14           1697 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   07EB 74 03              1698 	mov	a,#0x03
   07ED F0                 1699 	movx	@dptr,a
   07EE 90s00r15           1700 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   07F1 74 02              1701 	mov	a,#0x02
   07F3 F0                 1702 	movx	@dptr,a
   07F4 90s00r16           1703 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   07F7 74r41              1704 	mov	a,#__str_13
   07F9 F0                 1705 	movx	@dptr,a
   07FA A3                 1706 	inc	dptr
   07FB 74s00              1707 	mov	a,#(__str_13 >> 8)
   07FD F0                 1708 	movx	@dptr,a
   07FE A3                 1709 	inc	dptr
   07FF 74 80              1710 	mov	a,#0x80
   0801 F0                 1711 	movx	@dptr,a
   0802 75 82 01           1712 	mov	dpl,#0x01
   0805 C0 02              1713 	push	ar2
   0807 C0 03              1714 	push	ar3
   0809 12s05r03           1715 	lcall	_testSnakeTurnsTo
   080C AC 82              1716 	mov	r4,dpl
   080E AD 83              1717 	mov	r5,dph
   0810 D0 03              1718 	pop	ar3
   0812 D0 02              1719 	pop	ar2
   0814 EC                 1720 	mov	a,r4
   0815 2A                 1721 	add	a,r2
   0816 FA                 1722 	mov	r2,a
   0817 ED                 1723 	mov	a,r5
   0818 3B                 1724 	addc	a,r3
   0819 FB                 1725 	mov	r3,a
                    081A   1726 	C$snake.c$193$1$1 ==.
                           1727 ;	../snake.c:193: testsInError += testSnakeTurnsTo(MOVES_DOWN, ARROW_UP, 		MOVES_DOWN, "ST33");
   081A 90s00r14           1728 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   081D 74 01              1729 	mov	a,#0x01
   081F F0                 1730 	movx	@dptr,a
   0820 90s00r15           1731 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0823 74 01              1732 	mov	a,#0x01
   0825 F0                 1733 	movx	@dptr,a
   0826 90s00r16           1734 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   0829 74r46              1735 	mov	a,#__str_14
   082B F0                 1736 	movx	@dptr,a
   082C A3                 1737 	inc	dptr
   082D 74s00              1738 	mov	a,#(__str_14 >> 8)
   082F F0                 1739 	movx	@dptr,a
   0830 A3                 1740 	inc	dptr
   0831 74 80              1741 	mov	a,#0x80
   0833 F0                 1742 	movx	@dptr,a
   0834 75 82 01           1743 	mov	dpl,#0x01
   0837 C0 02              1744 	push	ar2
   0839 C0 03              1745 	push	ar3
   083B 12s05r03           1746 	lcall	_testSnakeTurnsTo
   083E AC 82              1747 	mov	r4,dpl
   0840 AD 83              1748 	mov	r5,dph
   0842 D0 03              1749 	pop	ar3
   0844 D0 02              1750 	pop	ar2
   0846 EC                 1751 	mov	a,r4
   0847 2A                 1752 	add	a,r2
   0848 FA                 1753 	mov	r2,a
   0849 ED                 1754 	mov	a,r5
   084A 3B                 1755 	addc	a,r3
   084B FB                 1756 	mov	r3,a
                    084C   1757 	C$snake.c$194$1$1 ==.
                           1758 ;	../snake.c:194: testsInError += testSnakeTurnsTo(MOVES_DOWN, ARROW_DOWN, 	MOVES_DOWN, "ST34");
   084C 90s00r14           1759 	mov	dptr,#_testSnakeTurnsTo_PARM_2
   084F 74 02              1760 	mov	a,#0x02
   0851 F0                 1761 	movx	@dptr,a
   0852 90s00r15           1762 	mov	dptr,#_testSnakeTurnsTo_PARM_3
   0855 74 01              1763 	mov	a,#0x01
   0857 F0                 1764 	movx	@dptr,a
   0858 90s00r16           1765 	mov	dptr,#_testSnakeTurnsTo_PARM_4
   085B 74r4B              1766 	mov	a,#__str_15
   085D F0                 1767 	movx	@dptr,a
   085E A3                 1768 	inc	dptr
   085F 74s00              1769 	mov	a,#(__str_15 >> 8)
   0861 F0                 1770 	movx	@dptr,a
   0862 A3                 1771 	inc	dptr
   0863 74 80              1772 	mov	a,#0x80
   0865 F0                 1773 	movx	@dptr,a
   0866 75 82 01           1774 	mov	dpl,#0x01
   0869 C0 02              1775 	push	ar2
   086B C0 03              1776 	push	ar3
   086D 12s05r03           1777 	lcall	_testSnakeTurnsTo
   0870 AC 82              1778 	mov	r4,dpl
   0872 AD 83              1779 	mov	r5,dph
   0874 D0 03              1780 	pop	ar3
   0876 D0 02              1781 	pop	ar2
   0878 EC                 1782 	mov	a,r4
   0879 2A                 1783 	add	a,r2
   087A FA                 1784 	mov	r2,a
   087B ED                 1785 	mov	a,r5
   087C 3B                 1786 	addc	a,r3
                    087D   1787 	C$snake.c$196$1$1 ==.
                           1788 ;	../snake.c:196: return testsInError;
                    087D   1789 	C$snake.c$197$1$1 ==.
                    087D   1790 	XG$testSnakeTurns$0$0 ==.
   087D 8A 82              1791 	mov	dpl,r2
   087F F5 83              1792 	mov	dph,a
   0881 22                 1793 	ret
                           1794 ;------------------------------------------------------------
                           1795 ;Allocation info for local variables in function 'testSnakeEatsAFruit'
                           1796 ;------------------------------------------------------------
                           1797 ;testsInError              Allocated with name '_testSnakeEatsAFruit_testsInError_1_1'
                           1798 ;snake                     Allocated with name '_testSnakeEatsAFruit_snake_1_1'
                           1799 ;------------------------------------------------------------
                    0882   1800 	G$testSnakeEatsAFruit$0$0 ==.
                    0882   1801 	C$snake.c$199$1$1 ==.
                           1802 ;	../snake.c:199: int testSnakeEatsAFruit() {
                           1803 ;	-----------------------------------------
                           1804 ;	 function testSnakeEatsAFruit
                           1805 ;	-----------------------------------------
   0882                    1806 _testSnakeEatsAFruit:
                    0882   1807 	C$snake.c$201$1$1 ==.
                           1808 ;	../snake.c:201: Snake snake = {MOVES_RIGHT, {BDD_SCREEN_X, BDD_SCREEN_Y}, ALIVE, 0};
   0882 90s00r1F           1809 	mov	dptr,#_testSnakeEatsAFruit_snake_1_1
   0885 74 03              1810 	mov	a,#0x03
   0887 F0                 1811 	movx	@dptr,a
   0888 90s00r20           1812 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0001)
   088B 74 13              1813 	mov	a,#0x13
   088D F0                 1814 	movx	@dptr,a
   088E 90s00r21           1815 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0002)
   0891 74 0A              1816 	mov	a,#0x0A
   0893 F0                 1817 	movx	@dptr,a
   0894 90s00r22           1818 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0003)
   0897 E4                 1819 	clr	a
   0898 F0                 1820 	movx	@dptr,a
   0899 90s00r23           1821 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0004)
   089C F0                 1822 	movx	@dptr,a
                    089D   1823 	C$snake.c$203$1$1 ==.
                           1824 ;	../snake.c:203: T6963C_writeAt(BDD_SCREEN_X, BDD_SCREEN_Y, FRUIT);
   089D 90s00r00           1825 	mov	dptr,#_T6963C_writeAt_PARM_2
   08A0 74 0A              1826 	mov	a,#0x0A
   08A2 F0                 1827 	movx	@dptr,a
   08A3 90s00r00           1828 	mov	dptr,#_T6963C_writeAt_PARM_3
   08A6 74 15              1829 	mov	a,#0x15
   08A8 F0                 1830 	movx	@dptr,a
   08A9 75 82 13           1831 	mov	dpl,#0x13
   08AC 12s00r00           1832 	lcall	_T6963C_writeAt
                    08AF   1833 	C$snake.c$204$1$1 ==.
                           1834 ;	../snake.c:204: SNAKE_liveOrDie(&snake);
   08AF 90s00r1F           1835 	mov	dptr,#_testSnakeEatsAFruit_snake_1_1
   08B2 75 F0 00           1836 	mov	b,#0x00
   08B5 12s01r00           1837 	lcall	_SNAKE_liveOrDie
                    08B8   1838 	C$snake.c$206$1$1 ==.
                           1839 ;	../snake.c:206: testsInError += assertEquals(snake.status, EATING, "SF001");
   08B8 90s00r22           1840 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0003)
   08BB E0                 1841 	movx	a,@dptr
   08BC FA                 1842 	mov	r2,a
   08BD 7B 00              1843 	mov	r3,#0x00
   08BF 90s00r00           1844 	mov	dptr,#_assertEquals_PARM_2
   08C2 74 02              1845 	mov	a,#0x02
   08C4 F0                 1846 	movx	@dptr,a
   08C5 A3                 1847 	inc	dptr
   08C6 E4                 1848 	clr	a
   08C7 F0                 1849 	movx	@dptr,a
   08C8 90s00r00           1850 	mov	dptr,#_assertEquals_PARM_3
   08CB 74r50              1851 	mov	a,#__str_16
   08CD F0                 1852 	movx	@dptr,a
   08CE A3                 1853 	inc	dptr
   08CF 74s00              1854 	mov	a,#(__str_16 >> 8)
   08D1 F0                 1855 	movx	@dptr,a
   08D2 A3                 1856 	inc	dptr
   08D3 74 80              1857 	mov	a,#0x80
   08D5 F0                 1858 	movx	@dptr,a
   08D6 8A 82              1859 	mov	dpl,r2
   08D8 8B 83              1860 	mov	dph,r3
   08DA 12s00r00           1861 	lcall	_assertEquals
   08DD AA 82              1862 	mov	r2,dpl
   08DF AB 83              1863 	mov	r3,dph
                    08E1   1864 	C$snake.c$207$1$1 ==.
                           1865 ;	../snake.c:207: testsInError += assertEquals(snake.caloriesLeft, FRUIT_CALORIES, "SF002");
   08E1 90s00r23           1866 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0004)
   08E4 E0                 1867 	movx	a,@dptr
   08E5 FC                 1868 	mov	r4,a
   08E6 7D 00              1869 	mov	r5,#0x00
   08E8 90s00r00           1870 	mov	dptr,#_assertEquals_PARM_2
   08EB 74 03              1871 	mov	a,#0x03
   08ED F0                 1872 	movx	@dptr,a
   08EE A3                 1873 	inc	dptr
   08EF E4                 1874 	clr	a
   08F0 F0                 1875 	movx	@dptr,a
   08F1 90s00r00           1876 	mov	dptr,#_assertEquals_PARM_3
   08F4 74r56              1877 	mov	a,#__str_17
   08F6 F0                 1878 	movx	@dptr,a
   08F7 A3                 1879 	inc	dptr
   08F8 74s00              1880 	mov	a,#(__str_17 >> 8)
   08FA F0                 1881 	movx	@dptr,a
   08FB A3                 1882 	inc	dptr
   08FC 74 80              1883 	mov	a,#0x80
   08FE F0                 1884 	movx	@dptr,a
   08FF 8C 82              1885 	mov	dpl,r4
   0901 8D 83              1886 	mov	dph,r5
   0903 C0 02              1887 	push	ar2
   0905 C0 03              1888 	push	ar3
   0907 12s00r00           1889 	lcall	_assertEquals
   090A AC 82              1890 	mov	r4,dpl
   090C AD 83              1891 	mov	r5,dph
   090E D0 03              1892 	pop	ar3
   0910 D0 02              1893 	pop	ar2
   0912 EC                 1894 	mov	a,r4
   0913 2A                 1895 	add	a,r2
   0914 FA                 1896 	mov	r2,a
   0915 ED                 1897 	mov	a,r5
   0916 3B                 1898 	addc	a,r3
   0917 FB                 1899 	mov	r3,a
                    0918   1900 	C$snake.c$209$1$1 ==.
                           1901 ;	../snake.c:209: T6963C_writeAt(BDD_SCREEN_X, BDD_SCREEN_Y, EMPTY);
   0918 90s00r00           1902 	mov	dptr,#_T6963C_writeAt_PARM_2
   091B 74 0A              1903 	mov	a,#0x0A
   091D F0                 1904 	movx	@dptr,a
   091E 90s00r00           1905 	mov	dptr,#_T6963C_writeAt_PARM_3
   0921 E4                 1906 	clr	a
   0922 F0                 1907 	movx	@dptr,a
   0923 75 82 13           1908 	mov	dpl,#0x13
   0926 C0 02              1909 	push	ar2
   0928 C0 03              1910 	push	ar3
   092A 12s00r00           1911 	lcall	_T6963C_writeAt
                    092D   1912 	C$snake.c$210$1$1 ==.
                           1913 ;	../snake.c:210: SNAKE_liveOrDie(&snake);
   092D 90s00r1F           1914 	mov	dptr,#_testSnakeEatsAFruit_snake_1_1
   0930 75 F0 00           1915 	mov	b,#0x00
   0933 12s01r00           1916 	lcall	_SNAKE_liveOrDie
                    0936   1917 	C$snake.c$211$1$1 ==.
                           1918 ;	../snake.c:211: testsInError += assertEquals(snake.status, ALIVE, "SF003");
   0936 90s00r22           1919 	mov	dptr,#(_testSnakeEatsAFruit_snake_1_1 + 0x0003)
   0939 E0                 1920 	movx	a,@dptr
   093A FC                 1921 	mov	r4,a
   093B 7D 00              1922 	mov	r5,#0x00
   093D 90s00r00           1923 	mov	dptr,#_assertEquals_PARM_2
   0940 E4                 1924 	clr	a
   0941 F0                 1925 	movx	@dptr,a
   0942 A3                 1926 	inc	dptr
   0943 F0                 1927 	movx	@dptr,a
   0944 90s00r00           1928 	mov	dptr,#_assertEquals_PARM_3
   0947 74r5C              1929 	mov	a,#__str_18
   0949 F0                 1930 	movx	@dptr,a
   094A A3                 1931 	inc	dptr
   094B 74s00              1932 	mov	a,#(__str_18 >> 8)
   094D F0                 1933 	movx	@dptr,a
   094E A3                 1934 	inc	dptr
   094F 74 80              1935 	mov	a,#0x80
   0951 F0                 1936 	movx	@dptr,a
   0952 8C 82              1937 	mov	dpl,r4
   0954 8D 83              1938 	mov	dph,r5
   0956 12s00r00           1939 	lcall	_assertEquals
   0959 AC 82              1940 	mov	r4,dpl
   095B AD 83              1941 	mov	r5,dph
   095D D0 03              1942 	pop	ar3
   095F D0 02              1943 	pop	ar2
   0961 EC                 1944 	mov	a,r4
   0962 2A                 1945 	add	a,r2
   0963 FA                 1946 	mov	r2,a
   0964 ED                 1947 	mov	a,r5
   0965 3B                 1948 	addc	a,r3
                    0966   1949 	C$snake.c$213$1$1 ==.
                           1950 ;	../snake.c:213: return testsInError;	
                    0966   1951 	C$snake.c$214$1$1 ==.
                    0966   1952 	XG$testSnakeEatsAFruit$0$0 ==.
   0966 8A 82              1953 	mov	dpl,r2
   0968 F5 83              1954 	mov	dph,a
   096A 22                 1955 	ret
                           1956 ;------------------------------------------------------------
                           1957 ;Allocation info for local variables in function 'testSnakeMoves'
                           1958 ;------------------------------------------------------------
                           1959 ;testsInError              Allocated with name '_testSnakeMoves_testsInError_1_1'
                           1960 ;snake                     Allocated with name '_testSnakeMoves_snake_1_1'
                           1961 ;------------------------------------------------------------
                    096B   1962 	G$testSnakeMoves$0$0 ==.
                    096B   1963 	C$snake.c$216$1$1 ==.
                           1964 ;	../snake.c:216: int testSnakeMoves() {
                           1965 ;	-----------------------------------------
                           1966 ;	 function testSnakeMoves
                           1967 ;	-----------------------------------------
   096B                    1968 _testSnakeMoves:
                    096B   1969 	C$snake.c$220$1$1 ==.
                           1970 ;	../snake.c:220: snake.position.x = 10;
   096B 90s00r25           1971 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0001)
   096E 74 0A              1972 	mov	a,#0x0A
   0970 F0                 1973 	movx	@dptr,a
                    0971   1974 	C$snake.c$221$1$1 ==.
                           1975 ;	../snake.c:221: snake.position.y = 10;
   0971 90s00r26           1976 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0002)
   0974 74 0A              1977 	mov	a,#0x0A
   0976 F0                 1978 	movx	@dptr,a
                    0977   1979 	C$snake.c$223$1$1 ==.
                           1980 ;	../snake.c:223: snake.direction = MOVES_UP;
   0977 90s00r24           1981 	mov	dptr,#_testSnakeMoves_snake_1_1
   097A E4                 1982 	clr	a
   097B F0                 1983 	movx	@dptr,a
                    097C   1984 	C$snake.c$224$1$1 ==.
                           1985 ;	../snake.c:224: SNAKE_move(&snake);
   097C 90s00r24           1986 	mov	dptr,#_testSnakeMoves_snake_1_1
   097F 75 F0 00           1987 	mov	b,#0x00
   0982 12s00r00           1988 	lcall	_SNAKE_move
                    0985   1989 	C$snake.c$225$1$1 ==.
                           1990 ;	../snake.c:225: testsInError += assertEquals(9, snake.position.y, "SM001");
   0985 90s00r26           1991 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0002)
   0988 E0                 1992 	movx	a,@dptr
   0989 FA                 1993 	mov	r2,a
   098A 7B 00              1994 	mov	r3,#0x00
   098C 90s00r00           1995 	mov	dptr,#_assertEquals_PARM_2
   098F EA                 1996 	mov	a,r2
   0990 F0                 1997 	movx	@dptr,a
   0991 A3                 1998 	inc	dptr
   0992 EB                 1999 	mov	a,r3
   0993 F0                 2000 	movx	@dptr,a
   0994 90s00r00           2001 	mov	dptr,#_assertEquals_PARM_3
   0997 74r62              2002 	mov	a,#__str_19
   0999 F0                 2003 	movx	@dptr,a
   099A A3                 2004 	inc	dptr
   099B 74s00              2005 	mov	a,#(__str_19 >> 8)
   099D F0                 2006 	movx	@dptr,a
   099E A3                 2007 	inc	dptr
   099F 74 80              2008 	mov	a,#0x80
   09A1 F0                 2009 	movx	@dptr,a
   09A2 90 00 09           2010 	mov	dptr,#0x0009
   09A5 12s00r00           2011 	lcall	_assertEquals
   09A8 AA 82              2012 	mov	r2,dpl
   09AA AB 83              2013 	mov	r3,dph
                    09AC   2014 	C$snake.c$227$1$1 ==.
                           2015 ;	../snake.c:227: snake.direction = MOVES_DOWN;
                    09AC   2016 	C$snake.c$228$1$1 ==.
                           2017 ;	../snake.c:228: SNAKE_move(&snake);
   09AC 90s00r24           2018 	mov	dptr,#_testSnakeMoves_snake_1_1
   09AF 74 01              2019 	mov	a,#0x01
   09B1 F0                 2020 	movx	@dptr,a
   09B2 75 F0 00           2021 	mov	b,#0x00
   09B5 C0 02              2022 	push	ar2
   09B7 C0 03              2023 	push	ar3
   09B9 12s00r00           2024 	lcall	_SNAKE_move
                    09BC   2025 	C$snake.c$229$1$1 ==.
                           2026 ;	../snake.c:229: testsInError += assertEquals(10, snake.position.y, "SM002");
   09BC 90s00r26           2027 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0002)
   09BF E0                 2028 	movx	a,@dptr
   09C0 FC                 2029 	mov	r4,a
   09C1 7D 00              2030 	mov	r5,#0x00
   09C3 90s00r00           2031 	mov	dptr,#_assertEquals_PARM_2
   09C6 EC                 2032 	mov	a,r4
   09C7 F0                 2033 	movx	@dptr,a
   09C8 A3                 2034 	inc	dptr
   09C9 ED                 2035 	mov	a,r5
   09CA F0                 2036 	movx	@dptr,a
   09CB 90s00r00           2037 	mov	dptr,#_assertEquals_PARM_3
   09CE 74r68              2038 	mov	a,#__str_20
   09D0 F0                 2039 	movx	@dptr,a
   09D1 A3                 2040 	inc	dptr
   09D2 74s00              2041 	mov	a,#(__str_20 >> 8)
   09D4 F0                 2042 	movx	@dptr,a
   09D5 A3                 2043 	inc	dptr
   09D6 74 80              2044 	mov	a,#0x80
   09D8 F0                 2045 	movx	@dptr,a
   09D9 90 00 0A           2046 	mov	dptr,#0x000A
   09DC 12s00r00           2047 	lcall	_assertEquals
   09DF AC 82              2048 	mov	r4,dpl
   09E1 AD 83              2049 	mov	r5,dph
   09E3 D0 03              2050 	pop	ar3
   09E5 D0 02              2051 	pop	ar2
   09E7 EC                 2052 	mov	a,r4
   09E8 2A                 2053 	add	a,r2
   09E9 FA                 2054 	mov	r2,a
   09EA ED                 2055 	mov	a,r5
   09EB 3B                 2056 	addc	a,r3
   09EC FB                 2057 	mov	r3,a
                    09ED   2058 	C$snake.c$231$1$1 ==.
                           2059 ;	../snake.c:231: snake.direction = MOVES_LEFT;
                    09ED   2060 	C$snake.c$232$1$1 ==.
                           2061 ;	../snake.c:232: SNAKE_move(&snake);
   09ED 90s00r24           2062 	mov	dptr,#_testSnakeMoves_snake_1_1
   09F0 74 02              2063 	mov	a,#0x02
   09F2 F0                 2064 	movx	@dptr,a
   09F3 75 F0 00           2065 	mov	b,#0x00
   09F6 C0 02              2066 	push	ar2
   09F8 C0 03              2067 	push	ar3
   09FA 12s00r00           2068 	lcall	_SNAKE_move
                    09FD   2069 	C$snake.c$233$1$1 ==.
                           2070 ;	../snake.c:233: testsInError += assertEquals( 9, snake.position.x, "SM003");
   09FD 90s00r25           2071 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0001)
   0A00 E0                 2072 	movx	a,@dptr
   0A01 FC                 2073 	mov	r4,a
   0A02 7D 00              2074 	mov	r5,#0x00
   0A04 90s00r00           2075 	mov	dptr,#_assertEquals_PARM_2
   0A07 EC                 2076 	mov	a,r4
   0A08 F0                 2077 	movx	@dptr,a
   0A09 A3                 2078 	inc	dptr
   0A0A ED                 2079 	mov	a,r5
   0A0B F0                 2080 	movx	@dptr,a
   0A0C 90s00r00           2081 	mov	dptr,#_assertEquals_PARM_3
   0A0F 74r6E              2082 	mov	a,#__str_21
   0A11 F0                 2083 	movx	@dptr,a
   0A12 A3                 2084 	inc	dptr
   0A13 74s00              2085 	mov	a,#(__str_21 >> 8)
   0A15 F0                 2086 	movx	@dptr,a
   0A16 A3                 2087 	inc	dptr
   0A17 74 80              2088 	mov	a,#0x80
   0A19 F0                 2089 	movx	@dptr,a
   0A1A 90 00 09           2090 	mov	dptr,#0x0009
   0A1D 12s00r00           2091 	lcall	_assertEquals
   0A20 AC 82              2092 	mov	r4,dpl
   0A22 AD 83              2093 	mov	r5,dph
   0A24 D0 03              2094 	pop	ar3
   0A26 D0 02              2095 	pop	ar2
   0A28 EC                 2096 	mov	a,r4
   0A29 2A                 2097 	add	a,r2
   0A2A FA                 2098 	mov	r2,a
   0A2B ED                 2099 	mov	a,r5
   0A2C 3B                 2100 	addc	a,r3
   0A2D FB                 2101 	mov	r3,a
                    0A2E   2102 	C$snake.c$235$1$1 ==.
                           2103 ;	../snake.c:235: snake.direction = MOVES_RIGHT;
                    0A2E   2104 	C$snake.c$236$1$1 ==.
                           2105 ;	../snake.c:236: SNAKE_move(&snake);
   0A2E 90s00r24           2106 	mov	dptr,#_testSnakeMoves_snake_1_1
   0A31 74 03              2107 	mov	a,#0x03
   0A33 F0                 2108 	movx	@dptr,a
   0A34 75 F0 00           2109 	mov	b,#0x00
   0A37 C0 02              2110 	push	ar2
   0A39 C0 03              2111 	push	ar3
   0A3B 12s00r00           2112 	lcall	_SNAKE_move
                    0A3E   2113 	C$snake.c$237$1$1 ==.
                           2114 ;	../snake.c:237: testsInError += assertEquals(10, snake.position.x, "SM004");
   0A3E 90s00r25           2115 	mov	dptr,#(_testSnakeMoves_snake_1_1 + 0x0001)
   0A41 E0                 2116 	movx	a,@dptr
   0A42 FC                 2117 	mov	r4,a
   0A43 7D 00              2118 	mov	r5,#0x00
   0A45 90s00r00           2119 	mov	dptr,#_assertEquals_PARM_2
   0A48 EC                 2120 	mov	a,r4
   0A49 F0                 2121 	movx	@dptr,a
   0A4A A3                 2122 	inc	dptr
   0A4B ED                 2123 	mov	a,r5
   0A4C F0                 2124 	movx	@dptr,a
   0A4D 90s00r00           2125 	mov	dptr,#_assertEquals_PARM_3
   0A50 74r74              2126 	mov	a,#__str_22
   0A52 F0                 2127 	movx	@dptr,a
   0A53 A3                 2128 	inc	dptr
   0A54 74s00              2129 	mov	a,#(__str_22 >> 8)
   0A56 F0                 2130 	movx	@dptr,a
   0A57 A3                 2131 	inc	dptr
   0A58 74 80              2132 	mov	a,#0x80
   0A5A F0                 2133 	movx	@dptr,a
   0A5B 90 00 0A           2134 	mov	dptr,#0x000A
   0A5E 12s00r00           2135 	lcall	_assertEquals
   0A61 AC 82              2136 	mov	r4,dpl
   0A63 AD 83              2137 	mov	r5,dph
   0A65 D0 03              2138 	pop	ar3
   0A67 D0 02              2139 	pop	ar2
   0A69 EC                 2140 	mov	a,r4
   0A6A 2A                 2141 	add	a,r2
   0A6B FA                 2142 	mov	r2,a
   0A6C ED                 2143 	mov	a,r5
   0A6D 3B                 2144 	addc	a,r3
                    0A6E   2145 	C$snake.c$239$1$1 ==.
                           2146 ;	../snake.c:239: return testsInError;
                    0A6E   2147 	C$snake.c$240$1$1 ==.
                    0A6E   2148 	XG$testSnakeMoves$0$0 ==.
   0A6E 8A 82              2149 	mov	dpl,r2
   0A70 F5 83              2150 	mov	dph,a
   0A72 22                 2151 	ret
                           2152 ;------------------------------------------------------------
                           2153 ;Allocation info for local variables in function 'testSnakeHitsABorder'
                           2154 ;------------------------------------------------------------
                           2155 ;testsInError              Allocated with name '_testSnakeHitsABorder_testsInError_1_1'
                           2156 ;snake                     Allocated with name '_testSnakeHitsABorder_snake_1_1'
                           2157 ;------------------------------------------------------------
                    0A73   2158 	G$testSnakeHitsABorder$0$0 ==.
                    0A73   2159 	C$snake.c$242$1$1 ==.
                           2160 ;	../snake.c:242: int testSnakeHitsABorder() {
                           2161 ;	-----------------------------------------
                           2162 ;	 function testSnakeHitsABorder
                           2163 ;	-----------------------------------------
   0A73                    2164 _testSnakeHitsABorder:
                    0A73   2165 	C$snake.c$247$1$1 ==.
                           2166 ;	../snake.c:247: snake.status = ALIVE;
   0A73 90s00r2C           2167 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0A76 E4                 2168 	clr	a
   0A77 F0                 2169 	movx	@dptr,a
                    0A78   2170 	C$snake.c$248$1$1 ==.
                           2171 ;	../snake.c:248: snake.position.x = SNAKE_LIMIT_X0 + 1;
   0A78 90s00r2A           2172 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0001)
   0A7B 74 01              2173 	mov	a,#0x01
   0A7D F0                 2174 	movx	@dptr,a
                    0A7E   2175 	C$snake.c$249$1$1 ==.
                           2176 ;	../snake.c:249: snake.position.y = SNAKE_LIMIT_Y0 + 1;
   0A7E 90s00r2B           2177 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0002)
   0A81 74 01              2178 	mov	a,#0x01
   0A83 F0                 2179 	movx	@dptr,a
                    0A84   2180 	C$snake.c$250$1$1 ==.
                           2181 ;	../snake.c:250: SNAKE_liveOrDie(&snake);
   0A84 90s00r29           2182 	mov	dptr,#_testSnakeHitsABorder_snake_1_1
   0A87 75 F0 00           2183 	mov	b,#0x00
   0A8A 12s01r00           2184 	lcall	_SNAKE_liveOrDie
                    0A8D   2185 	C$snake.c$251$1$1 ==.
                           2186 ;	../snake.c:251: testsInError += assertEquals(snake.status, ALIVE, "SO01");
   0A8D 90s00r2C           2187 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0A90 E0                 2188 	movx	a,@dptr
   0A91 FA                 2189 	mov	r2,a
   0A92 7B 00              2190 	mov	r3,#0x00
   0A94 90s00r00           2191 	mov	dptr,#_assertEquals_PARM_2
   0A97 E4                 2192 	clr	a
   0A98 F0                 2193 	movx	@dptr,a
   0A99 A3                 2194 	inc	dptr
   0A9A F0                 2195 	movx	@dptr,a
   0A9B 90s00r00           2196 	mov	dptr,#_assertEquals_PARM_3
   0A9E 74r7A              2197 	mov	a,#__str_23
   0AA0 F0                 2198 	movx	@dptr,a
   0AA1 A3                 2199 	inc	dptr
   0AA2 74s00              2200 	mov	a,#(__str_23 >> 8)
   0AA4 F0                 2201 	movx	@dptr,a
   0AA5 A3                 2202 	inc	dptr
   0AA6 74 80              2203 	mov	a,#0x80
   0AA8 F0                 2204 	movx	@dptr,a
   0AA9 8A 82              2205 	mov	dpl,r2
   0AAB 8B 83              2206 	mov	dph,r3
   0AAD 12s00r00           2207 	lcall	_assertEquals
   0AB0 AA 82              2208 	mov	r2,dpl
   0AB2 AB 83              2209 	mov	r3,dph
                    0AB4   2210 	C$snake.c$253$1$1 ==.
                           2211 ;	../snake.c:253: snake.status = ALIVE;
   0AB4 90s00r2C           2212 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
                    0AB7   2213 	C$snake.c$254$1$1 ==.
                           2214 ;	../snake.c:254: snake.position.x = SNAKE_LIMIT_X0;
   0AB7 E4                 2215 	clr	a
   0AB8 F0                 2216 	movx	@dptr,a
   0AB9 90s00r2A           2217 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0001)
   0ABC F0                 2218 	movx	@dptr,a
                    0ABD   2219 	C$snake.c$255$1$1 ==.
                           2220 ;	../snake.c:255: snake.position.y = SNAKE_LIMIT_Y0 + 1;
   0ABD 90s00r2B           2221 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0002)
   0AC0 74 01              2222 	mov	a,#0x01
   0AC2 F0                 2223 	movx	@dptr,a
                    0AC3   2224 	C$snake.c$256$1$1 ==.
                           2225 ;	../snake.c:256: SNAKE_liveOrDie(&snake);
   0AC3 90s00r29           2226 	mov	dptr,#_testSnakeHitsABorder_snake_1_1
   0AC6 75 F0 00           2227 	mov	b,#0x00
   0AC9 C0 02              2228 	push	ar2
   0ACB C0 03              2229 	push	ar3
   0ACD 12s01r00           2230 	lcall	_SNAKE_liveOrDie
                    0AD0   2231 	C$snake.c$257$1$1 ==.
                           2232 ;	../snake.c:257: testsInError += assertEquals(snake.status, DEAD, "SO02");
   0AD0 90s00r2C           2233 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0AD3 E0                 2234 	movx	a,@dptr
   0AD4 FC                 2235 	mov	r4,a
   0AD5 7D 00              2236 	mov	r5,#0x00
   0AD7 90s00r00           2237 	mov	dptr,#_assertEquals_PARM_2
   0ADA 74 01              2238 	mov	a,#0x01
   0ADC F0                 2239 	movx	@dptr,a
   0ADD A3                 2240 	inc	dptr
   0ADE E4                 2241 	clr	a
   0ADF F0                 2242 	movx	@dptr,a
   0AE0 90s00r00           2243 	mov	dptr,#_assertEquals_PARM_3
   0AE3 74r7F              2244 	mov	a,#__str_24
   0AE5 F0                 2245 	movx	@dptr,a
   0AE6 A3                 2246 	inc	dptr
   0AE7 74s00              2247 	mov	a,#(__str_24 >> 8)
   0AE9 F0                 2248 	movx	@dptr,a
   0AEA A3                 2249 	inc	dptr
   0AEB 74 80              2250 	mov	a,#0x80
   0AED F0                 2251 	movx	@dptr,a
   0AEE 8C 82              2252 	mov	dpl,r4
   0AF0 8D 83              2253 	mov	dph,r5
   0AF2 12s00r00           2254 	lcall	_assertEquals
   0AF5 AC 82              2255 	mov	r4,dpl
   0AF7 AD 83              2256 	mov	r5,dph
   0AF9 D0 03              2257 	pop	ar3
   0AFB D0 02              2258 	pop	ar2
   0AFD EC                 2259 	mov	a,r4
   0AFE 2A                 2260 	add	a,r2
   0AFF FA                 2261 	mov	r2,a
   0B00 ED                 2262 	mov	a,r5
   0B01 3B                 2263 	addc	a,r3
   0B02 FB                 2264 	mov	r3,a
                    0B03   2265 	C$snake.c$259$1$1 ==.
                           2266 ;	../snake.c:259: snake.status = ALIVE;
   0B03 90s00r2C           2267 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0B06 E4                 2268 	clr	a
   0B07 F0                 2269 	movx	@dptr,a
                    0B08   2270 	C$snake.c$260$1$1 ==.
                           2271 ;	../snake.c:260: snake.position.x = SNAKE_LIMIT_X0 + 1;
   0B08 90s00r2A           2272 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0001)
   0B0B 74 01              2273 	mov	a,#0x01
   0B0D F0                 2274 	movx	@dptr,a
                    0B0E   2275 	C$snake.c$261$1$1 ==.
                           2276 ;	../snake.c:261: snake.position.y = SNAKE_LIMIT_Y0;
   0B0E 90s00r2B           2277 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0002)
   0B11 E4                 2278 	clr	a
   0B12 F0                 2279 	movx	@dptr,a
                    0B13   2280 	C$snake.c$262$1$1 ==.
                           2281 ;	../snake.c:262: SNAKE_liveOrDie(&snake);
   0B13 90s00r29           2282 	mov	dptr,#_testSnakeHitsABorder_snake_1_1
   0B16 75 F0 00           2283 	mov	b,#0x00
   0B19 C0 02              2284 	push	ar2
   0B1B C0 03              2285 	push	ar3
   0B1D 12s01r00           2286 	lcall	_SNAKE_liveOrDie
                    0B20   2287 	C$snake.c$263$1$1 ==.
                           2288 ;	../snake.c:263: testsInError += assertEquals(snake.status, DEAD, "SO03");
   0B20 90s00r2C           2289 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0B23 E0                 2290 	movx	a,@dptr
   0B24 FC                 2291 	mov	r4,a
   0B25 7D 00              2292 	mov	r5,#0x00
   0B27 90s00r00           2293 	mov	dptr,#_assertEquals_PARM_2
   0B2A 74 01              2294 	mov	a,#0x01
   0B2C F0                 2295 	movx	@dptr,a
   0B2D A3                 2296 	inc	dptr
   0B2E E4                 2297 	clr	a
   0B2F F0                 2298 	movx	@dptr,a
   0B30 90s00r00           2299 	mov	dptr,#_assertEquals_PARM_3
   0B33 74r84              2300 	mov	a,#__str_25
   0B35 F0                 2301 	movx	@dptr,a
   0B36 A3                 2302 	inc	dptr
   0B37 74s00              2303 	mov	a,#(__str_25 >> 8)
   0B39 F0                 2304 	movx	@dptr,a
   0B3A A3                 2305 	inc	dptr
   0B3B 74 80              2306 	mov	a,#0x80
   0B3D F0                 2307 	movx	@dptr,a
   0B3E 8C 82              2308 	mov	dpl,r4
   0B40 8D 83              2309 	mov	dph,r5
   0B42 12s00r00           2310 	lcall	_assertEquals
   0B45 AC 82              2311 	mov	r4,dpl
   0B47 AD 83              2312 	mov	r5,dph
   0B49 D0 03              2313 	pop	ar3
   0B4B D0 02              2314 	pop	ar2
   0B4D EC                 2315 	mov	a,r4
   0B4E 2A                 2316 	add	a,r2
   0B4F FA                 2317 	mov	r2,a
   0B50 ED                 2318 	mov	a,r5
   0B51 3B                 2319 	addc	a,r3
   0B52 FB                 2320 	mov	r3,a
                    0B53   2321 	C$snake.c$265$1$1 ==.
                           2322 ;	../snake.c:265: snake.status = ALIVE;
   0B53 90s00r2C           2323 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0B56 E4                 2324 	clr	a
   0B57 F0                 2325 	movx	@dptr,a
                    0B58   2326 	C$snake.c$266$1$1 ==.
                           2327 ;	../snake.c:266: snake.position.x = SNAKE_LIMIT_X1;
   0B58 90s00r2A           2328 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0001)
   0B5B 74 1D              2329 	mov	a,#0x1D
   0B5D F0                 2330 	movx	@dptr,a
                    0B5E   2331 	C$snake.c$267$1$1 ==.
                           2332 ;	../snake.c:267: snake.position.y = SNAKE_LIMIT_Y1 - 1;
   0B5E 90s00r2B           2333 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0002)
   0B61 74 0E              2334 	mov	a,#0x0E
   0B63 F0                 2335 	movx	@dptr,a
                    0B64   2336 	C$snake.c$268$1$1 ==.
                           2337 ;	../snake.c:268: SNAKE_liveOrDie(&snake);
   0B64 90s00r29           2338 	mov	dptr,#_testSnakeHitsABorder_snake_1_1
   0B67 75 F0 00           2339 	mov	b,#0x00
   0B6A C0 02              2340 	push	ar2
   0B6C C0 03              2341 	push	ar3
   0B6E 12s01r00           2342 	lcall	_SNAKE_liveOrDie
                    0B71   2343 	C$snake.c$269$1$1 ==.
                           2344 ;	../snake.c:269: testsInError += assertEquals(snake.status, DEAD, "SO04");
   0B71 90s00r2C           2345 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0B74 E0                 2346 	movx	a,@dptr
   0B75 FC                 2347 	mov	r4,a
   0B76 7D 00              2348 	mov	r5,#0x00
   0B78 90s00r00           2349 	mov	dptr,#_assertEquals_PARM_2
   0B7B 74 01              2350 	mov	a,#0x01
   0B7D F0                 2351 	movx	@dptr,a
   0B7E A3                 2352 	inc	dptr
   0B7F E4                 2353 	clr	a
   0B80 F0                 2354 	movx	@dptr,a
   0B81 90s00r00           2355 	mov	dptr,#_assertEquals_PARM_3
   0B84 74r89              2356 	mov	a,#__str_26
   0B86 F0                 2357 	movx	@dptr,a
   0B87 A3                 2358 	inc	dptr
   0B88 74s00              2359 	mov	a,#(__str_26 >> 8)
   0B8A F0                 2360 	movx	@dptr,a
   0B8B A3                 2361 	inc	dptr
   0B8C 74 80              2362 	mov	a,#0x80
   0B8E F0                 2363 	movx	@dptr,a
   0B8F 8C 82              2364 	mov	dpl,r4
   0B91 8D 83              2365 	mov	dph,r5
   0B93 12s00r00           2366 	lcall	_assertEquals
   0B96 AC 82              2367 	mov	r4,dpl
   0B98 AD 83              2368 	mov	r5,dph
   0B9A D0 03              2369 	pop	ar3
   0B9C D0 02              2370 	pop	ar2
   0B9E EC                 2371 	mov	a,r4
   0B9F 2A                 2372 	add	a,r2
   0BA0 FA                 2373 	mov	r2,a
   0BA1 ED                 2374 	mov	a,r5
   0BA2 3B                 2375 	addc	a,r3
   0BA3 FB                 2376 	mov	r3,a
                    0BA4   2377 	C$snake.c$271$1$1 ==.
                           2378 ;	../snake.c:271: snake.status = ALIVE;
   0BA4 90s00r2C           2379 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0BA7 E4                 2380 	clr	a
   0BA8 F0                 2381 	movx	@dptr,a
                    0BA9   2382 	C$snake.c$272$1$1 ==.
                           2383 ;	../snake.c:272: snake.position.x = SNAKE_LIMIT_X1 - 1;
   0BA9 90s00r2A           2384 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0001)
   0BAC 74 1C              2385 	mov	a,#0x1C
   0BAE F0                 2386 	movx	@dptr,a
                    0BAF   2387 	C$snake.c$273$1$1 ==.
                           2388 ;	../snake.c:273: snake.position.y = SNAKE_LIMIT_Y1;
   0BAF 90s00r2B           2389 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0002)
   0BB2 74 0F              2390 	mov	a,#0x0F
   0BB4 F0                 2391 	movx	@dptr,a
                    0BB5   2392 	C$snake.c$274$1$1 ==.
                           2393 ;	../snake.c:274: SNAKE_liveOrDie(&snake);
   0BB5 90s00r29           2394 	mov	dptr,#_testSnakeHitsABorder_snake_1_1
   0BB8 75 F0 00           2395 	mov	b,#0x00
   0BBB C0 02              2396 	push	ar2
   0BBD C0 03              2397 	push	ar3
   0BBF 12s01r00           2398 	lcall	_SNAKE_liveOrDie
                    0BC2   2399 	C$snake.c$275$1$1 ==.
                           2400 ;	../snake.c:275: testsInError += assertEquals(snake.status, DEAD, "SO05");
   0BC2 90s00r2C           2401 	mov	dptr,#(_testSnakeHitsABorder_snake_1_1 + 0x0003)
   0BC5 E0                 2402 	movx	a,@dptr
   0BC6 FC                 2403 	mov	r4,a
   0BC7 7D 00              2404 	mov	r5,#0x00
   0BC9 90s00r00           2405 	mov	dptr,#_assertEquals_PARM_2
   0BCC 74 01              2406 	mov	a,#0x01
   0BCE F0                 2407 	movx	@dptr,a
   0BCF A3                 2408 	inc	dptr
   0BD0 E4                 2409 	clr	a
   0BD1 F0                 2410 	movx	@dptr,a
   0BD2 90s00r00           2411 	mov	dptr,#_assertEquals_PARM_3
   0BD5 74r8E              2412 	mov	a,#__str_27
   0BD7 F0                 2413 	movx	@dptr,a
   0BD8 A3                 2414 	inc	dptr
   0BD9 74s00              2415 	mov	a,#(__str_27 >> 8)
   0BDB F0                 2416 	movx	@dptr,a
   0BDC A3                 2417 	inc	dptr
   0BDD 74 80              2418 	mov	a,#0x80
   0BDF F0                 2419 	movx	@dptr,a
   0BE0 8C 82              2420 	mov	dpl,r4
   0BE2 8D 83              2421 	mov	dph,r5
   0BE4 12s00r00           2422 	lcall	_assertEquals
   0BE7 AC 82              2423 	mov	r4,dpl
   0BE9 AD 83              2424 	mov	r5,dph
   0BEB D0 03              2425 	pop	ar3
   0BED D0 02              2426 	pop	ar2
   0BEF EC                 2427 	mov	a,r4
   0BF0 2A                 2428 	add	a,r2
   0BF1 FA                 2429 	mov	r2,a
   0BF2 ED                 2430 	mov	a,r5
   0BF3 3B                 2431 	addc	a,r3
                    0BF4   2432 	C$snake.c$277$1$1 ==.
                           2433 ;	../snake.c:277: return testsInError;
                    0BF4   2434 	C$snake.c$278$1$1 ==.
                    0BF4   2435 	XG$testSnakeHitsABorder$0$0 ==.
   0BF4 8A 82              2436 	mov	dpl,r2
   0BF6 F5 83              2437 	mov	dph,a
   0BF8 22                 2438 	ret
                           2439 ;------------------------------------------------------------
                           2440 ;Allocation info for local variables in function 'bddSnakeHitsItsTail'
                           2441 ;------------------------------------------------------------
                           2442 ;c                         Allocated with name '_bddSnakeHitsItsTail_c_1_1'
                           2443 ;snake                     Allocated with name '_bddSnakeHitsItsTail_snake_1_1'
                           2444 ;n                         Allocated with name '_bddSnakeHitsItsTail_n_1_1'
                           2445 ;------------------------------------------------------------
                    0BF9   2446 	G$bddSnakeHitsItsTail$0$0 ==.
                    0BF9   2447 	C$snake.c$287$1$1 ==.
                           2448 ;	../snake.c:287: int bddSnakeHitsItsTail() {
                           2449 ;	-----------------------------------------
                           2450 ;	 function bddSnakeHitsItsTail
                           2451 ;	-----------------------------------------
   0BF9                    2452 _bddSnakeHitsItsTail:
                    0BF9   2453 	C$snake.c$288$1$1 ==.
                           2454 ;	../snake.c:288: BddExpectedContent c = {
   0BF9 90s00r2E           2455 	mov	dptr,#_bddSnakeHitsItsTail_c_1_1
   0BFC 74 20              2456 	mov	a,#0x20
   0BFE F0                 2457 	movx	@dptr,a
   0BFF 90s00r2F           2458 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0001)
   0C02 74 31              2459 	mov	a,#0x31
   0C04 F0                 2460 	movx	@dptr,a
   0C05 90s00r30           2461 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0002)
   0C08 74 34              2462 	mov	a,#0x34
   0C0A F0                 2463 	movx	@dptr,a
   0C0B 90s00r31           2464 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0003)
   0C0E 74 31              2465 	mov	a,#0x31
   0C10 F0                 2466 	movx	@dptr,a
   0C11 90s00r32           2467 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0004)
   0C14 74 31              2468 	mov	a,#0x31
   0C16 F0                 2469 	movx	@dptr,a
   0C17 90s00r33           2470 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0005)
   0C1A 74 31              2471 	mov	a,#0x31
   0C1C F0                 2472 	movx	@dptr,a
   0C1D 90s00r34           2473 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0006)
   0C20 74 2E              2474 	mov	a,#0x2E
   0C22 F0                 2475 	movx	@dptr,a
   0C23 90s00r35           2476 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0007)
   0C26 74 2E              2477 	mov	a,#0x2E
   0C28 F0                 2478 	movx	@dptr,a
   0C29 90s00r36           2479 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0008)
   0C2C 74 2E              2480 	mov	a,#0x2E
   0C2E F0                 2481 	movx	@dptr,a
   0C2F 90s00r37           2482 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0009)
   0C32 74 2E              2483 	mov	a,#0x2E
   0C34 F0                 2484 	movx	@dptr,a
   0C35 90s00r38           2485 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000a)
   0C38 E4                 2486 	clr	a
   0C39 F0                 2487 	movx	@dptr,a
   0C3A 90s00r39           2488 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000b)
   0C3D 74 2E              2489 	mov	a,#0x2E
   0C3F F0                 2490 	movx	@dptr,a
   0C40 90s00r3A           2491 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000c)
   0C43 74 2E              2492 	mov	a,#0x2E
   0C45 F0                 2493 	movx	@dptr,a
   0C46 90s00r3B           2494 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000d)
   0C49 74 31              2495 	mov	a,#0x31
   0C4B F0                 2496 	movx	@dptr,a
   0C4C 90s00r3C           2497 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000e)
   0C4F 74 2E              2498 	mov	a,#0x2E
   0C51 F0                 2499 	movx	@dptr,a
   0C52 90s00r3D           2500 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x000f)
   0C55 74 2E              2501 	mov	a,#0x2E
   0C57 F0                 2502 	movx	@dptr,a
   0C58 90s00r3E           2503 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0010)
   0C5B 74 31              2504 	mov	a,#0x31
   0C5D F0                 2505 	movx	@dptr,a
   0C5E 90s00r3F           2506 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0011)
   0C61 74 2E              2507 	mov	a,#0x2E
   0C63 F0                 2508 	movx	@dptr,a
   0C64 90s00r40           2509 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0012)
   0C67 74 2E              2510 	mov	a,#0x2E
   0C69 F0                 2511 	movx	@dptr,a
   0C6A 90s00r41           2512 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0013)
   0C6D 74 2E              2513 	mov	a,#0x2E
   0C6F F0                 2514 	movx	@dptr,a
   0C70 90s00r42           2515 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0014)
   0C73 74 2E              2516 	mov	a,#0x2E
   0C75 F0                 2517 	movx	@dptr,a
   0C76 90s00r43           2518 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0015)
   0C79 E4                 2519 	clr	a
   0C7A F0                 2520 	movx	@dptr,a
   0C7B 90s00r44           2521 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0016)
   0C7E 74 2E              2522 	mov	a,#0x2E
   0C80 F0                 2523 	movx	@dptr,a
   0C81 90s00r45           2524 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0017)
   0C84 74 2E              2525 	mov	a,#0x2E
   0C86 F0                 2526 	movx	@dptr,a
   0C87 90s00r46           2527 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0018)
   0C8A 74 31              2528 	mov	a,#0x31
   0C8C F0                 2529 	movx	@dptr,a
   0C8D 90s00r47           2530 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0019)
   0C90 74 31              2531 	mov	a,#0x31
   0C92 F0                 2532 	movx	@dptr,a
   0C93 90s00r48           2533 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001a)
   0C96 74 31              2534 	mov	a,#0x31
   0C98 F0                 2535 	movx	@dptr,a
   0C99 90s00r49           2536 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001b)
   0C9C 74 31              2537 	mov	a,#0x31
   0C9E F0                 2538 	movx	@dptr,a
   0C9F 90s00r4A           2539 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001c)
   0CA2 74 2E              2540 	mov	a,#0x2E
   0CA4 F0                 2541 	movx	@dptr,a
   0CA5 90s00r4B           2542 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001d)
   0CA8 74 2E              2543 	mov	a,#0x2E
   0CAA F0                 2544 	movx	@dptr,a
   0CAB 90s00r4C           2545 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001e)
   0CAE 74 2E              2546 	mov	a,#0x2E
   0CB0 F0                 2547 	movx	@dptr,a
   0CB1 90s00r4D           2548 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x001f)
   0CB4 74 2E              2549 	mov	a,#0x2E
   0CB6 F0                 2550 	movx	@dptr,a
   0CB7 90s00r4E           2551 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0020)
   0CBA E4                 2552 	clr	a
   0CBB F0                 2553 	movx	@dptr,a
   0CBC 90s00r4F           2554 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0021)
   0CBF 74 2E              2555 	mov	a,#0x2E
   0CC1 F0                 2556 	movx	@dptr,a
   0CC2 90s00r50           2557 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0022)
   0CC5 74 2E              2558 	mov	a,#0x2E
   0CC7 F0                 2559 	movx	@dptr,a
   0CC8 90s00r51           2560 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0023)
   0CCB 74 2E              2561 	mov	a,#0x2E
   0CCD F0                 2562 	movx	@dptr,a
   0CCE 90s00r52           2563 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0024)
   0CD1 74 2E              2564 	mov	a,#0x2E
   0CD3 F0                 2565 	movx	@dptr,a
   0CD4 90s00r53           2566 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0025)
   0CD7 74 2E              2567 	mov	a,#0x2E
   0CD9 F0                 2568 	movx	@dptr,a
   0CDA 90s00r54           2569 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0026)
   0CDD 74 2E              2570 	mov	a,#0x2E
   0CDF F0                 2571 	movx	@dptr,a
   0CE0 90s00r55           2572 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0027)
   0CE3 74 2E              2573 	mov	a,#0x2E
   0CE5 F0                 2574 	movx	@dptr,a
   0CE6 90s00r56           2575 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0028)
   0CE9 74 2E              2576 	mov	a,#0x2E
   0CEB F0                 2577 	movx	@dptr,a
   0CEC 90s00r57           2578 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0029)
   0CEF 74 2E              2579 	mov	a,#0x2E
   0CF1 F0                 2580 	movx	@dptr,a
   0CF2 90s00r58           2581 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002a)
   0CF5 74 2E              2582 	mov	a,#0x2E
   0CF7 F0                 2583 	movx	@dptr,a
   0CF8 90s00r59           2584 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002b)
   0CFB E4                 2585 	clr	a
   0CFC F0                 2586 	movx	@dptr,a
   0CFD 90s00r5A           2587 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002c)
   0D00 74 2E              2588 	mov	a,#0x2E
   0D02 F0                 2589 	movx	@dptr,a
   0D03 90s00r5B           2590 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002d)
   0D06 74 2E              2591 	mov	a,#0x2E
   0D08 F0                 2592 	movx	@dptr,a
   0D09 90s00r5C           2593 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002e)
   0D0C 74 2E              2594 	mov	a,#0x2E
   0D0E F0                 2595 	movx	@dptr,a
   0D0F 90s00r5D           2596 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x002f)
   0D12 74 2E              2597 	mov	a,#0x2E
   0D14 F0                 2598 	movx	@dptr,a
   0D15 90s00r5E           2599 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0030)
   0D18 74 2E              2600 	mov	a,#0x2E
   0D1A F0                 2601 	movx	@dptr,a
   0D1B 90s00r5F           2602 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0031)
   0D1E 74 2E              2603 	mov	a,#0x2E
   0D20 F0                 2604 	movx	@dptr,a
   0D21 90s00r60           2605 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0032)
   0D24 74 2E              2606 	mov	a,#0x2E
   0D26 F0                 2607 	movx	@dptr,a
   0D27 90s00r61           2608 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0033)
   0D2A 74 2E              2609 	mov	a,#0x2E
   0D2C F0                 2610 	movx	@dptr,a
   0D2D 90s00r62           2611 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0034)
   0D30 74 2E              2612 	mov	a,#0x2E
   0D32 F0                 2613 	movx	@dptr,a
   0D33 90s00r63           2614 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0035)
   0D36 74 2E              2615 	mov	a,#0x2E
   0D38 F0                 2616 	movx	@dptr,a
   0D39 90s00r64           2617 	mov	dptr,#(_bddSnakeHitsItsTail_c_1_1 + 0x0036)
   0D3C E4                 2618 	clr	a
   0D3D F0                 2619 	movx	@dptr,a
                    0D3E   2620 	C$snake.c$295$1$1 ==.
                           2621 ;	../snake.c:295: Snake snake = {MOVES_RIGHT, {BDD_SCREEN_X, BDD_SCREEN_Y}, ALIVE, 11};
   0D3E 90s00r65           2622 	mov	dptr,#_bddSnakeHitsItsTail_snake_1_1
   0D41 74 03              2623 	mov	a,#0x03
   0D43 F0                 2624 	movx	@dptr,a
   0D44 90s00r66           2625 	mov	dptr,#(_bddSnakeHitsItsTail_snake_1_1 + 0x0001)
   0D47 74 13              2626 	mov	a,#0x13
   0D49 F0                 2627 	movx	@dptr,a
   0D4A 90s00r67           2628 	mov	dptr,#(_bddSnakeHitsItsTail_snake_1_1 + 0x0002)
   0D4D 74 0A              2629 	mov	a,#0x0A
   0D4F F0                 2630 	movx	@dptr,a
   0D50 90s00r68           2631 	mov	dptr,#(_bddSnakeHitsItsTail_snake_1_1 + 0x0003)
   0D53 E4                 2632 	clr	a
   0D54 F0                 2633 	movx	@dptr,a
   0D55 90s00r69           2634 	mov	dptr,#(_bddSnakeHitsItsTail_snake_1_1 + 0x0004)
   0D58 74 0B              2635 	mov	a,#0x0B
   0D5A F0                 2636 	movx	@dptr,a
                    0D5B   2637 	C$snake.c$298$1$1 ==.
                           2638 ;	../snake.c:298: BUFFER_clear();
   0D5B 12s00r00           2639 	lcall	_BUFFER_clear
                    0D5E   2640 	C$snake.c$299$1$1 ==.
                           2641 ;	../snake.c:299: BDD_clear();
   0D5E 12s00r00           2642 	lcall	_BDD_clear
                    0D61   2643 	C$snake.c$301$1$1 ==.
                           2644 ;	../snake.c:301: for (n = 0; n < 5; n++) {
   0D61 90s00r6A           2645 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D64 74 05              2646 	mov	a,#0x05
   0D66 F0                 2647 	movx	@dptr,a
   0D67                    2648 00103$:
                    0D67   2649 	C$snake.c$302$2$2 ==.
                           2650 ;	../snake.c:302: SNAKE_iterate(&snake, ARROW_NEUTRAL);
   0D67 90s00r10           2651 	mov	dptr,#_SNAKE_iterate_PARM_2
   0D6A E4                 2652 	clr	a
   0D6B F0                 2653 	movx	@dptr,a
   0D6C 90s00r65           2654 	mov	dptr,#_bddSnakeHitsItsTail_snake_1_1
   0D6F 75 F0 00           2655 	mov	b,#0x00
   0D72 12s04r69           2656 	lcall	_SNAKE_iterate
   0D75 90s00r6A           2657 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D78 E0                 2658 	movx	a,@dptr
   0D79 14                 2659 	dec	a
                    0D7A   2660 	C$snake.c$301$2$2 ==.
                           2661 ;	../snake.c:301: for (n = 0; n < 5; n++) {
   0D7A 90s00r6A           2662 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D7D F0                 2663 	movx	@dptr,a
   0D7E FA                 2664 	mov	r2,a
   0D7F 70 E6              2665 	jnz	00103$
                    0D81   2666 	C$snake.c$304$2$2 ==.
                           2667 ;	../snake.c:304: for (n = 0; n < 2; n++) {
   0D81 90s00r6A           2668 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D84 74 02              2669 	mov	a,#0x02
   0D86 F0                 2670 	movx	@dptr,a
   0D87                    2671 00106$:
                    0D87   2672 	C$snake.c$305$2$3 ==.
                           2673 ;	../snake.c:305: SNAKE_iterate(&snake, ARROW_DOWN);
   0D87 90s00r10           2674 	mov	dptr,#_SNAKE_iterate_PARM_2
   0D8A 74 02              2675 	mov	a,#0x02
   0D8C F0                 2676 	movx	@dptr,a
   0D8D 90s00r65           2677 	mov	dptr,#_bddSnakeHitsItsTail_snake_1_1
   0D90 75 F0 00           2678 	mov	b,#0x00
   0D93 12s04r69           2679 	lcall	_SNAKE_iterate
   0D96 90s00r6A           2680 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D99 E0                 2681 	movx	a,@dptr
   0D9A 14                 2682 	dec	a
                    0D9B   2683 	C$snake.c$304$2$3 ==.
                           2684 ;	../snake.c:304: for (n = 0; n < 2; n++) {
   0D9B 90s00r6A           2685 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0D9E F0                 2686 	movx	@dptr,a
   0D9F FA                 2687 	mov	r2,a
   0DA0 70 E5              2688 	jnz	00106$
                    0DA2   2689 	C$snake.c$307$2$3 ==.
                           2690 ;	../snake.c:307: for (n = 0; n < 3; n++) {
   0DA2 90s00r6A           2691 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DA5 74 03              2692 	mov	a,#0x03
   0DA7 F0                 2693 	movx	@dptr,a
   0DA8                    2694 00109$:
                    0DA8   2695 	C$snake.c$308$2$4 ==.
                           2696 ;	../snake.c:308: SNAKE_iterate(&snake, ARROW_LEFT);
   0DA8 90s00r10           2697 	mov	dptr,#_SNAKE_iterate_PARM_2
   0DAB 74 03              2698 	mov	a,#0x03
   0DAD F0                 2699 	movx	@dptr,a
   0DAE 90s00r65           2700 	mov	dptr,#_bddSnakeHitsItsTail_snake_1_1
   0DB1 75 F0 00           2701 	mov	b,#0x00
   0DB4 12s04r69           2702 	lcall	_SNAKE_iterate
   0DB7 90s00r6A           2703 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DBA E0                 2704 	movx	a,@dptr
   0DBB 14                 2705 	dec	a
                    0DBC   2706 	C$snake.c$307$2$4 ==.
                           2707 ;	../snake.c:307: for (n = 0; n < 3; n++) {
   0DBC 90s00r6A           2708 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DBF F0                 2709 	movx	@dptr,a
   0DC0 FA                 2710 	mov	r2,a
   0DC1 70 E5              2711 	jnz	00109$
                    0DC3   2712 	C$snake.c$310$2$4 ==.
                           2713 ;	../snake.c:310: for (n = 0; n < 2; n++) {
   0DC3 90s00r6A           2714 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DC6 74 02              2715 	mov	a,#0x02
   0DC8 F0                 2716 	movx	@dptr,a
   0DC9                    2717 00112$:
                    0DC9   2718 	C$snake.c$311$2$5 ==.
                           2719 ;	../snake.c:311: SNAKE_iterate(&snake, ARROW_UP);
   0DC9 90s00r10           2720 	mov	dptr,#_SNAKE_iterate_PARM_2
   0DCC 74 01              2721 	mov	a,#0x01
   0DCE F0                 2722 	movx	@dptr,a
   0DCF 90s00r65           2723 	mov	dptr,#_bddSnakeHitsItsTail_snake_1_1
   0DD2 75 F0 00           2724 	mov	b,#0x00
   0DD5 12s04r69           2725 	lcall	_SNAKE_iterate
   0DD8 90s00r6A           2726 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DDB E0                 2727 	movx	a,@dptr
   0DDC 14                 2728 	dec	a
                    0DDD   2729 	C$snake.c$310$2$5 ==.
                           2730 ;	../snake.c:310: for (n = 0; n < 2; n++) {
   0DDD 90s00r6A           2731 	mov	dptr,#_bddSnakeHitsItsTail_n_1_1
   0DE0 F0                 2732 	movx	@dptr,a
   0DE1 FA                 2733 	mov	r2,a
   0DE2 70 E5              2734 	jnz	00112$
                    0DE4   2735 	C$snake.c$314$1$1 ==.
                           2736 ;	../snake.c:314: return BDD_assert(c, "SNT");
   0DE4 90s00r00           2737 	mov	dptr,#_BDD_assert_PARM_2
   0DE7 74r93              2738 	mov	a,#__str_32
   0DE9 F0                 2739 	movx	@dptr,a
   0DEA A3                 2740 	inc	dptr
   0DEB 74s00              2741 	mov	a,#(__str_32 >> 8)
   0DED F0                 2742 	movx	@dptr,a
   0DEE A3                 2743 	inc	dptr
   0DEF 74 80              2744 	mov	a,#0x80
   0DF1 F0                 2745 	movx	@dptr,a
   0DF2 90s00r2E           2746 	mov	dptr,#_bddSnakeHitsItsTail_c_1_1
   0DF5 75 F0 00           2747 	mov	b,#0x00
                    0DF8   2748 	C$snake.c$315$1$1 ==.
                    0DF8   2749 	XG$bddSnakeHitsItsTail$0$0 ==.
   0DF8 02s00r00           2750 	ljmp	_BDD_assert
                           2751 ;------------------------------------------------------------
                           2752 ;Allocation info for local variables in function 'bddSnakeHitsThisObstacle'
                           2753 ;------------------------------------------------------------
                           2754 ;testId                    Allocated with name '_bddSnakeHitsThisObstacle_PARM_2'
                           2755 ;obstacle                  Allocated with name '_bddSnakeHitsThisObstacle_obstacle_1_1'
                           2756 ;c                         Allocated with name '_bddSnakeHitsThisObstacle_c_1_1'
                           2757 ;snake                     Allocated with name '_bddSnakeHitsThisObstacle_snake_1_1'
                           2758 ;n                         Allocated with name '_bddSnakeHitsThisObstacle_n_1_1'
                           2759 ;------------------------------------------------------------
                    0DFB   2760 	G$bddSnakeHitsThisObstacle$0$0 ==.
                    0DFB   2761 	C$snake.c$318$1$1 ==.
                           2762 ;	../snake.c:318: int bddSnakeHitsThisObstacle(char obstacle, char *testId) {
                           2763 ;	-----------------------------------------
                           2764 ;	 function bddSnakeHitsThisObstacle
                           2765 ;	-----------------------------------------
   0DFB                    2766 _bddSnakeHitsThisObstacle:
   0DFB E5 82              2767 	mov	a,dpl
   0DFD 90s00r6E           2768 	mov	dptr,#_bddSnakeHitsThisObstacle_obstacle_1_1
   0E00 F0                 2769 	movx	@dptr,a
                    0E01   2770 	C$snake.c$319$1$1 ==.
                           2771 ;	../snake.c:319: BddExpectedContent c = {
   0E01 90s00r6F           2772 	mov	dptr,#_bddSnakeHitsThisObstacle_c_1_1
   0E04 74 20              2773 	mov	a,#0x20
   0E06 F0                 2774 	movx	@dptr,a
   0E07 90s00r70           2775 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0001)
   0E0A 74 20              2776 	mov	a,#0x20
   0E0C F0                 2777 	movx	@dptr,a
   0E0D 90s00r71           2778 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0002)
   0E10 74 31              2779 	mov	a,#0x31
   0E12 F0                 2780 	movx	@dptr,a
   0E13 90s00r72           2781 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0003)
   0E16 74 31              2782 	mov	a,#0x31
   0E18 F0                 2783 	movx	@dptr,a
   0E19 90s00r73           2784 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0004)
   0E1C 74 31              2785 	mov	a,#0x31
   0E1E F0                 2786 	movx	@dptr,a
   0E1F 90s00r74           2787 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0005)
   0E22 74 34              2788 	mov	a,#0x34
   0E24 F0                 2789 	movx	@dptr,a
   0E25 90s00r75           2790 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0006)
   0E28 74 2E              2791 	mov	a,#0x2E
   0E2A F0                 2792 	movx	@dptr,a
   0E2B 90s00r76           2793 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0007)
   0E2E 74 2E              2794 	mov	a,#0x2E
   0E30 F0                 2795 	movx	@dptr,a
   0E31 90s00r77           2796 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0008)
   0E34 74 2E              2797 	mov	a,#0x2E
   0E36 F0                 2798 	movx	@dptr,a
   0E37 90s00r78           2799 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0009)
   0E3A 74 2E              2800 	mov	a,#0x2E
   0E3C F0                 2801 	movx	@dptr,a
   0E3D 90s00r79           2802 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000a)
   0E40 E4                 2803 	clr	a
   0E41 F0                 2804 	movx	@dptr,a
   0E42 90s00r7A           2805 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000b)
   0E45 74 2E              2806 	mov	a,#0x2E
   0E47 F0                 2807 	movx	@dptr,a
   0E48 90s00r7B           2808 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000c)
   0E4B 74 2E              2809 	mov	a,#0x2E
   0E4D F0                 2810 	movx	@dptr,a
   0E4E 90s00r7C           2811 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000d)
   0E51 74 2E              2812 	mov	a,#0x2E
   0E53 F0                 2813 	movx	@dptr,a
   0E54 90s00r7D           2814 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000e)
   0E57 74 2E              2815 	mov	a,#0x2E
   0E59 F0                 2816 	movx	@dptr,a
   0E5A 90s00r7E           2817 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x000f)
   0E5D 74 2E              2818 	mov	a,#0x2E
   0E5F F0                 2819 	movx	@dptr,a
   0E60 90s00r7F           2820 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0010)
   0E63 74 2E              2821 	mov	a,#0x2E
   0E65 F0                 2822 	movx	@dptr,a
   0E66 90s00r80           2823 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0011)
   0E69 74 2E              2824 	mov	a,#0x2E
   0E6B F0                 2825 	movx	@dptr,a
   0E6C 90s00r81           2826 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0012)
   0E6F 74 2E              2827 	mov	a,#0x2E
   0E71 F0                 2828 	movx	@dptr,a
   0E72 90s00r82           2829 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0013)
   0E75 74 2E              2830 	mov	a,#0x2E
   0E77 F0                 2831 	movx	@dptr,a
   0E78 90s00r83           2832 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0014)
   0E7B 74 2E              2833 	mov	a,#0x2E
   0E7D F0                 2834 	movx	@dptr,a
   0E7E 90s00r84           2835 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0015)
   0E81 E4                 2836 	clr	a
   0E82 F0                 2837 	movx	@dptr,a
   0E83 90s00r85           2838 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0016)
   0E86 74 2E              2839 	mov	a,#0x2E
   0E88 F0                 2840 	movx	@dptr,a
   0E89 90s00r86           2841 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0017)
   0E8C 74 2E              2842 	mov	a,#0x2E
   0E8E F0                 2843 	movx	@dptr,a
   0E8F 90s00r87           2844 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0018)
   0E92 74 2E              2845 	mov	a,#0x2E
   0E94 F0                 2846 	movx	@dptr,a
   0E95 90s00r88           2847 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0019)
   0E98 74 2E              2848 	mov	a,#0x2E
   0E9A F0                 2849 	movx	@dptr,a
   0E9B 90s00r89           2850 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001a)
   0E9E 74 2E              2851 	mov	a,#0x2E
   0EA0 F0                 2852 	movx	@dptr,a
   0EA1 90s00r8A           2853 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001b)
   0EA4 74 2E              2854 	mov	a,#0x2E
   0EA6 F0                 2855 	movx	@dptr,a
   0EA7 90s00r8B           2856 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001c)
   0EAA 74 2E              2857 	mov	a,#0x2E
   0EAC F0                 2858 	movx	@dptr,a
   0EAD 90s00r8C           2859 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001d)
   0EB0 74 2E              2860 	mov	a,#0x2E
   0EB2 F0                 2861 	movx	@dptr,a
   0EB3 90s00r8D           2862 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001e)
   0EB6 74 2E              2863 	mov	a,#0x2E
   0EB8 F0                 2864 	movx	@dptr,a
   0EB9 90s00r8E           2865 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x001f)
   0EBC 74 2E              2866 	mov	a,#0x2E
   0EBE F0                 2867 	movx	@dptr,a
   0EBF 90s00r8F           2868 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0020)
   0EC2 E4                 2869 	clr	a
   0EC3 F0                 2870 	movx	@dptr,a
   0EC4 90s00r90           2871 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0021)
   0EC7 74 2E              2872 	mov	a,#0x2E
   0EC9 F0                 2873 	movx	@dptr,a
   0ECA 90s00r91           2874 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0022)
   0ECD 74 2E              2875 	mov	a,#0x2E
   0ECF F0                 2876 	movx	@dptr,a
   0ED0 90s00r92           2877 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0023)
   0ED3 74 2E              2878 	mov	a,#0x2E
   0ED5 F0                 2879 	movx	@dptr,a
   0ED6 90s00r93           2880 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0024)
   0ED9 74 2E              2881 	mov	a,#0x2E
   0EDB F0                 2882 	movx	@dptr,a
   0EDC 90s00r94           2883 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0025)
   0EDF 74 2E              2884 	mov	a,#0x2E
   0EE1 F0                 2885 	movx	@dptr,a
   0EE2 90s00r95           2886 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0026)
   0EE5 74 2E              2887 	mov	a,#0x2E
   0EE7 F0                 2888 	movx	@dptr,a
   0EE8 90s00r96           2889 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0027)
   0EEB 74 2E              2890 	mov	a,#0x2E
   0EED F0                 2891 	movx	@dptr,a
   0EEE 90s00r97           2892 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0028)
   0EF1 74 2E              2893 	mov	a,#0x2E
   0EF3 F0                 2894 	movx	@dptr,a
   0EF4 90s00r98           2895 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0029)
   0EF7 74 2E              2896 	mov	a,#0x2E
   0EF9 F0                 2897 	movx	@dptr,a
   0EFA 90s00r99           2898 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002a)
   0EFD 74 2E              2899 	mov	a,#0x2E
   0EFF F0                 2900 	movx	@dptr,a
   0F00 90s00r9A           2901 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002b)
   0F03 E4                 2902 	clr	a
   0F04 F0                 2903 	movx	@dptr,a
   0F05 90s00r9B           2904 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002c)
   0F08 74 2E              2905 	mov	a,#0x2E
   0F0A F0                 2906 	movx	@dptr,a
   0F0B 90s00r9C           2907 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002d)
   0F0E 74 2E              2908 	mov	a,#0x2E
   0F10 F0                 2909 	movx	@dptr,a
   0F11 90s00r9D           2910 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002e)
   0F14 74 2E              2911 	mov	a,#0x2E
   0F16 F0                 2912 	movx	@dptr,a
   0F17 90s00r9E           2913 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x002f)
   0F1A 74 2E              2914 	mov	a,#0x2E
   0F1C F0                 2915 	movx	@dptr,a
   0F1D 90s00r9F           2916 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0030)
   0F20 74 2E              2917 	mov	a,#0x2E
   0F22 F0                 2918 	movx	@dptr,a
   0F23 90s00rA0           2919 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0031)
   0F26 74 2E              2920 	mov	a,#0x2E
   0F28 F0                 2921 	movx	@dptr,a
   0F29 90s00rA1           2922 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0032)
   0F2C 74 2E              2923 	mov	a,#0x2E
   0F2E F0                 2924 	movx	@dptr,a
   0F2F 90s00rA2           2925 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0033)
   0F32 74 2E              2926 	mov	a,#0x2E
   0F34 F0                 2927 	movx	@dptr,a
   0F35 90s00rA3           2928 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0034)
   0F38 74 2E              2929 	mov	a,#0x2E
   0F3A F0                 2930 	movx	@dptr,a
   0F3B 90s00rA4           2931 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0035)
   0F3E 74 2E              2932 	mov	a,#0x2E
   0F40 F0                 2933 	movx	@dptr,a
   0F41 90s00rA5           2934 	mov	dptr,#(_bddSnakeHitsThisObstacle_c_1_1 + 0x0036)
   0F44 E4                 2935 	clr	a
   0F45 F0                 2936 	movx	@dptr,a
                    0F46   2937 	C$snake.c$326$1$1 ==.
                           2938 ;	../snake.c:326: Snake snake = {MOVES_RIGHT, {BDD_SCREEN_X, BDD_SCREEN_Y}, ALIVE, 3};
   0F46 90s00rA6           2939 	mov	dptr,#_bddSnakeHitsThisObstacle_snake_1_1
   0F49 74 03              2940 	mov	a,#0x03
   0F4B F0                 2941 	movx	@dptr,a
   0F4C 90s00rA7           2942 	mov	dptr,#(_bddSnakeHitsThisObstacle_snake_1_1 + 0x0001)
   0F4F 74 13              2943 	mov	a,#0x13
   0F51 F0                 2944 	movx	@dptr,a
   0F52 90s00rA8           2945 	mov	dptr,#(_bddSnakeHitsThisObstacle_snake_1_1 + 0x0002)
   0F55 74 0A              2946 	mov	a,#0x0A
   0F57 F0                 2947 	movx	@dptr,a
   0F58 90s00rA9           2948 	mov	dptr,#(_bddSnakeHitsThisObstacle_snake_1_1 + 0x0003)
   0F5B E4                 2949 	clr	a
   0F5C F0                 2950 	movx	@dptr,a
   0F5D 90s00rAA           2951 	mov	dptr,#(_bddSnakeHitsThisObstacle_snake_1_1 + 0x0004)
   0F60 74 03              2952 	mov	a,#0x03
   0F62 F0                 2953 	movx	@dptr,a
                    0F63   2954 	C$snake.c$329$1$1 ==.
                           2955 ;	../snake.c:329: BUFFER_clear();
   0F63 12s00r00           2956 	lcall	_BUFFER_clear
                    0F66   2957 	C$snake.c$330$1$1 ==.
                           2958 ;	../snake.c:330: BDD_clear();
   0F66 12s00r00           2959 	lcall	_BDD_clear
                    0F69   2960 	C$snake.c$331$1$1 ==.
                           2961 ;	../snake.c:331: T6963C_writeAt(BDD_SCREEN_X + 5, BDD_SCREEN_Y, obstacle);
   0F69 90s00r6E           2962 	mov	dptr,#_bddSnakeHitsThisObstacle_obstacle_1_1
   0F6C E0                 2963 	movx	a,@dptr
   0F6D FA                 2964 	mov	r2,a
   0F6E 90s00r00           2965 	mov	dptr,#_T6963C_writeAt_PARM_2
   0F71 74 0A              2966 	mov	a,#0x0A
   0F73 F0                 2967 	movx	@dptr,a
   0F74 90s00r00           2968 	mov	dptr,#_T6963C_writeAt_PARM_3
   0F77 EA                 2969 	mov	a,r2
   0F78 F0                 2970 	movx	@dptr,a
   0F79 75 82 18           2971 	mov	dpl,#0x18
   0F7C 12s00r00           2972 	lcall	_T6963C_writeAt
                    0F7F   2973 	C$snake.c$333$1$1 ==.
                           2974 ;	../snake.c:333: for (n = 0; n < 5; n++) {
   0F7F 90s00rAB           2975 	mov	dptr,#_bddSnakeHitsThisObstacle_n_1_1
   0F82 74 05              2976 	mov	a,#0x05
   0F84 F0                 2977 	movx	@dptr,a
   0F85                    2978 00103$:
                    0F85   2979 	C$snake.c$334$2$2 ==.
                           2980 ;	../snake.c:334: SNAKE_iterate(&snake, ARROW_NEUTRAL);
   0F85 90s00r10           2981 	mov	dptr,#_SNAKE_iterate_PARM_2
   0F88 E4                 2982 	clr	a
   0F89 F0                 2983 	movx	@dptr,a
   0F8A 90s00rA6           2984 	mov	dptr,#_bddSnakeHitsThisObstacle_snake_1_1
   0F8D 75 F0 00           2985 	mov	b,#0x00
   0F90 12s04r69           2986 	lcall	_SNAKE_iterate
   0F93 90s00rAB           2987 	mov	dptr,#_bddSnakeHitsThisObstacle_n_1_1
   0F96 E0                 2988 	movx	a,@dptr
   0F97 14                 2989 	dec	a
                    0F98   2990 	C$snake.c$333$2$2 ==.
                           2991 ;	../snake.c:333: for (n = 0; n < 5; n++) {
   0F98 90s00rAB           2992 	mov	dptr,#_bddSnakeHitsThisObstacle_n_1_1
   0F9B F0                 2993 	movx	@dptr,a
   0F9C FA                 2994 	mov	r2,a
   0F9D 70 E6              2995 	jnz	00103$
                    0F9F   2996 	C$snake.c$337$1$1 ==.
                           2997 ;	../snake.c:337: return BDD_assert(c, testId);
   0F9F 90s00r6B           2998 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   0FA2 E0                 2999 	movx	a,@dptr
   0FA3 FA                 3000 	mov	r2,a
   0FA4 A3                 3001 	inc	dptr
   0FA5 E0                 3002 	movx	a,@dptr
   0FA6 FB                 3003 	mov	r3,a
   0FA7 A3                 3004 	inc	dptr
   0FA8 E0                 3005 	movx	a,@dptr
   0FA9 FC                 3006 	mov	r4,a
   0FAA 90s00r00           3007 	mov	dptr,#_BDD_assert_PARM_2
   0FAD EA                 3008 	mov	a,r2
   0FAE F0                 3009 	movx	@dptr,a
   0FAF A3                 3010 	inc	dptr
   0FB0 EB                 3011 	mov	a,r3
   0FB1 F0                 3012 	movx	@dptr,a
   0FB2 A3                 3013 	inc	dptr
   0FB3 EC                 3014 	mov	a,r4
   0FB4 F0                 3015 	movx	@dptr,a
   0FB5 90s00r6F           3016 	mov	dptr,#_bddSnakeHitsThisObstacle_c_1_1
   0FB8 75 F0 00           3017 	mov	b,#0x00
                    0FBB   3018 	C$snake.c$338$1$1 ==.
                    0FBB   3019 	XG$bddSnakeHitsThisObstacle$0$0 ==.
   0FBB 02s00r00           3020 	ljmp	_BDD_assert
                           3021 ;------------------------------------------------------------
                           3022 ;Allocation info for local variables in function 'bddSnakeHitsAnObstacle'
                           3023 ;------------------------------------------------------------
                           3024 ;testsInError              Allocated with name '_bddSnakeHitsAnObstacle_testsInError_1_1'
                           3025 ;------------------------------------------------------------
                    0FBE   3026 	G$bddSnakeHitsAnObstacle$0$0 ==.
                    0FBE   3027 	C$snake.c$340$1$1 ==.
                           3028 ;	../snake.c:340: int bddSnakeHitsAnObstacle() {
                           3029 ;	-----------------------------------------
                           3030 ;	 function bddSnakeHitsAnObstacle
                           3031 ;	-----------------------------------------
   0FBE                    3032 _bddSnakeHitsAnObstacle:
                    0FBE   3033 	C$snake.c$343$1$1 ==.
                           3034 ;	../snake.c:343: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_A, "SNO-A");
   0FBE 90s00r6B           3035 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   0FC1 74r97              3036 	mov	a,#__str_35
   0FC3 F0                 3037 	movx	@dptr,a
   0FC4 A3                 3038 	inc	dptr
   0FC5 74s00              3039 	mov	a,#(__str_35 >> 8)
   0FC7 F0                 3040 	movx	@dptr,a
   0FC8 A3                 3041 	inc	dptr
   0FC9 74 80              3042 	mov	a,#0x80
   0FCB F0                 3043 	movx	@dptr,a
   0FCC 75 82 21           3044 	mov	dpl,#0x21
   0FCF 12s0DrFB           3045 	lcall	_bddSnakeHitsThisObstacle
   0FD2 AA 82              3046 	mov	r2,dpl
   0FD4 AB 83              3047 	mov	r3,dph
                    0FD6   3048 	C$snake.c$344$1$1 ==.
                           3049 ;	../snake.c:344: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_B, "SNO-B");
   0FD6 90s00r6B           3050 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   0FD9 74r9D              3051 	mov	a,#__str_36
   0FDB F0                 3052 	movx	@dptr,a
   0FDC A3                 3053 	inc	dptr
   0FDD 74s00              3054 	mov	a,#(__str_36 >> 8)
   0FDF F0                 3055 	movx	@dptr,a
   0FE0 A3                 3056 	inc	dptr
   0FE1 74 80              3057 	mov	a,#0x80
   0FE3 F0                 3058 	movx	@dptr,a
   0FE4 75 82 22           3059 	mov	dpl,#0x22
   0FE7 C0 02              3060 	push	ar2
   0FE9 C0 03              3061 	push	ar3
   0FEB 12s0DrFB           3062 	lcall	_bddSnakeHitsThisObstacle
   0FEE AC 82              3063 	mov	r4,dpl
   0FF0 AD 83              3064 	mov	r5,dph
   0FF2 D0 03              3065 	pop	ar3
   0FF4 D0 02              3066 	pop	ar2
   0FF6 EC                 3067 	mov	a,r4
   0FF7 2A                 3068 	add	a,r2
   0FF8 FA                 3069 	mov	r2,a
   0FF9 ED                 3070 	mov	a,r5
   0FFA 3B                 3071 	addc	a,r3
   0FFB FB                 3072 	mov	r3,a
                    0FFC   3073 	C$snake.c$345$1$1 ==.
                           3074 ;	../snake.c:345: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_C, "SNO-C");
   0FFC 90s00r6B           3075 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   0FFF 74rA3              3076 	mov	a,#__str_37
   1001 F0                 3077 	movx	@dptr,a
   1002 A3                 3078 	inc	dptr
   1003 74s00              3079 	mov	a,#(__str_37 >> 8)
   1005 F0                 3080 	movx	@dptr,a
   1006 A3                 3081 	inc	dptr
   1007 74 80              3082 	mov	a,#0x80
   1009 F0                 3083 	movx	@dptr,a
   100A 75 82 23           3084 	mov	dpl,#0x23
   100D C0 02              3085 	push	ar2
   100F C0 03              3086 	push	ar3
   1011 12s0DrFB           3087 	lcall	_bddSnakeHitsThisObstacle
   1014 AC 82              3088 	mov	r4,dpl
   1016 AD 83              3089 	mov	r5,dph
   1018 D0 03              3090 	pop	ar3
   101A D0 02              3091 	pop	ar2
   101C EC                 3092 	mov	a,r4
   101D 2A                 3093 	add	a,r2
   101E FA                 3094 	mov	r2,a
   101F ED                 3095 	mov	a,r5
   1020 3B                 3096 	addc	a,r3
   1021 FB                 3097 	mov	r3,a
                    1022   3098 	C$snake.c$346$1$1 ==.
                           3099 ;	../snake.c:346: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_D, "SNO-D");
   1022 90s00r6B           3100 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   1025 74rA9              3101 	mov	a,#__str_38
   1027 F0                 3102 	movx	@dptr,a
   1028 A3                 3103 	inc	dptr
   1029 74s00              3104 	mov	a,#(__str_38 >> 8)
   102B F0                 3105 	movx	@dptr,a
   102C A3                 3106 	inc	dptr
   102D 74 80              3107 	mov	a,#0x80
   102F F0                 3108 	movx	@dptr,a
   1030 75 82 24           3109 	mov	dpl,#0x24
   1033 C0 02              3110 	push	ar2
   1035 C0 03              3111 	push	ar3
   1037 12s0DrFB           3112 	lcall	_bddSnakeHitsThisObstacle
   103A AC 82              3113 	mov	r4,dpl
   103C AD 83              3114 	mov	r5,dph
   103E D0 03              3115 	pop	ar3
   1040 D0 02              3116 	pop	ar2
   1042 EC                 3117 	mov	a,r4
   1043 2A                 3118 	add	a,r2
   1044 FA                 3119 	mov	r2,a
   1045 ED                 3120 	mov	a,r5
   1046 3B                 3121 	addc	a,r3
   1047 FB                 3122 	mov	r3,a
                    1048   3123 	C$snake.c$347$1$1 ==.
                           3124 ;	../snake.c:347: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_E, "SNO-E");
   1048 90s00r6B           3125 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   104B 74rAF              3126 	mov	a,#__str_39
   104D F0                 3127 	movx	@dptr,a
   104E A3                 3128 	inc	dptr
   104F 74s00              3129 	mov	a,#(__str_39 >> 8)
   1051 F0                 3130 	movx	@dptr,a
   1052 A3                 3131 	inc	dptr
   1053 74 80              3132 	mov	a,#0x80
   1055 F0                 3133 	movx	@dptr,a
   1056 75 82 25           3134 	mov	dpl,#0x25
   1059 C0 02              3135 	push	ar2
   105B C0 03              3136 	push	ar3
   105D 12s0DrFB           3137 	lcall	_bddSnakeHitsThisObstacle
   1060 AC 82              3138 	mov	r4,dpl
   1062 AD 83              3139 	mov	r5,dph
   1064 D0 03              3140 	pop	ar3
   1066 D0 02              3141 	pop	ar2
   1068 EC                 3142 	mov	a,r4
   1069 2A                 3143 	add	a,r2
   106A FA                 3144 	mov	r2,a
   106B ED                 3145 	mov	a,r5
   106C 3B                 3146 	addc	a,r3
   106D FB                 3147 	mov	r3,a
                    106E   3148 	C$snake.c$348$1$1 ==.
                           3149 ;	../snake.c:348: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_F, "SNO-F");
   106E 90s00r6B           3150 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   1071 74rB5              3151 	mov	a,#__str_40
   1073 F0                 3152 	movx	@dptr,a
   1074 A3                 3153 	inc	dptr
   1075 74s00              3154 	mov	a,#(__str_40 >> 8)
   1077 F0                 3155 	movx	@dptr,a
   1078 A3                 3156 	inc	dptr
   1079 74 80              3157 	mov	a,#0x80
   107B F0                 3158 	movx	@dptr,a
   107C 75 82 26           3159 	mov	dpl,#0x26
   107F C0 02              3160 	push	ar2
   1081 C0 03              3161 	push	ar3
   1083 12s0DrFB           3162 	lcall	_bddSnakeHitsThisObstacle
   1086 AC 82              3163 	mov	r4,dpl
   1088 AD 83              3164 	mov	r5,dph
   108A D0 03              3165 	pop	ar3
   108C D0 02              3166 	pop	ar2
   108E EC                 3167 	mov	a,r4
   108F 2A                 3168 	add	a,r2
   1090 FA                 3169 	mov	r2,a
   1091 ED                 3170 	mov	a,r5
   1092 3B                 3171 	addc	a,r3
   1093 FB                 3172 	mov	r3,a
                    1094   3173 	C$snake.c$349$1$1 ==.
                           3174 ;	../snake.c:349: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_G, "SNO-G");
   1094 90s00r6B           3175 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   1097 74rBB              3176 	mov	a,#__str_41
   1099 F0                 3177 	movx	@dptr,a
   109A A3                 3178 	inc	dptr
   109B 74s00              3179 	mov	a,#(__str_41 >> 8)
   109D F0                 3180 	movx	@dptr,a
   109E A3                 3181 	inc	dptr
   109F 74 80              3182 	mov	a,#0x80
   10A1 F0                 3183 	movx	@dptr,a
   10A2 75 82 27           3184 	mov	dpl,#0x27
   10A5 C0 02              3185 	push	ar2
   10A7 C0 03              3186 	push	ar3
   10A9 12s0DrFB           3187 	lcall	_bddSnakeHitsThisObstacle
   10AC AC 82              3188 	mov	r4,dpl
   10AE AD 83              3189 	mov	r5,dph
   10B0 D0 03              3190 	pop	ar3
   10B2 D0 02              3191 	pop	ar2
   10B4 EC                 3192 	mov	a,r4
   10B5 2A                 3193 	add	a,r2
   10B6 FA                 3194 	mov	r2,a
   10B7 ED                 3195 	mov	a,r5
   10B8 3B                 3196 	addc	a,r3
   10B9 FB                 3197 	mov	r3,a
                    10BA   3198 	C$snake.c$350$1$1 ==.
                           3199 ;	../snake.c:350: testsInError += bddSnakeHitsThisObstacle(OBSTACLE_H, "SNO-H");
   10BA 90s00r6B           3200 	mov	dptr,#_bddSnakeHitsThisObstacle_PARM_2
   10BD 74rC1              3201 	mov	a,#__str_42
   10BF F0                 3202 	movx	@dptr,a
   10C0 A3                 3203 	inc	dptr
   10C1 74s00              3204 	mov	a,#(__str_42 >> 8)
   10C3 F0                 3205 	movx	@dptr,a
   10C4 A3                 3206 	inc	dptr
   10C5 74 80              3207 	mov	a,#0x80
   10C7 F0                 3208 	movx	@dptr,a
   10C8 75 82 28           3209 	mov	dpl,#0x28
   10CB C0 02              3210 	push	ar2
   10CD C0 03              3211 	push	ar3
   10CF 12s0DrFB           3212 	lcall	_bddSnakeHitsThisObstacle
   10D2 AC 82              3213 	mov	r4,dpl
   10D4 AD 83              3214 	mov	r5,dph
   10D6 D0 03              3215 	pop	ar3
   10D8 D0 02              3216 	pop	ar2
   10DA EC                 3217 	mov	a,r4
   10DB 2A                 3218 	add	a,r2
   10DC FA                 3219 	mov	r2,a
   10DD ED                 3220 	mov	a,r5
   10DE 3B                 3221 	addc	a,r3
                    10DF   3222 	C$snake.c$352$1$1 ==.
                           3223 ;	../snake.c:352: return testsInError;
                    10DF   3224 	C$snake.c$353$1$1 ==.
                    10DF   3225 	XG$bddSnakeHitsAnObstacle$0$0 ==.
   10DF 8A 82              3226 	mov	dpl,r2
   10E1 F5 83              3227 	mov	dph,a
   10E3 22                 3228 	ret
                           3229 ;------------------------------------------------------------
                           3230 ;Allocation info for local variables in function 'bddSnakeMovesTurnsAndCatchesAFruit'
                           3231 ;------------------------------------------------------------
                           3232 ;c                         Allocated with name '_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1'
                           3233 ;snake                     Allocated with name '_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1'
                           3234 ;n                         Allocated with name '_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1'
                           3235 ;------------------------------------------------------------
                    10E4   3236 	G$bddSnakeMovesTurnsAndCatchesAFruit$0$0 ==.
                    10E4   3237 	C$snake.c$355$1$1 ==.
                           3238 ;	../snake.c:355: int bddSnakeMovesTurnsAndCatchesAFruit() {
                           3239 ;	-----------------------------------------
                           3240 ;	 function bddSnakeMovesTurnsAndCatchesAFruit
                           3241 ;	-----------------------------------------
   10E4                    3242 _bddSnakeMovesTurnsAndCatchesAFruit:
                    10E4   3243 	C$snake.c$356$1$1 ==.
                           3244 ;	../snake.c:356: BddExpectedContent c = {
   10E4 90s00rAC           3245 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1
   10E7 74 20              3246 	mov	a,#0x20
   10E9 F0                 3247 	movx	@dptr,a
   10EA 90s00rAD           3248 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0001)
   10ED 74 20              3249 	mov	a,#0x20
   10EF F0                 3250 	movx	@dptr,a
   10F0 90s00rAE           3251 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0002)
   10F3 74 20              3252 	mov	a,#0x20
   10F5 F0                 3253 	movx	@dptr,a
   10F6 90s00rAF           3254 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0003)
   10F9 74 20              3255 	mov	a,#0x20
   10FB F0                 3256 	movx	@dptr,a
   10FC 90s00rB0           3257 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0004)
   10FF 74 20              3258 	mov	a,#0x20
   1101 F0                 3259 	movx	@dptr,a
   1102 90s00rB1           3260 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0005)
   1105 74 20              3261 	mov	a,#0x20
   1107 F0                 3262 	movx	@dptr,a
   1108 90s00rB2           3263 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0006)
   110B 74 31              3264 	mov	a,#0x31
   110D F0                 3265 	movx	@dptr,a
   110E 90s00rB3           3266 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0007)
   1111 74 2E              3267 	mov	a,#0x2E
   1113 F0                 3268 	movx	@dptr,a
   1114 90s00rB4           3269 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0008)
   1117 74 2E              3270 	mov	a,#0x2E
   1119 F0                 3271 	movx	@dptr,a
   111A 90s00rB5           3272 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0009)
   111D 74 2E              3273 	mov	a,#0x2E
   111F F0                 3274 	movx	@dptr,a
   1120 90s00rB6           3275 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000a)
   1123 E4                 3276 	clr	a
   1124 F0                 3277 	movx	@dptr,a
   1125 90s00rB7           3278 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000b)
   1128 74 2E              3279 	mov	a,#0x2E
   112A F0                 3280 	movx	@dptr,a
   112B 90s00rB8           3281 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000c)
   112E 74 2E              3282 	mov	a,#0x2E
   1130 F0                 3283 	movx	@dptr,a
   1131 90s00rB9           3284 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000d)
   1134 74 2E              3285 	mov	a,#0x2E
   1136 F0                 3286 	movx	@dptr,a
   1137 90s00rBA           3287 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000e)
   113A 74 2E              3288 	mov	a,#0x2E
   113C F0                 3289 	movx	@dptr,a
   113D 90s00rBB           3290 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x000f)
   1140 74 2E              3291 	mov	a,#0x2E
   1142 F0                 3292 	movx	@dptr,a
   1143 90s00rBC           3293 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0010)
   1146 74 2E              3294 	mov	a,#0x2E
   1148 F0                 3295 	movx	@dptr,a
   1149 90s00rBD           3296 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0011)
   114C 74 32              3297 	mov	a,#0x32
   114E F0                 3298 	movx	@dptr,a
   114F 90s00rBE           3299 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0012)
   1152 74 2E              3300 	mov	a,#0x2E
   1154 F0                 3301 	movx	@dptr,a
   1155 90s00rBF           3302 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0013)
   1158 74 2E              3303 	mov	a,#0x2E
   115A F0                 3304 	movx	@dptr,a
   115B 90s00rC0           3305 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0014)
   115E 74 2E              3306 	mov	a,#0x2E
   1160 F0                 3307 	movx	@dptr,a
   1161 90s00rC1           3308 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0015)
   1164 E4                 3309 	clr	a
   1165 F0                 3310 	movx	@dptr,a
   1166 90s00rC2           3311 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0016)
   1169 74 2E              3312 	mov	a,#0x2E
   116B F0                 3313 	movx	@dptr,a
   116C 90s00rC3           3314 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0017)
   116F 74 2E              3315 	mov	a,#0x2E
   1171 F0                 3316 	movx	@dptr,a
   1172 90s00rC4           3317 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0018)
   1175 74 2E              3318 	mov	a,#0x2E
   1177 F0                 3319 	movx	@dptr,a
   1178 90s00rC5           3320 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0019)
   117B 74 2E              3321 	mov	a,#0x2E
   117D F0                 3322 	movx	@dptr,a
   117E 90s00rC6           3323 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001a)
   1181 74 2E              3324 	mov	a,#0x2E
   1183 F0                 3325 	movx	@dptr,a
   1184 90s00rC7           3326 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001b)
   1187 74 2E              3327 	mov	a,#0x2E
   1189 F0                 3328 	movx	@dptr,a
   118A 90s00rC8           3329 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001c)
   118D 74 31              3330 	mov	a,#0x31
   118F F0                 3331 	movx	@dptr,a
   1190 90s00rC9           3332 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001d)
   1193 74 2E              3333 	mov	a,#0x2E
   1195 F0                 3334 	movx	@dptr,a
   1196 90s00rCA           3335 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001e)
   1199 74 2E              3336 	mov	a,#0x2E
   119B F0                 3337 	movx	@dptr,a
   119C 90s00rCB           3338 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x001f)
   119F 74 2E              3339 	mov	a,#0x2E
   11A1 F0                 3340 	movx	@dptr,a
   11A2 90s00rCC           3341 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0020)
   11A5 E4                 3342 	clr	a
   11A6 F0                 3343 	movx	@dptr,a
   11A7 90s00rCD           3344 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0021)
   11AA 74 2E              3345 	mov	a,#0x2E
   11AC F0                 3346 	movx	@dptr,a
   11AD 90s00rCE           3347 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0022)
   11B0 74 2E              3348 	mov	a,#0x2E
   11B2 F0                 3349 	movx	@dptr,a
   11B3 90s00rCF           3350 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0023)
   11B6 74 2E              3351 	mov	a,#0x2E
   11B8 F0                 3352 	movx	@dptr,a
   11B9 90s00rD0           3353 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0024)
   11BC 74 33              3354 	mov	a,#0x33
   11BE F0                 3355 	movx	@dptr,a
   11BF 90s00rD1           3356 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0025)
   11C2 74 31              3357 	mov	a,#0x31
   11C4 F0                 3358 	movx	@dptr,a
   11C5 90s00rD2           3359 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0026)
   11C8 74 31              3360 	mov	a,#0x31
   11CA F0                 3361 	movx	@dptr,a
   11CB 90s00rD3           3362 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0027)
   11CE 74 31              3363 	mov	a,#0x31
   11D0 F0                 3364 	movx	@dptr,a
   11D1 90s00rD4           3365 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0028)
   11D4 74 2E              3366 	mov	a,#0x2E
   11D6 F0                 3367 	movx	@dptr,a
   11D7 90s00rD5           3368 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0029)
   11DA 74 2E              3369 	mov	a,#0x2E
   11DC F0                 3370 	movx	@dptr,a
   11DD 90s00rD6           3371 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002a)
   11E0 74 2E              3372 	mov	a,#0x2E
   11E2 F0                 3373 	movx	@dptr,a
   11E3 90s00rD7           3374 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002b)
   11E6 E4                 3375 	clr	a
   11E7 F0                 3376 	movx	@dptr,a
   11E8 90s00rD8           3377 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002c)
   11EB 74 2E              3378 	mov	a,#0x2E
   11ED F0                 3379 	movx	@dptr,a
   11EE 90s00rD9           3380 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002d)
   11F1 74 2E              3381 	mov	a,#0x2E
   11F3 F0                 3382 	movx	@dptr,a
   11F4 90s00rDA           3383 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002e)
   11F7 74 2E              3384 	mov	a,#0x2E
   11F9 F0                 3385 	movx	@dptr,a
   11FA 90s00rDB           3386 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x002f)
   11FD 74 2E              3387 	mov	a,#0x2E
   11FF F0                 3388 	movx	@dptr,a
   1200 90s00rDC           3389 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0030)
   1203 74 2E              3390 	mov	a,#0x2E
   1205 F0                 3391 	movx	@dptr,a
   1206 90s00rDD           3392 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0031)
   1209 74 2E              3393 	mov	a,#0x2E
   120B F0                 3394 	movx	@dptr,a
   120C 90s00rDE           3395 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0032)
   120F 74 2E              3396 	mov	a,#0x2E
   1211 F0                 3397 	movx	@dptr,a
   1212 90s00rDF           3398 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0033)
   1215 74 2E              3399 	mov	a,#0x2E
   1217 F0                 3400 	movx	@dptr,a
   1218 90s00rE0           3401 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0034)
   121B 74 2E              3402 	mov	a,#0x2E
   121D F0                 3403 	movx	@dptr,a
   121E 90s00rE1           3404 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0035)
   1221 74 2E              3405 	mov	a,#0x2E
   1223 F0                 3406 	movx	@dptr,a
   1224 90s00rE2           3407 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1 + 0x0036)
   1227 E4                 3408 	clr	a
   1228 F0                 3409 	movx	@dptr,a
                    1229   3410 	C$snake.c$363$1$1 ==.
                           3411 ;	../snake.c:363: Snake snake = {MOVES_RIGHT, {BDD_SCREEN_X, BDD_SCREEN_Y}, ALIVE, 3};
   1229 90s00rE3           3412 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1
   122C 74 03              3413 	mov	a,#0x03
   122E F0                 3414 	movx	@dptr,a
   122F 90s00rE4           3415 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1 + 0x0001)
   1232 74 13              3416 	mov	a,#0x13
   1234 F0                 3417 	movx	@dptr,a
   1235 90s00rE5           3418 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1 + 0x0002)
   1238 74 0A              3419 	mov	a,#0x0A
   123A F0                 3420 	movx	@dptr,a
   123B 90s00rE6           3421 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1 + 0x0003)
   123E E4                 3422 	clr	a
   123F F0                 3423 	movx	@dptr,a
   1240 90s00rE7           3424 	mov	dptr,#(_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1 + 0x0004)
   1243 74 03              3425 	mov	a,#0x03
   1245 F0                 3426 	movx	@dptr,a
                    1246   3427 	C$snake.c$366$1$1 ==.
                           3428 ;	../snake.c:366: BUFFER_clear();
   1246 12s00r00           3429 	lcall	_BUFFER_clear
                    1249   3430 	C$snake.c$367$1$1 ==.
                           3431 ;	../snake.c:367: BDD_clear();
   1249 12s00r00           3432 	lcall	_BDD_clear
                    124C   3433 	C$snake.c$368$1$1 ==.
                           3434 ;	../snake.c:368: T6963C_writeAt(BDD_SCREEN_X + 6, BDD_SCREEN_Y + 1, FRUIT);
   124C 90s00r00           3435 	mov	dptr,#_T6963C_writeAt_PARM_2
   124F 74 0B              3436 	mov	a,#0x0B
   1251 F0                 3437 	movx	@dptr,a
   1252 90s00r00           3438 	mov	dptr,#_T6963C_writeAt_PARM_3
   1255 74 15              3439 	mov	a,#0x15
   1257 F0                 3440 	movx	@dptr,a
   1258 75 82 19           3441 	mov	dpl,#0x19
   125B 12s00r00           3442 	lcall	_T6963C_writeAt
                    125E   3443 	C$snake.c$370$1$1 ==.
                           3444 ;	../snake.c:370: for (n = 0; n < 6; n++) {
   125E 90s00rE8           3445 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   1261 74 06              3446 	mov	a,#0x06
   1263 F0                 3447 	movx	@dptr,a
   1264                    3448 00103$:
                    1264   3449 	C$snake.c$371$2$2 ==.
                           3450 ;	../snake.c:371: SNAKE_iterate(&snake, ARROW_NEUTRAL);
   1264 90s00r10           3451 	mov	dptr,#_SNAKE_iterate_PARM_2
   1267 E4                 3452 	clr	a
   1268 F0                 3453 	movx	@dptr,a
   1269 90s00rE3           3454 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1
   126C 75 F0 00           3455 	mov	b,#0x00
   126F 12s04r69           3456 	lcall	_SNAKE_iterate
   1272 90s00rE8           3457 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   1275 E0                 3458 	movx	a,@dptr
   1276 14                 3459 	dec	a
                    1277   3460 	C$snake.c$370$2$2 ==.
                           3461 ;	../snake.c:370: for (n = 0; n < 6; n++) {
   1277 90s00rE8           3462 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   127A F0                 3463 	movx	@dptr,a
   127B FA                 3464 	mov	r2,a
   127C 70 E6              3465 	jnz	00103$
                    127E   3466 	C$snake.c$373$2$2 ==.
                           3467 ;	../snake.c:373: for (n = 0; n < 3; n++) {
   127E 90s00rE8           3468 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   1281 74 03              3469 	mov	a,#0x03
   1283 F0                 3470 	movx	@dptr,a
   1284                    3471 00106$:
                    1284   3472 	C$snake.c$374$2$3 ==.
                           3473 ;	../snake.c:374: SNAKE_iterate(&snake, ARROW_DOWN);
   1284 90s00r10           3474 	mov	dptr,#_SNAKE_iterate_PARM_2
   1287 74 02              3475 	mov	a,#0x02
   1289 F0                 3476 	movx	@dptr,a
   128A 90s00rE3           3477 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1
   128D 75 F0 00           3478 	mov	b,#0x00
   1290 12s04r69           3479 	lcall	_SNAKE_iterate
   1293 90s00rE8           3480 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   1296 E0                 3481 	movx	a,@dptr
   1297 14                 3482 	dec	a
                    1298   3483 	C$snake.c$373$2$3 ==.
                           3484 ;	../snake.c:373: for (n = 0; n < 3; n++) {
   1298 90s00rE8           3485 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   129B F0                 3486 	movx	@dptr,a
   129C FA                 3487 	mov	r2,a
   129D 70 E5              3488 	jnz	00106$
                    129F   3489 	C$snake.c$376$2$3 ==.
                           3490 ;	../snake.c:376: for (n = 0; n < 3; n++) {
   129F 90s00rE8           3491 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   12A2 74 03              3492 	mov	a,#0x03
   12A4 F0                 3493 	movx	@dptr,a
   12A5                    3494 00109$:
                    12A5   3495 	C$snake.c$377$2$4 ==.
                           3496 ;	../snake.c:377: SNAKE_iterate(&snake, ARROW_LEFT);
   12A5 90s00r10           3497 	mov	dptr,#_SNAKE_iterate_PARM_2
   12A8 74 03              3498 	mov	a,#0x03
   12AA F0                 3499 	movx	@dptr,a
   12AB 90s00rE3           3500 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_snake_1_1
   12AE 75 F0 00           3501 	mov	b,#0x00
   12B1 12s04r69           3502 	lcall	_SNAKE_iterate
   12B4 90s00rE8           3503 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   12B7 E0                 3504 	movx	a,@dptr
   12B8 14                 3505 	dec	a
                    12B9   3506 	C$snake.c$376$2$4 ==.
                           3507 ;	../snake.c:376: for (n = 0; n < 3; n++) {
   12B9 90s00rE8           3508 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_n_1_1
   12BC F0                 3509 	movx	@dptr,a
   12BD FA                 3510 	mov	r2,a
   12BE 70 E5              3511 	jnz	00109$
                    12C0   3512 	C$snake.c$380$1$1 ==.
                           3513 ;	../snake.c:380: return BDD_assert(c, "SNTF");
   12C0 90s00r00           3514 	mov	dptr,#_BDD_assert_PARM_2
   12C3 74rC7              3515 	mov	a,#__str_48
   12C5 F0                 3516 	movx	@dptr,a
   12C6 A3                 3517 	inc	dptr
   12C7 74s00              3518 	mov	a,#(__str_48 >> 8)
   12C9 F0                 3519 	movx	@dptr,a
   12CA A3                 3520 	inc	dptr
   12CB 74 80              3521 	mov	a,#0x80
   12CD F0                 3522 	movx	@dptr,a
   12CE 90s00rAC           3523 	mov	dptr,#_bddSnakeMovesTurnsAndCatchesAFruit_c_1_1
   12D1 75 F0 00           3524 	mov	b,#0x00
                    12D4   3525 	C$snake.c$381$1$1 ==.
                    12D4   3526 	XG$bddSnakeMovesTurnsAndCatchesAFruit$0$0 ==.
   12D4 02s00r00           3527 	ljmp	_BDD_assert
                           3528 ;------------------------------------------------------------
                           3529 ;Allocation info for local variables in function 'bddSnakeGrows'
                           3530 ;------------------------------------------------------------
                           3531 ;c                         Allocated with name '_bddSnakeGrows_c_1_1'
                           3532 ;snake                     Allocated with name '_bddSnakeGrows_snake_1_1'
                           3533 ;n                         Allocated with name '_bddSnakeGrows_n_1_1'
                           3534 ;------------------------------------------------------------
                    12D7   3535 	G$bddSnakeGrows$0$0 ==.
                    12D7   3536 	C$snake.c$383$1$1 ==.
                           3537 ;	../snake.c:383: int bddSnakeGrows() {
                           3538 ;	-----------------------------------------
                           3539 ;	 function bddSnakeGrows
                           3540 ;	-----------------------------------------
   12D7                    3541 _bddSnakeGrows:
                    12D7   3542 	C$snake.c$384$1$1 ==.
                           3543 ;	../snake.c:384: BddExpectedContent c = {
   12D7 90s00rE9           3544 	mov	dptr,#_bddSnakeGrows_c_1_1
   12DA 74 20              3545 	mov	a,#0x20
   12DC F0                 3546 	movx	@dptr,a
   12DD 90s00rEA           3547 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0001)
   12E0 74 20              3548 	mov	a,#0x20
   12E2 F0                 3549 	movx	@dptr,a
   12E3 90s00rEB           3550 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0002)
   12E6 74 20              3551 	mov	a,#0x20
   12E8 F0                 3552 	movx	@dptr,a
   12E9 90s00rEC           3553 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0003)
   12EC 74 20              3554 	mov	a,#0x20
   12EE F0                 3555 	movx	@dptr,a
   12EF 90s00rED           3556 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0004)
   12F2 74 31              3557 	mov	a,#0x31
   12F4 F0                 3558 	movx	@dptr,a
   12F5 90s00rEE           3559 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0005)
   12F8 74 31              3560 	mov	a,#0x31
   12FA F0                 3561 	movx	@dptr,a
   12FB 90s00rEF           3562 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0006)
   12FE 74 31              3563 	mov	a,#0x31
   1300 F0                 3564 	movx	@dptr,a
   1301 90s00rF0           3565 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0007)
   1304 74 33              3566 	mov	a,#0x33
   1306 F0                 3567 	movx	@dptr,a
   1307 90s00rF1           3568 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0008)
   130A 74 2E              3569 	mov	a,#0x2E
   130C F0                 3570 	movx	@dptr,a
   130D 90s00rF2           3571 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0009)
   1310 74 2E              3572 	mov	a,#0x2E
   1312 F0                 3573 	movx	@dptr,a
   1313 90s00rF3           3574 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000a)
   1316 E4                 3575 	clr	a
   1317 F0                 3576 	movx	@dptr,a
   1318 90s00rF4           3577 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000b)
   131B 74 2E              3578 	mov	a,#0x2E
   131D F0                 3579 	movx	@dptr,a
   131E 90s00rF5           3580 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000c)
   1321 74 2E              3581 	mov	a,#0x2E
   1323 F0                 3582 	movx	@dptr,a
   1324 90s00rF6           3583 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000d)
   1327 74 2E              3584 	mov	a,#0x2E
   1329 F0                 3585 	movx	@dptr,a
   132A 90s00rF7           3586 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000e)
   132D 74 2E              3587 	mov	a,#0x2E
   132F F0                 3588 	movx	@dptr,a
   1330 90s00rF8           3589 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x000f)
   1333 74 2E              3590 	mov	a,#0x2E
   1335 F0                 3591 	movx	@dptr,a
   1336 90s00rF9           3592 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0010)
   1339 74 2E              3593 	mov	a,#0x2E
   133B F0                 3594 	movx	@dptr,a
   133C 90s00rFA           3595 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0011)
   133F 74 2E              3596 	mov	a,#0x2E
   1341 F0                 3597 	movx	@dptr,a
   1342 90s00rFB           3598 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0012)
   1345 74 2E              3599 	mov	a,#0x2E
   1347 F0                 3600 	movx	@dptr,a
   1348 90s00rFC           3601 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0013)
   134B 74 2E              3602 	mov	a,#0x2E
   134D F0                 3603 	movx	@dptr,a
   134E 90s00rFD           3604 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0014)
   1351 74 2E              3605 	mov	a,#0x2E
   1353 F0                 3606 	movx	@dptr,a
   1354 90s00rFE           3607 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0015)
   1357 E4                 3608 	clr	a
   1358 F0                 3609 	movx	@dptr,a
   1359 90s00rFF           3610 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0016)
   135C 74 2E              3611 	mov	a,#0x2E
   135E F0                 3612 	movx	@dptr,a
   135F 90s01r00           3613 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0017)
   1362 74 2E              3614 	mov	a,#0x2E
   1364 F0                 3615 	movx	@dptr,a
   1365 90s01r01           3616 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0018)
   1368 74 2E              3617 	mov	a,#0x2E
   136A F0                 3618 	movx	@dptr,a
   136B 90s01r02           3619 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0019)
   136E 74 2E              3620 	mov	a,#0x2E
   1370 F0                 3621 	movx	@dptr,a
   1371 90s01r03           3622 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001a)
   1374 74 2E              3623 	mov	a,#0x2E
   1376 F0                 3624 	movx	@dptr,a
   1377 90s01r04           3625 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001b)
   137A 74 2E              3626 	mov	a,#0x2E
   137C F0                 3627 	movx	@dptr,a
   137D 90s01r05           3628 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001c)
   1380 74 2E              3629 	mov	a,#0x2E
   1382 F0                 3630 	movx	@dptr,a
   1383 90s01r06           3631 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001d)
   1386 74 2E              3632 	mov	a,#0x2E
   1388 F0                 3633 	movx	@dptr,a
   1389 90s01r07           3634 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001e)
   138C 74 2E              3635 	mov	a,#0x2E
   138E F0                 3636 	movx	@dptr,a
   138F 90s01r08           3637 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x001f)
   1392 74 2E              3638 	mov	a,#0x2E
   1394 F0                 3639 	movx	@dptr,a
   1395 90s01r09           3640 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0020)
   1398 E4                 3641 	clr	a
   1399 F0                 3642 	movx	@dptr,a
   139A 90s01r0A           3643 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0021)
   139D 74 2E              3644 	mov	a,#0x2E
   139F F0                 3645 	movx	@dptr,a
   13A0 90s01r0B           3646 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0022)
   13A3 74 2E              3647 	mov	a,#0x2E
   13A5 F0                 3648 	movx	@dptr,a
   13A6 90s01r0C           3649 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0023)
   13A9 74 2E              3650 	mov	a,#0x2E
   13AB F0                 3651 	movx	@dptr,a
   13AC 90s01r0D           3652 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0024)
   13AF 74 2E              3653 	mov	a,#0x2E
   13B1 F0                 3654 	movx	@dptr,a
   13B2 90s01r0E           3655 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0025)
   13B5 74 2E              3656 	mov	a,#0x2E
   13B7 F0                 3657 	movx	@dptr,a
   13B8 90s01r0F           3658 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0026)
   13BB 74 2E              3659 	mov	a,#0x2E
   13BD F0                 3660 	movx	@dptr,a
   13BE 90s01r10           3661 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0027)
   13C1 74 2E              3662 	mov	a,#0x2E
   13C3 F0                 3663 	movx	@dptr,a
   13C4 90s01r11           3664 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0028)
   13C7 74 2E              3665 	mov	a,#0x2E
   13C9 F0                 3666 	movx	@dptr,a
   13CA 90s01r12           3667 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0029)
   13CD 74 2E              3668 	mov	a,#0x2E
   13CF F0                 3669 	movx	@dptr,a
   13D0 90s01r13           3670 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002a)
   13D3 74 2E              3671 	mov	a,#0x2E
   13D5 F0                 3672 	movx	@dptr,a
   13D6 90s01r14           3673 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002b)
   13D9 E4                 3674 	clr	a
   13DA F0                 3675 	movx	@dptr,a
   13DB 90s01r15           3676 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002c)
   13DE 74 2E              3677 	mov	a,#0x2E
   13E0 F0                 3678 	movx	@dptr,a
   13E1 90s01r16           3679 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002d)
   13E4 74 2E              3680 	mov	a,#0x2E
   13E6 F0                 3681 	movx	@dptr,a
   13E7 90s01r17           3682 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002e)
   13EA 74 2E              3683 	mov	a,#0x2E
   13EC F0                 3684 	movx	@dptr,a
   13ED 90s01r18           3685 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x002f)
   13F0 74 2E              3686 	mov	a,#0x2E
   13F2 F0                 3687 	movx	@dptr,a
   13F3 90s01r19           3688 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0030)
   13F6 74 2E              3689 	mov	a,#0x2E
   13F8 F0                 3690 	movx	@dptr,a
   13F9 90s01r1A           3691 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0031)
   13FC 74 2E              3692 	mov	a,#0x2E
   13FE F0                 3693 	movx	@dptr,a
   13FF 90s01r1B           3694 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0032)
   1402 74 2E              3695 	mov	a,#0x2E
   1404 F0                 3696 	movx	@dptr,a
   1405 90s01r1C           3697 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0033)
   1408 74 2E              3698 	mov	a,#0x2E
   140A F0                 3699 	movx	@dptr,a
   140B 90s01r1D           3700 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0034)
   140E 74 2E              3701 	mov	a,#0x2E
   1410 F0                 3702 	movx	@dptr,a
   1411 90s01r1E           3703 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0035)
   1414 74 2E              3704 	mov	a,#0x2E
   1416 F0                 3705 	movx	@dptr,a
   1417 90s01r1F           3706 	mov	dptr,#(_bddSnakeGrows_c_1_1 + 0x0036)
   141A E4                 3707 	clr	a
   141B F0                 3708 	movx	@dptr,a
                    141C   3709 	C$snake.c$391$1$1 ==.
                           3710 ;	../snake.c:391: Snake snake = {MOVES_RIGHT, {BDD_SCREEN_X, BDD_SCREEN_Y}, ALIVE, 3};
   141C 90s01r20           3711 	mov	dptr,#_bddSnakeGrows_snake_1_1
   141F 74 03              3712 	mov	a,#0x03
   1421 F0                 3713 	movx	@dptr,a
   1422 90s01r21           3714 	mov	dptr,#(_bddSnakeGrows_snake_1_1 + 0x0001)
   1425 74 13              3715 	mov	a,#0x13
   1427 F0                 3716 	movx	@dptr,a
   1428 90s01r22           3717 	mov	dptr,#(_bddSnakeGrows_snake_1_1 + 0x0002)
   142B 74 0A              3718 	mov	a,#0x0A
   142D F0                 3719 	movx	@dptr,a
   142E 90s01r23           3720 	mov	dptr,#(_bddSnakeGrows_snake_1_1 + 0x0003)
   1431 E4                 3721 	clr	a
   1432 F0                 3722 	movx	@dptr,a
   1433 90s01r24           3723 	mov	dptr,#(_bddSnakeGrows_snake_1_1 + 0x0004)
   1436 74 03              3724 	mov	a,#0x03
   1438 F0                 3725 	movx	@dptr,a
                    1439   3726 	C$snake.c$394$1$1 ==.
                           3727 ;	../snake.c:394: BUFFER_clear();
   1439 12s00r00           3728 	lcall	_BUFFER_clear
                    143C   3729 	C$snake.c$395$1$1 ==.
                           3730 ;	../snake.c:395: BDD_clear();
   143C 12s00r00           3731 	lcall	_BDD_clear
                    143F   3732 	C$snake.c$396$1$1 ==.
                           3733 ;	../snake.c:396: for (n=0; n<7; n++) {
   143F 90s01r25           3734 	mov	dptr,#_bddSnakeGrows_n_1_1
   1442 74 07              3735 	mov	a,#0x07
   1444 F0                 3736 	movx	@dptr,a
   1445                    3737 00103$:
                    1445   3738 	C$snake.c$397$2$2 ==.
                           3739 ;	../snake.c:397: SNAKE_iterate(&snake, ARROW_NEUTRAL);
   1445 90s00r10           3740 	mov	dptr,#_SNAKE_iterate_PARM_2
   1448 E4                 3741 	clr	a
   1449 F0                 3742 	movx	@dptr,a
   144A 90s01r20           3743 	mov	dptr,#_bddSnakeGrows_snake_1_1
   144D 75 F0 00           3744 	mov	b,#0x00
   1450 12s04r69           3745 	lcall	_SNAKE_iterate
   1453 90s01r25           3746 	mov	dptr,#_bddSnakeGrows_n_1_1
   1456 E0                 3747 	movx	a,@dptr
   1457 14                 3748 	dec	a
                    1458   3749 	C$snake.c$396$2$2 ==.
                           3750 ;	../snake.c:396: for (n=0; n<7; n++) {
   1458 90s01r25           3751 	mov	dptr,#_bddSnakeGrows_n_1_1
   145B F0                 3752 	movx	@dptr,a
   145C FA                 3753 	mov	r2,a
   145D 70 E6              3754 	jnz	00103$
                    145F   3755 	C$snake.c$400$1$1 ==.
                           3756 ;	../snake.c:400: return BDD_assert(c, "SNG");
   145F 90s00r00           3757 	mov	dptr,#_BDD_assert_PARM_2
   1462 74rCC              3758 	mov	a,#__str_51
   1464 F0                 3759 	movx	@dptr,a
   1465 A3                 3760 	inc	dptr
   1466 74s00              3761 	mov	a,#(__str_51 >> 8)
   1468 F0                 3762 	movx	@dptr,a
   1469 A3                 3763 	inc	dptr
   146A 74 80              3764 	mov	a,#0x80
   146C F0                 3765 	movx	@dptr,a
   146D 90s00rE9           3766 	mov	dptr,#_bddSnakeGrows_c_1_1
   1470 75 F0 00           3767 	mov	b,#0x00
                    1473   3768 	C$snake.c$401$1$1 ==.
                    1473   3769 	XG$bddSnakeGrows$0$0 ==.
   1473 02s00r00           3770 	ljmp	_BDD_assert
                           3771 ;------------------------------------------------------------
                           3772 ;Allocation info for local variables in function 'testSnake'
                           3773 ;------------------------------------------------------------
                           3774 ;testsInError              Allocated with name '_testSnake_testsInError_1_1'
                           3775 ;------------------------------------------------------------
                    1476   3776 	G$testSnake$0$0 ==.
                    1476   3777 	C$snake.c$408$1$1 ==.
                           3778 ;	../snake.c:408: int testSnake() {
                           3779 ;	-----------------------------------------
                           3780 ;	 function testSnake
                           3781 ;	-----------------------------------------
   1476                    3782 _testSnake:
                    1476   3783 	C$snake.c$412$1$1 ==.
                           3784 ;	../snake.c:412: testsInError += testSnakeTurns();
   1476 12s05r70           3785 	lcall	_testSnakeTurns
   1479 AA 82              3786 	mov	r2,dpl
   147B AB 83              3787 	mov	r3,dph
                    147D   3788 	C$snake.c$413$1$1 ==.
                           3789 ;	../snake.c:413: testsInError += testSnakeMoves();
   147D C0 02              3790 	push	ar2
   147F C0 03              3791 	push	ar3
   1481 12s09r6B           3792 	lcall	_testSnakeMoves
   1484 AC 82              3793 	mov	r4,dpl
   1486 AD 83              3794 	mov	r5,dph
   1488 D0 03              3795 	pop	ar3
   148A D0 02              3796 	pop	ar2
   148C EC                 3797 	mov	a,r4
   148D 2A                 3798 	add	a,r2
   148E FA                 3799 	mov	r2,a
   148F ED                 3800 	mov	a,r5
   1490 3B                 3801 	addc	a,r3
   1491 FB                 3802 	mov	r3,a
                    1492   3803 	C$snake.c$415$1$1 ==.
                           3804 ;	../snake.c:415: testsInError += testSnakeEatsAFruit();
   1492 C0 02              3805 	push	ar2
   1494 C0 03              3806 	push	ar3
   1496 12s08r82           3807 	lcall	_testSnakeEatsAFruit
   1499 AC 82              3808 	mov	r4,dpl
   149B AD 83              3809 	mov	r5,dph
   149D D0 03              3810 	pop	ar3
   149F D0 02              3811 	pop	ar2
   14A1 EC                 3812 	mov	a,r4
   14A2 2A                 3813 	add	a,r2
   14A3 FA                 3814 	mov	r2,a
   14A4 ED                 3815 	mov	a,r5
   14A5 3B                 3816 	addc	a,r3
   14A6 FB                 3817 	mov	r3,a
                    14A7   3818 	C$snake.c$418$1$1 ==.
                           3819 ;	../snake.c:418: testsInError += bddSnakeGrows();
   14A7 C0 02              3820 	push	ar2
   14A9 C0 03              3821 	push	ar3
   14AB 12s12rD7           3822 	lcall	_bddSnakeGrows
   14AE AC 82              3823 	mov	r4,dpl
   14B0 AD 83              3824 	mov	r5,dph
   14B2 D0 03              3825 	pop	ar3
   14B4 D0 02              3826 	pop	ar2
   14B6 EC                 3827 	mov	a,r4
   14B7 2A                 3828 	add	a,r2
   14B8 FA                 3829 	mov	r2,a
   14B9 ED                 3830 	mov	a,r5
   14BA 3B                 3831 	addc	a,r3
   14BB FB                 3832 	mov	r3,a
                    14BC   3833 	C$snake.c$419$1$1 ==.
                           3834 ;	../snake.c:419: testsInError += bddSnakeMovesTurnsAndCatchesAFruit();
   14BC C0 02              3835 	push	ar2
   14BE C0 03              3836 	push	ar3
   14C0 12s10rE4           3837 	lcall	_bddSnakeMovesTurnsAndCatchesAFruit
   14C3 AC 82              3838 	mov	r4,dpl
   14C5 AD 83              3839 	mov	r5,dph
   14C7 D0 03              3840 	pop	ar3
   14C9 D0 02              3841 	pop	ar2
   14CB EC                 3842 	mov	a,r4
   14CC 2A                 3843 	add	a,r2
   14CD FA                 3844 	mov	r2,a
   14CE ED                 3845 	mov	a,r5
   14CF 3B                 3846 	addc	a,r3
   14D0 FB                 3847 	mov	r3,a
                    14D1   3848 	C$snake.c$420$1$1 ==.
                           3849 ;	../snake.c:420: testsInError += bddSnakeHitsAnObstacle();
   14D1 C0 02              3850 	push	ar2
   14D3 C0 03              3851 	push	ar3
   14D5 12s0FrBE           3852 	lcall	_bddSnakeHitsAnObstacle
   14D8 AC 82              3853 	mov	r4,dpl
   14DA AD 83              3854 	mov	r5,dph
   14DC D0 03              3855 	pop	ar3
   14DE D0 02              3856 	pop	ar2
   14E0 EC                 3857 	mov	a,r4
   14E1 2A                 3858 	add	a,r2
   14E2 FA                 3859 	mov	r2,a
   14E3 ED                 3860 	mov	a,r5
   14E4 3B                 3861 	addc	a,r3
   14E5 FB                 3862 	mov	r3,a
                    14E6   3863 	C$snake.c$421$1$1 ==.
                           3864 ;	../snake.c:421: testsInError += bddSnakeHitsItsTail();
   14E6 C0 02              3865 	push	ar2
   14E8 C0 03              3866 	push	ar3
   14EA 12s0BrF9           3867 	lcall	_bddSnakeHitsItsTail
   14ED AC 82              3868 	mov	r4,dpl
   14EF AD 83              3869 	mov	r5,dph
   14F1 D0 03              3870 	pop	ar3
   14F3 D0 02              3871 	pop	ar2
   14F5 EC                 3872 	mov	a,r4
   14F6 2A                 3873 	add	a,r2
   14F7 FA                 3874 	mov	r2,a
   14F8 ED                 3875 	mov	a,r5
   14F9 3B                 3876 	addc	a,r3
                    14FA   3877 	C$snake.c$424$1$1 ==.
                           3878 ;	../snake.c:424: return testsInError;
                    14FA   3879 	C$snake.c$425$1$1 ==.
                    14FA   3880 	XG$testSnake$0$0 ==.
   14FA 8A 82              3881 	mov	dpl,r2
   14FC F5 83              3882 	mov	dph,a
   14FE 22                 3883 	ret
                           3884 	.area CSEG    (CODE)
                           3885 	.area CONST   (CODE)
                    0000   3886 Fsnake$_str_0$0$0 == .
   0000                    3887 __str_0:
   0000 53 54 30 31        3888 	.ascii "ST01"
   0004 00                 3889 	.db 0x00
                    0005   3890 Fsnake$_str_1$0$0 == .
   0005                    3891 __str_1:
   0005 53 54 30 32        3892 	.ascii "ST02"
   0009 00                 3893 	.db 0x00
                    000A   3894 Fsnake$_str_2$0$0 == .
   000A                    3895 __str_2:
   000A 53 54 30 33        3896 	.ascii "ST03"
   000E 00                 3897 	.db 0x00
                    000F   3898 Fsnake$_str_3$0$0 == .
   000F                    3899 __str_3:
   000F 53 54 30 34        3900 	.ascii "ST04"
   0013 00                 3901 	.db 0x00
                    0014   3902 Fsnake$_str_4$0$0 == .
   0014                    3903 __str_4:
   0014 53 54 31 31        3904 	.ascii "ST11"
   0018 00                 3905 	.db 0x00
                    0019   3906 Fsnake$_str_5$0$0 == .
   0019                    3907 __str_5:
   0019 53 54 31 32        3908 	.ascii "ST12"
   001D 00                 3909 	.db 0x00
                    001E   3910 Fsnake$_str_6$0$0 == .
   001E                    3911 __str_6:
   001E 53 54 31 33        3912 	.ascii "ST13"
   0022 00                 3913 	.db 0x00
                    0023   3914 Fsnake$_str_7$0$0 == .
   0023                    3915 __str_7:
   0023 53 54 31 34        3916 	.ascii "ST14"
   0027 00                 3917 	.db 0x00
                    0028   3918 Fsnake$_str_8$0$0 == .
   0028                    3919 __str_8:
   0028 53 54 32 31        3920 	.ascii "ST21"
   002C 00                 3921 	.db 0x00
                    002D   3922 Fsnake$_str_9$0$0 == .
   002D                    3923 __str_9:
   002D 53 54 32 32        3924 	.ascii "ST22"
   0031 00                 3925 	.db 0x00
                    0032   3926 Fsnake$_str_10$0$0 == .
   0032                    3927 __str_10:
   0032 53 54 32 33        3928 	.ascii "ST23"
   0036 00                 3929 	.db 0x00
                    0037   3930 Fsnake$_str_11$0$0 == .
   0037                    3931 __str_11:
   0037 53 54 32 34        3932 	.ascii "ST24"
   003B 00                 3933 	.db 0x00
                    003C   3934 Fsnake$_str_12$0$0 == .
   003C                    3935 __str_12:
   003C 53 54 33 31        3936 	.ascii "ST31"
   0040 00                 3937 	.db 0x00
                    0041   3938 Fsnake$_str_13$0$0 == .
   0041                    3939 __str_13:
   0041 53 54 33 32        3940 	.ascii "ST32"
   0045 00                 3941 	.db 0x00
                    0046   3942 Fsnake$_str_14$0$0 == .
   0046                    3943 __str_14:
   0046 53 54 33 33        3944 	.ascii "ST33"
   004A 00                 3945 	.db 0x00
                    004B   3946 Fsnake$_str_15$0$0 == .
   004B                    3947 __str_15:
   004B 53 54 33 34        3948 	.ascii "ST34"
   004F 00                 3949 	.db 0x00
                    0050   3950 Fsnake$_str_16$0$0 == .
   0050                    3951 __str_16:
   0050 53 46 30 30 31     3952 	.ascii "SF001"
   0055 00                 3953 	.db 0x00
                    0056   3954 Fsnake$_str_17$0$0 == .
   0056                    3955 __str_17:
   0056 53 46 30 30 32     3956 	.ascii "SF002"
   005B 00                 3957 	.db 0x00
                    005C   3958 Fsnake$_str_18$0$0 == .
   005C                    3959 __str_18:
   005C 53 46 30 30 33     3960 	.ascii "SF003"
   0061 00                 3961 	.db 0x00
                    0062   3962 Fsnake$_str_19$0$0 == .
   0062                    3963 __str_19:
   0062 53 4D 30 30 31     3964 	.ascii "SM001"
   0067 00                 3965 	.db 0x00
                    0068   3966 Fsnake$_str_20$0$0 == .
   0068                    3967 __str_20:
   0068 53 4D 30 30 32     3968 	.ascii "SM002"
   006D 00                 3969 	.db 0x00
                    006E   3970 Fsnake$_str_21$0$0 == .
   006E                    3971 __str_21:
   006E 53 4D 30 30 33     3972 	.ascii "SM003"
   0073 00                 3973 	.db 0x00
                    0074   3974 Fsnake$_str_22$0$0 == .
   0074                    3975 __str_22:
   0074 53 4D 30 30 34     3976 	.ascii "SM004"
   0079 00                 3977 	.db 0x00
                    007A   3978 Fsnake$_str_23$0$0 == .
   007A                    3979 __str_23:
   007A 53 4F 30 31        3980 	.ascii "SO01"
   007E 00                 3981 	.db 0x00
                    007F   3982 Fsnake$_str_24$0$0 == .
   007F                    3983 __str_24:
   007F 53 4F 30 32        3984 	.ascii "SO02"
   0083 00                 3985 	.db 0x00
                    0084   3986 Fsnake$_str_25$0$0 == .
   0084                    3987 __str_25:
   0084 53 4F 30 33        3988 	.ascii "SO03"
   0088 00                 3989 	.db 0x00
                    0089   3990 Fsnake$_str_26$0$0 == .
   0089                    3991 __str_26:
   0089 53 4F 30 34        3992 	.ascii "SO04"
   008D 00                 3993 	.db 0x00
                    008E   3994 Fsnake$_str_27$0$0 == .
   008E                    3995 __str_27:
   008E 53 4F 30 35        3996 	.ascii "SO05"
   0092 00                 3997 	.db 0x00
                    0093   3998 Fsnake$_str_32$0$0 == .
   0093                    3999 __str_32:
   0093 53 4E 54           4000 	.ascii "SNT"
   0096 00                 4001 	.db 0x00
                    0097   4002 Fsnake$_str_35$0$0 == .
   0097                    4003 __str_35:
   0097 53 4E 4F 2D 41     4004 	.ascii "SNO-A"
   009C 00                 4005 	.db 0x00
                    009D   4006 Fsnake$_str_36$0$0 == .
   009D                    4007 __str_36:
   009D 53 4E 4F 2D 42     4008 	.ascii "SNO-B"
   00A2 00                 4009 	.db 0x00
                    00A3   4010 Fsnake$_str_37$0$0 == .
   00A3                    4011 __str_37:
   00A3 53 4E 4F 2D 43     4012 	.ascii "SNO-C"
   00A8 00                 4013 	.db 0x00
                    00A9   4014 Fsnake$_str_38$0$0 == .
   00A9                    4015 __str_38:
   00A9 53 4E 4F 2D 44     4016 	.ascii "SNO-D"
   00AE 00                 4017 	.db 0x00
                    00AF   4018 Fsnake$_str_39$0$0 == .
   00AF                    4019 __str_39:
   00AF 53 4E 4F 2D 45     4020 	.ascii "SNO-E"
   00B4 00                 4021 	.db 0x00
                    00B5   4022 Fsnake$_str_40$0$0 == .
   00B5                    4023 __str_40:
   00B5 53 4E 4F 2D 46     4024 	.ascii "SNO-F"
   00BA 00                 4025 	.db 0x00
                    00BB   4026 Fsnake$_str_41$0$0 == .
   00BB                    4027 __str_41:
   00BB 53 4E 4F 2D 47     4028 	.ascii "SNO-G"
   00C0 00                 4029 	.db 0x00
                    00C1   4030 Fsnake$_str_42$0$0 == .
   00C1                    4031 __str_42:
   00C1 53 4E 4F 2D 48     4032 	.ascii "SNO-H"
   00C6 00                 4033 	.db 0x00
                    00C7   4034 Fsnake$_str_48$0$0 == .
   00C7                    4035 __str_48:
   00C7 53 4E 54 46        4036 	.ascii "SNTF"
   00CB 00                 4037 	.db 0x00
                    00CC   4038 Fsnake$_str_51$0$0 == .
   00CC                    4039 __str_51:
   00CC 53 4E 47           4040 	.ascii "SNG"
   00CF 00                 4041 	.db 0x00
                           4042 	.area XINIT   (CODE)
                           4043 	.area CABS    (ABS,CODE)
