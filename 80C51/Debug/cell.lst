                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.0 #6037 (Oct 31 2010) (MINGW32)
                              4 ; This file was generated Mon Jan 23 21:01:51 2017
                              5 ;--------------------------------------------------------
                              6 	.module cell
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _CELL_liveOrDie
                             13 	.globl _CELL_next_status
                             14 	.globl _CELL_switch_status
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 	.area RSEG    (ABS,DATA)
   0000                      19 	.org 0x0000
                             20 ;--------------------------------------------------------
                             21 ; special function bits
                             22 ;--------------------------------------------------------
                             23 	.area RSEG    (ABS,DATA)
   0000                      24 	.org 0x0000
                             25 ;--------------------------------------------------------
                             26 ; overlayable register banks
                             27 ;--------------------------------------------------------
                             28 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                      29 	.ds 8
                             30 ;--------------------------------------------------------
                             31 ; internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area DSEG    (DATA)
                    0000     34 LCELL_next_status$sloc0$1$0==.
   0000                      35 _CELL_next_status_sloc0_1_0:
   0000                      36 	.ds 3
                    0003     37 LCELL_next_status$sloc1$1$0==.
   0003                      38 _CELL_next_status_sloc1_1_0:
   0003                      39 	.ds 3
                    0006     40 LCELL_next_status$sloc2$1$0==.
   0006                      41 _CELL_next_status_sloc2_1_0:
   0006                      42 	.ds 3
                             43 ;--------------------------------------------------------
                             44 ; overlayable items in internal ram 
                             45 ;--------------------------------------------------------
                             46 	.area OSEG    (OVR,DATA)
                             47 ;--------------------------------------------------------
                             48 ; indirectly addressable internal ram data
                             49 ;--------------------------------------------------------
                             50 	.area ISEG    (DATA)
                             51 ;--------------------------------------------------------
                             52 ; absolute internal ram data
                             53 ;--------------------------------------------------------
                             54 	.area IABS    (ABS,DATA)
                             55 	.area IABS    (ABS,DATA)
                             56 ;--------------------------------------------------------
                             57 ; bit data
                             58 ;--------------------------------------------------------
                             59 	.area BSEG    (BIT)
                             60 ;--------------------------------------------------------
                             61 ; paged external ram data
                             62 ;--------------------------------------------------------
                             63 	.area PSEG    (PAG,XDATA)
                             64 ;--------------------------------------------------------
                             65 ; external ram data
                             66 ;--------------------------------------------------------
                             67 	.area XSEG    (XDATA)
                    0000     68 LCELL_liveOrDie$cell$1$1==.
   0000                      69 _CELL_liveOrDie_cell_1_1:
   0000                      70 	.ds 3
                    0003     71 LCELL_next_status$cell$1$1==.
   0003                      72 _CELL_next_status_cell_1_1:
   0003                      73 	.ds 3
                    0006     74 LCELL_next_status$x$1$1==.
   0006                      75 _CELL_next_status_x_1_1:
   0006                      76 	.ds 2
                    0008     77 LCELL_next_status$y$1$1==.
   0008                      78 _CELL_next_status_y_1_1:
   0008                      79 	.ds 2
                    000A     80 LCELL_next_status$nearAliveCell$1$1==.
   000A                      81 _CELL_next_status_nearAliveCell_1_1:
   000A                      82 	.ds 2
                    000C     83 LCELL_switch_status$cell$1$1==.
   000C                      84 _CELL_switch_status_cell_1_1:
   000C                      85 	.ds 3
                             86 ;--------------------------------------------------------
                             87 ; absolute external ram data
                             88 ;--------------------------------------------------------
                             89 	.area XABS    (ABS,XDATA)
                             90 ;--------------------------------------------------------
                             91 ; external initialized ram data
                             92 ;--------------------------------------------------------
                             93 	.area XISEG   (XDATA)
                             94 	.area HOME    (CODE)
                             95 	.area GSINIT0 (CODE)
                             96 	.area GSINIT1 (CODE)
                             97 	.area GSINIT2 (CODE)
                             98 	.area GSINIT3 (CODE)
                             99 	.area GSINIT4 (CODE)
                            100 	.area GSINIT5 (CODE)
                            101 	.area GSINIT  (CODE)
                            102 	.area GSFINAL (CODE)
                            103 	.area CSEG    (CODE)
                            104 ;--------------------------------------------------------
                            105 ; global & static initialisations
                            106 ;--------------------------------------------------------
                            107 	.area HOME    (CODE)
                            108 	.area GSINIT  (CODE)
                            109 	.area GSFINAL (CODE)
                            110 	.area GSINIT  (CODE)
                            111 ;--------------------------------------------------------
                            112 ; Home
                            113 ;--------------------------------------------------------
                            114 	.area HOME    (CODE)
                            115 	.area HOME    (CODE)
                            116 ;--------------------------------------------------------
                            117 ; code
                            118 ;--------------------------------------------------------
                            119 	.area CSEG    (CODE)
                            120 ;------------------------------------------------------------
                            121 ;Allocation info for local variables in function 'CELL_liveOrDie'
                            122 ;------------------------------------------------------------
                            123 ;cell                      Allocated with name '_CELL_liveOrDie_cell_1_1'
                            124 ;c                         Allocated with name '_CELL_liveOrDie_c_1_1'
                            125 ;------------------------------------------------------------
                    0000    126 	G$CELL_liveOrDie$0$0 ==.
                    0000    127 	C$cell.c$16$0$0 ==.
                            128 ;	../cell.c:16: void CELL_liveOrDie(Cell *cell) {
                            129 ;	-----------------------------------------
                            130 ;	 function CELL_liveOrDie
                            131 ;	-----------------------------------------
   0000                     132 _CELL_liveOrDie:
                    0002    133 	ar2 = 0x02
                    0003    134 	ar3 = 0x03
                    0004    135 	ar4 = 0x04
                    0005    136 	ar5 = 0x05
                    0006    137 	ar6 = 0x06
                    0007    138 	ar7 = 0x07
                    0000    139 	ar0 = 0x00
                    0001    140 	ar1 = 0x01
   0000 AA F0               141 	mov	r2,b
   0002 AB 83               142 	mov	r3,dph
   0004 E5 82               143 	mov	a,dpl
   0006 90s00r00            144 	mov	dptr,#_CELL_liveOrDie_cell_1_1
   0009 F0                  145 	movx	@dptr,a
   000A A3                  146 	inc	dptr
   000B EB                  147 	mov	a,r3
   000C F0                  148 	movx	@dptr,a
   000D A3                  149 	inc	dptr
   000E EA                  150 	mov	a,r2
   000F F0                  151 	movx	@dptr,a
                    0010    152 	C$cell.c$17$1$1 ==.
                            153 ;	../cell.c:17: unsigned char c = T6963C_readFrom(cell->position.x, cell->position.y);
   0010 90s00r00            154 	mov	dptr,#_CELL_liveOrDie_cell_1_1
   0013 E0                  155 	movx	a,@dptr
   0014 FA                  156 	mov	r2,a
   0015 A3                  157 	inc	dptr
   0016 E0                  158 	movx	a,@dptr
   0017 FB                  159 	mov	r3,a
   0018 A3                  160 	inc	dptr
   0019 E0                  161 	movx	a,@dptr
   001A FC                  162 	mov	r4,a
   001B 8A 82               163 	mov	dpl,r2
   001D 8B 83               164 	mov	dph,r3
   001F 8C F0               165 	mov	b,r4
   0021 12s00r00            166 	lcall	__gptrget
   0024 FD                  167 	mov	r5,a
   0025 0A                  168 	inc	r2
   0026 BA 00 01            169 	cjne	r2,#0x00,00103$
   0029 0B                  170 	inc	r3
   002A                     171 00103$:
   002A 8A 82               172 	mov	dpl,r2
   002C 8B 83               173 	mov	dph,r3
   002E 8C F0               174 	mov	b,r4
   0030 12s00r00            175 	lcall	__gptrget
   0033 90s00r00            176 	mov	dptr,#_T6963C_readFrom_PARM_2
   0036 F0                  177 	movx	@dptr,a
   0037 8D 82               178 	mov	dpl,r5
                    0039    179 	C$cell.c$21$1$1 ==.
                    0039    180 	XG$CELL_liveOrDie$0$0 ==.
   0039 02s00r00            181 	ljmp	_T6963C_readFrom
                            182 ;------------------------------------------------------------
                            183 ;Allocation info for local variables in function 'CELL_next_status'
                            184 ;------------------------------------------------------------
                            185 ;sloc0                     Allocated with name '_CELL_next_status_sloc0_1_0'
                            186 ;sloc1                     Allocated with name '_CELL_next_status_sloc1_1_0'
                            187 ;sloc2                     Allocated with name '_CELL_next_status_sloc2_1_0'
                            188 ;cell                      Allocated with name '_CELL_next_status_cell_1_1'
                            189 ;x                         Allocated with name '_CELL_next_status_x_1_1'
                            190 ;y                         Allocated with name '_CELL_next_status_y_1_1'
                            191 ;nearAliveCell             Allocated with name '_CELL_next_status_nearAliveCell_1_1'
                            192 ;c                         Allocated with name '_CELL_next_status_c_1_1'
                            193 ;------------------------------------------------------------
                    003C    194 	G$CELL_next_status$0$0 ==.
                    003C    195 	C$cell.c$27$1$1 ==.
                            196 ;	../cell.c:27: void CELL_next_status(Cell *cell){
                            197 ;	-----------------------------------------
                            198 ;	 function CELL_next_status
                            199 ;	-----------------------------------------
   003C                     200 _CELL_next_status:
   003C AA F0               201 	mov	r2,b
   003E AB 83               202 	mov	r3,dph
   0040 E5 82               203 	mov	a,dpl
   0042 90s00r03            204 	mov	dptr,#_CELL_next_status_cell_1_1
   0045 F0                  205 	movx	@dptr,a
   0046 A3                  206 	inc	dptr
   0047 EB                  207 	mov	a,r3
   0048 F0                  208 	movx	@dptr,a
   0049 A3                  209 	inc	dptr
   004A EA                  210 	mov	a,r2
   004B F0                  211 	movx	@dptr,a
                    004C    212 	C$cell.c$31$1$1 ==.
                            213 ;	../cell.c:31: int nearAliveCell = 0;
   004C 90s00r0A            214 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   004F E4                  215 	clr	a
   0050 F0                  216 	movx	@dptr,a
   0051 A3                  217 	inc	dptr
   0052 F0                  218 	movx	@dptr,a
                    0053    219 	C$cell.c$35$1$1 ==.
                            220 ;	../cell.c:35: for(y = -1; y < 1; y++ ){
   0053 90s00r08            221 	mov	dptr,#_CELL_next_status_y_1_1
   0056 74 FF               222 	mov	a,#0xFF
   0058 F0                  223 	movx	@dptr,a
   0059 A3                  224 	inc	dptr
   005A F0                  225 	movx	@dptr,a
   005B 90s00r03            226 	mov	dptr,#_CELL_next_status_cell_1_1
   005E E0                  227 	movx	a,@dptr
   005F F5*06               228 	mov	_CELL_next_status_sloc2_1_0,a
   0061 A3                  229 	inc	dptr
   0062 E0                  230 	movx	a,@dptr
   0063 F5*07               231 	mov	(_CELL_next_status_sloc2_1_0 + 1),a
   0065 A3                  232 	inc	dptr
   0066 E0                  233 	movx	a,@dptr
   0067 F5*08               234 	mov	(_CELL_next_status_sloc2_1_0 + 2),a
   0069 74 01               235 	mov	a,#0x01
   006B 25*06               236 	add	a,_CELL_next_status_sloc2_1_0
   006D FD                  237 	mov	r5,a
   006E E4                  238 	clr	a
   006F 35*07               239 	addc	a,(_CELL_next_status_sloc2_1_0 + 1)
   0071 FE                  240 	mov	r6,a
   0072 AF*08               241 	mov	r7,(_CELL_next_status_sloc2_1_0 + 2)
   0074 85*06*00            242 	mov	_CELL_next_status_sloc0_1_0,_CELL_next_status_sloc2_1_0
   0077 85*07*01            243 	mov	(_CELL_next_status_sloc0_1_0 + 1),(_CELL_next_status_sloc2_1_0 + 1)
   007A 85*08*02            244 	mov	(_CELL_next_status_sloc0_1_0 + 2),(_CELL_next_status_sloc2_1_0 + 2)
   007D 85*06*03            245 	mov	_CELL_next_status_sloc1_1_0,_CELL_next_status_sloc2_1_0
   0080 85*07*04            246 	mov	(_CELL_next_status_sloc1_1_0 + 1),(_CELL_next_status_sloc2_1_0 + 1)
   0083 85*08*05            247 	mov	(_CELL_next_status_sloc1_1_0 + 2),(_CELL_next_status_sloc2_1_0 + 2)
   0086                     248 00134$:
   0086 90s00r08            249 	mov	dptr,#_CELL_next_status_y_1_1
   0089 E0                  250 	movx	a,@dptr
   008A F8                  251 	mov	r0,a
   008B A3                  252 	inc	dptr
   008C E0                  253 	movx	a,@dptr
   008D F9                  254 	mov	r1,a
   008E C3                  255 	clr	c
   008F E8                  256 	mov	a,r0
   0090 94 01               257 	subb	a,#0x01
   0092 E9                  258 	mov	a,r1
   0093 64 80               259 	xrl	a,#0x80
   0095 94 80               260 	subb	a,#0x80
   0097 40 03               261 	jc	00159$
   0099 02s01rFA            262 	ljmp	00137$
   009C                     263 00159$:
                    009C    264 	C$cell.c$37$2$2 ==.
                            265 ;	../cell.c:37: if(y==0){ // DESSUS LA CELL
   009C E8                  266 	mov	a,r0
   009D 49                  267 	orl	a,r1
   009E 70 68               268 	jnz	00112$
                    00A0    269 	C$cell.c$39$3$3 ==.
                            270 ;	../cell.c:39: for(x = -1; x < 1; x++ ){
   00A0 90s00r06            271 	mov	dptr,#_CELL_next_status_x_1_1
   00A3 74 FF               272 	mov	a,#0xFF
   00A5 F0                  273 	movx	@dptr,a
   00A6 A3                  274 	inc	dptr
   00A7 F0                  275 	movx	@dptr,a
   00A8                     276 00122$:
   00A8 90s00r06            277 	mov	dptr,#_CELL_next_status_x_1_1
   00AB E0                  278 	movx	a,@dptr
   00AC FA                  279 	mov	r2,a
   00AD A3                  280 	inc	dptr
   00AE E0                  281 	movx	a,@dptr
   00AF FB                  282 	mov	r3,a
   00B0 C3                  283 	clr	c
   00B1 EA                  284 	mov	a,r2
   00B2 94 01               285 	subb	a,#0x01
   00B4 EB                  286 	mov	a,r3
   00B5 64 80               287 	xrl	a,#0x80
   00B7 94 80               288 	subb	a,#0x80
   00B9 40 03               289 	jc	00161$
   00BB 02s01rEB            290 	ljmp	00136$
   00BE                     291 00161$:
                    00BE    292 	C$cell.c$40$4$4 ==.
                            293 ;	../cell.c:40: c = T6963C_readFrom(cell->position.x, cell->position.y);
   00BE 85*06 82            294 	mov	dpl,_CELL_next_status_sloc2_1_0
   00C1 85*07 83            295 	mov	dph,(_CELL_next_status_sloc2_1_0 + 1)
   00C4 85*08 F0            296 	mov	b,(_CELL_next_status_sloc2_1_0 + 2)
   00C7 12s00r00            297 	lcall	__gptrget
   00CA FA                  298 	mov	r2,a
   00CB 8D 82               299 	mov	dpl,r5
   00CD 8E 83               300 	mov	dph,r6
   00CF 8F F0               301 	mov	b,r7
   00D1 12s00r00            302 	lcall	__gptrget
   00D4 90s00r00            303 	mov	dptr,#_T6963C_readFrom_PARM_2
   00D7 F0                  304 	movx	@dptr,a
   00D8 8A 82               305 	mov	dpl,r2
   00DA C0 05               306 	push	ar5
   00DC C0 06               307 	push	ar6
   00DE C0 07               308 	push	ar7
   00E0 12s00r00            309 	lcall	_T6963C_readFrom
   00E3 AA 82               310 	mov	r2,dpl
   00E5 D0 07               311 	pop	ar7
   00E7 D0 06               312 	pop	ar6
   00E9 D0 05               313 	pop	ar5
                    00EB    314 	C$cell.c$41$4$4 ==.
                            315 ;	../cell.c:41: if(c == COLOR_ALLIVE){
   00EB BA 21 0C            316 	cjne	r2,#0x21,00124$
                    00EE    317 	C$cell.c$42$5$5 ==.
                            318 ;	../cell.c:42: nearAliveCell++;
   00EE 90s00r0A            319 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   00F1 E0                  320 	movx	a,@dptr
   00F2 24 01               321 	add	a,#0x01
   00F4 F0                  322 	movx	@dptr,a
   00F5 A3                  323 	inc	dptr
   00F6 E0                  324 	movx	a,@dptr
   00F7 34 00               325 	addc	a,#0x00
   00F9 F0                  326 	movx	@dptr,a
   00FA                     327 00124$:
                    00FA    328 	C$cell.c$39$3$3 ==.
                            329 ;	../cell.c:39: for(x = -1; x < 1; x++ ){
   00FA 90s00r06            330 	mov	dptr,#_CELL_next_status_x_1_1
   00FD E0                  331 	movx	a,@dptr
   00FE 24 01               332 	add	a,#0x01
   0100 F0                  333 	movx	@dptr,a
   0101 A3                  334 	inc	dptr
   0102 E0                  335 	movx	a,@dptr
   0103 34 00               336 	addc	a,#0x00
   0105 F0                  337 	movx	@dptr,a
   0106 80 A0               338 	sjmp	00122$
   0108                     339 00112$:
                    0108    340 	C$cell.c$46$2$2 ==.
                            341 ;	../cell.c:46: else if(y == 1){ // COTE GAUCHE ET DROITE
   0108 B8 01 05            342 	cjne	r0,#0x01,00164$
   010B B9 00 02            343 	cjne	r1,#0x00,00164$
   010E 80 02               344 	sjmp	00165$
   0110                     345 00164$:
   0110 80 74               346 	sjmp	00109$
   0112                     347 00165$:
                    0112    348 	C$cell.c$47$3$6 ==.
                            349 ;	../cell.c:47: for(x = -1; x < 1; x++ ){
   0112 90s00r06            350 	mov	dptr,#_CELL_next_status_x_1_1
   0115 74 FF               351 	mov	a,#0xFF
   0117 F0                  352 	movx	@dptr,a
   0118 A3                  353 	inc	dptr
   0119 F0                  354 	movx	@dptr,a
   011A                     355 00126$:
   011A 90s00r06            356 	mov	dptr,#_CELL_next_status_x_1_1
   011D E0                  357 	movx	a,@dptr
   011E FA                  358 	mov	r2,a
   011F A3                  359 	inc	dptr
   0120 E0                  360 	movx	a,@dptr
   0121 FB                  361 	mov	r3,a
   0122 C3                  362 	clr	c
   0123 EA                  363 	mov	a,r2
   0124 94 01               364 	subb	a,#0x01
   0126 EB                  365 	mov	a,r3
   0127 64 80               366 	xrl	a,#0x80
   0129 94 80               367 	subb	a,#0x80
   012B 40 03               368 	jc	00166$
   012D 02s01rEB            369 	ljmp	00136$
   0130                     370 00166$:
                    0130    371 	C$cell.c$48$4$7 ==.
                            372 ;	../cell.c:48: c = T6963C_readFrom(cell->position.x, cell->position.y);
   0130 85*00 82            373 	mov	dpl,_CELL_next_status_sloc0_1_0
   0133 85*01 83            374 	mov	dph,(_CELL_next_status_sloc0_1_0 + 1)
   0136 85*02 F0            375 	mov	b,(_CELL_next_status_sloc0_1_0 + 2)
   0139 12s00r00            376 	lcall	__gptrget
   013C FC                  377 	mov	r4,a
   013D 8D 82               378 	mov	dpl,r5
   013F 8E 83               379 	mov	dph,r6
   0141 8F F0               380 	mov	b,r7
   0143 12s00r00            381 	lcall	__gptrget
   0146 90s00r00            382 	mov	dptr,#_T6963C_readFrom_PARM_2
   0149 F0                  383 	movx	@dptr,a
   014A 8C 82               384 	mov	dpl,r4
   014C C0 02               385 	push	ar2
   014E C0 03               386 	push	ar3
   0150 C0 05               387 	push	ar5
   0152 C0 06               388 	push	ar6
   0154 C0 07               389 	push	ar7
   0156 12s00r00            390 	lcall	_T6963C_readFrom
   0159 AC 82               391 	mov	r4,dpl
   015B D0 07               392 	pop	ar7
   015D D0 06               393 	pop	ar6
   015F D0 05               394 	pop	ar5
   0161 D0 03               395 	pop	ar3
   0163 D0 02               396 	pop	ar2
                    0165    397 	C$cell.c$49$4$7 ==.
                            398 ;	../cell.c:49: if(c == COLOR_ALLIVE && x != 0){
   0165 BC 21 10            399 	cjne	r4,#0x21,00128$
   0168 EA                  400 	mov	a,r2
   0169 4B                  401 	orl	a,r3
   016A 60 0C               402 	jz	00128$
                    016C    403 	C$cell.c$50$5$8 ==.
                            404 ;	../cell.c:50: nearAliveCell++;
   016C 90s00r0A            405 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   016F E0                  406 	movx	a,@dptr
   0170 24 01               407 	add	a,#0x01
   0172 F0                  408 	movx	@dptr,a
   0173 A3                  409 	inc	dptr
   0174 E0                  410 	movx	a,@dptr
   0175 34 00               411 	addc	a,#0x00
   0177 F0                  412 	movx	@dptr,a
   0178                     413 00128$:
                    0178    414 	C$cell.c$47$3$6 ==.
                            415 ;	../cell.c:47: for(x = -1; x < 1; x++ ){
   0178 90s00r06            416 	mov	dptr,#_CELL_next_status_x_1_1
   017B E0                  417 	movx	a,@dptr
   017C 24 01               418 	add	a,#0x01
   017E F0                  419 	movx	@dptr,a
   017F A3                  420 	inc	dptr
   0180 E0                  421 	movx	a,@dptr
   0181 34 00               422 	addc	a,#0x00
   0183 F0                  423 	movx	@dptr,a
   0184 80 94               424 	sjmp	00126$
   0186                     425 00109$:
                    0186    426 	C$cell.c$55$3$9 ==.
                            427 ;	../cell.c:55: for(x = -1; x < 1; x++ ){
   0186 90s00r06            428 	mov	dptr,#_CELL_next_status_x_1_1
   0189 74 FF               429 	mov	a,#0xFF
   018B F0                  430 	movx	@dptr,a
   018C A3                  431 	inc	dptr
   018D F0                  432 	movx	@dptr,a
   018E                     433 00130$:
   018E 90s00r06            434 	mov	dptr,#_CELL_next_status_x_1_1
   0191 E0                  435 	movx	a,@dptr
   0192 FA                  436 	mov	r2,a
   0193 A3                  437 	inc	dptr
   0194 E0                  438 	movx	a,@dptr
   0195 FB                  439 	mov	r3,a
   0196 C3                  440 	clr	c
   0197 EA                  441 	mov	a,r2
   0198 94 01               442 	subb	a,#0x01
   019A EB                  443 	mov	a,r3
   019B 64 80               444 	xrl	a,#0x80
   019D 94 80               445 	subb	a,#0x80
   019F 50 4A               446 	jnc	00136$
                    01A1    447 	C$cell.c$56$4$10 ==.
                            448 ;	../cell.c:56: c = T6963C_readFrom(cell->position.x, cell->position.y);
   01A1 85*03 82            449 	mov	dpl,_CELL_next_status_sloc1_1_0
   01A4 85*04 83            450 	mov	dph,(_CELL_next_status_sloc1_1_0 + 1)
   01A7 85*05 F0            451 	mov	b,(_CELL_next_status_sloc1_1_0 + 2)
   01AA 12s00r00            452 	lcall	__gptrget
   01AD FA                  453 	mov	r2,a
   01AE 8D 82               454 	mov	dpl,r5
   01B0 8E 83               455 	mov	dph,r6
   01B2 8F F0               456 	mov	b,r7
   01B4 12s00r00            457 	lcall	__gptrget
   01B7 90s00r00            458 	mov	dptr,#_T6963C_readFrom_PARM_2
   01BA F0                  459 	movx	@dptr,a
   01BB 8A 82               460 	mov	dpl,r2
   01BD C0 05               461 	push	ar5
   01BF C0 06               462 	push	ar6
   01C1 C0 07               463 	push	ar7
   01C3 12s00r00            464 	lcall	_T6963C_readFrom
   01C6 AA 82               465 	mov	r2,dpl
   01C8 D0 07               466 	pop	ar7
   01CA D0 06               467 	pop	ar6
   01CC D0 05               468 	pop	ar5
                    01CE    469 	C$cell.c$57$4$10 ==.
                            470 ;	../cell.c:57: if(c == COLOR_ALLIVE){
   01CE BA 21 0C            471 	cjne	r2,#0x21,00132$
                    01D1    472 	C$cell.c$58$5$11 ==.
                            473 ;	../cell.c:58: nearAliveCell++;
   01D1 90s00r0A            474 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   01D4 E0                  475 	movx	a,@dptr
   01D5 24 01               476 	add	a,#0x01
   01D7 F0                  477 	movx	@dptr,a
   01D8 A3                  478 	inc	dptr
   01D9 E0                  479 	movx	a,@dptr
   01DA 34 00               480 	addc	a,#0x00
   01DC F0                  481 	movx	@dptr,a
   01DD                     482 00132$:
                    01DD    483 	C$cell.c$55$3$9 ==.
                            484 ;	../cell.c:55: for(x = -1; x < 1; x++ ){
   01DD 90s00r06            485 	mov	dptr,#_CELL_next_status_x_1_1
   01E0 E0                  486 	movx	a,@dptr
   01E1 24 01               487 	add	a,#0x01
   01E3 F0                  488 	movx	@dptr,a
   01E4 A3                  489 	inc	dptr
   01E5 E0                  490 	movx	a,@dptr
   01E6 34 00               491 	addc	a,#0x00
   01E8 F0                  492 	movx	@dptr,a
   01E9 80 A3               493 	sjmp	00130$
   01EB                     494 00136$:
                    01EB    495 	C$cell.c$35$1$1 ==.
                            496 ;	../cell.c:35: for(y = -1; y < 1; y++ ){
   01EB 90s00r08            497 	mov	dptr,#_CELL_next_status_y_1_1
   01EE E0                  498 	movx	a,@dptr
   01EF 24 01               499 	add	a,#0x01
   01F1 F0                  500 	movx	@dptr,a
   01F2 A3                  501 	inc	dptr
   01F3 E0                  502 	movx	a,@dptr
   01F4 34 00               503 	addc	a,#0x00
   01F6 F0                  504 	movx	@dptr,a
   01F7 02s00r86            505 	ljmp	00134$
   01FA                     506 00137$:
                    01FA    507 	C$cell.c$65$1$1 ==.
                            508 ;	../cell.c:65: if(cell->actuel == DEAD && nearAliveCell == 3){	// CAS OU LA CELLULE ETAIT MORTE AU DEPART
   01FA 90s00r03            509 	mov	dptr,#_CELL_next_status_cell_1_1
   01FD E0                  510 	movx	a,@dptr
   01FE FA                  511 	mov	r2,a
   01FF A3                  512 	inc	dptr
   0200 E0                  513 	movx	a,@dptr
   0201 FB                  514 	mov	r3,a
   0202 A3                  515 	inc	dptr
   0203 E0                  516 	movx	a,@dptr
   0204 FC                  517 	mov	r4,a
   0205 74 02               518 	mov	a,#0x02
   0207 2A                  519 	add	a,r2
   0208 FD                  520 	mov	r5,a
   0209 E4                  521 	clr	a
   020A 3B                  522 	addc	a,r3
   020B FE                  523 	mov	r6,a
   020C 8C 07               524 	mov	ar7,r4
   020E 8D 82               525 	mov	dpl,r5
   0210 8E 83               526 	mov	dph,r6
   0212 8F F0               527 	mov	b,r7
   0214 12s00r00            528 	lcall	__gptrget
   0217 FD                  529 	mov	r5,a
   0218 BD 01 22            530 	cjne	r5,#0x01,00119$
   021B 90s00r0A            531 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   021E E0                  532 	movx	a,@dptr
   021F FE                  533 	mov	r6,a
   0220 A3                  534 	inc	dptr
   0221 E0                  535 	movx	a,@dptr
   0222 FF                  536 	mov	r7,a
   0223 BE 03 17            537 	cjne	r6,#0x03,00119$
   0226 BF 00 14            538 	cjne	r7,#0x00,00119$
                    0229    539 	C$cell.c$66$2$12 ==.
                            540 ;	../cell.c:66: cell->prochain = BORN;
   0229 74 03               541 	mov	a,#0x03
   022B 2A                  542 	add	a,r2
   022C FE                  543 	mov	r6,a
   022D E4                  544 	clr	a
   022E 3B                  545 	addc	a,r3
   022F FF                  546 	mov	r7,a
   0230 8C 00               547 	mov	ar0,r4
   0232 8E 82               548 	mov	dpl,r6
   0234 8F 83               549 	mov	dph,r7
   0236 88 F0               550 	mov	b,r0
   0238 74 02               551 	mov	a,#0x02
   023A 02s00r00            552 	ljmp	__gptrput
   023D                     553 00119$:
                    023D    554 	C$cell.c$67$1$1 ==.
                            555 ;	../cell.c:67: }else if(cell->actuel == ALIVE && !(nearAliveCell == 2 || nearAliveCell == 3)){ // CAS OU NOTRE CELLULE ETAIT VIVANTE AU DEPART
   023D ED                  556 	mov	a,r5
   023E 70 28               557 	jnz	00138$
   0240 90s00r0A            558 	mov	dptr,#_CELL_next_status_nearAliveCell_1_1
   0243 E0                  559 	movx	a,@dptr
   0244 FD                  560 	mov	r5,a
   0245 A3                  561 	inc	dptr
   0246 E0                  562 	movx	a,@dptr
   0247 FE                  563 	mov	r6,a
   0248 BD 02 04            564 	cjne	r5,#0x02,00178$
   024B BE 00 01            565 	cjne	r6,#0x00,00178$
   024E 22                  566 	ret
   024F                     567 00178$:
   024F BD 03 04            568 	cjne	r5,#0x03,00179$
   0252 BE 00 01            569 	cjne	r6,#0x00,00179$
   0255 22                  570 	ret
   0256                     571 00179$:
                    0256    572 	C$cell.c$68$2$13 ==.
                            573 ;	../cell.c:68: cell->prochain = DEAD;
   0256 74 03               574 	mov	a,#0x03
   0258 2A                  575 	add	a,r2
   0259 FA                  576 	mov	r2,a
   025A E4                  577 	clr	a
   025B 3B                  578 	addc	a,r3
   025C FB                  579 	mov	r3,a
   025D 8A 82               580 	mov	dpl,r2
   025F 8B 83               581 	mov	dph,r3
   0261 8C F0               582 	mov	b,r4
   0263 74 01               583 	mov	a,#0x01
                    0265    584 	C$cell.c$70$2$1 ==.
                    0265    585 	XG$CELL_next_status$0$0 ==.
   0265 02s00r00            586 	ljmp	__gptrput
   0268                     587 00138$:
   0268 22                  588 	ret
                            589 ;------------------------------------------------------------
                            590 ;Allocation info for local variables in function 'CELL_switch_status'
                            591 ;------------------------------------------------------------
                            592 ;cell                      Allocated with name '_CELL_switch_status_cell_1_1'
                            593 ;------------------------------------------------------------
                    0269    594 	G$CELL_switch_status$0$0 ==.
                    0269    595 	C$cell.c$74$2$1 ==.
                            596 ;	../cell.c:74: void CELL_switch_status(Cell *cell){
                            597 ;	-----------------------------------------
                            598 ;	 function CELL_switch_status
                            599 ;	-----------------------------------------
   0269                     600 _CELL_switch_status:
   0269 AA F0               601 	mov	r2,b
   026B AB 83               602 	mov	r3,dph
   026D E5 82               603 	mov	a,dpl
   026F 90s00r0C            604 	mov	dptr,#_CELL_switch_status_cell_1_1
   0272 F0                  605 	movx	@dptr,a
   0273 A3                  606 	inc	dptr
   0274 EB                  607 	mov	a,r3
   0275 F0                  608 	movx	@dptr,a
   0276 A3                  609 	inc	dptr
   0277 EA                  610 	mov	a,r2
   0278 F0                  611 	movx	@dptr,a
                    0279    612 	C$cell.c$76$1$1 ==.
                            613 ;	../cell.c:76: cell->actuel = cell->prochain;
   0279 90s00r0C            614 	mov	dptr,#_CELL_switch_status_cell_1_1
   027C E0                  615 	movx	a,@dptr
   027D FA                  616 	mov	r2,a
   027E A3                  617 	inc	dptr
   027F E0                  618 	movx	a,@dptr
   0280 FB                  619 	mov	r3,a
   0281 A3                  620 	inc	dptr
   0282 E0                  621 	movx	a,@dptr
   0283 FC                  622 	mov	r4,a
   0284 74 02               623 	mov	a,#0x02
   0286 2A                  624 	add	a,r2
   0287 FD                  625 	mov	r5,a
   0288 E4                  626 	clr	a
   0289 3B                  627 	addc	a,r3
   028A FE                  628 	mov	r6,a
   028B 8C 07               629 	mov	ar7,r4
   028D 74 03               630 	mov	a,#0x03
   028F 2A                  631 	add	a,r2
   0290 FA                  632 	mov	r2,a
   0291 E4                  633 	clr	a
   0292 3B                  634 	addc	a,r3
   0293 FB                  635 	mov	r3,a
   0294 8A 82               636 	mov	dpl,r2
   0296 8B 83               637 	mov	dph,r3
   0298 8C F0               638 	mov	b,r4
   029A 12s00r00            639 	lcall	__gptrget
   029D 8D 82               640 	mov	dpl,r5
   029F 8E 83               641 	mov	dph,r6
   02A1 8F F0               642 	mov	b,r7
                    02A3    643 	C$cell.c$77$1$1 ==.
                    02A3    644 	XG$CELL_switch_status$0$0 ==.
   02A3 02s00r00            645 	ljmp	__gptrput
                            646 	.area CSEG    (CODE)
                            647 	.area CONST   (CODE)
                            648 	.area XINIT   (CODE)
                            649 	.area CABS    (ABS,CODE)
